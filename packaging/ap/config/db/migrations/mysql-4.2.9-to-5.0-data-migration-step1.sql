DELIMITER //

DROP PROCEDURE IF EXISTS MIGRATE_42_TO_50_utc_conversion
//

CREATE PROCEDURE MIGRATE_42_TO_50_utc_conversion(IN TIMEZONE VARCHAR(255))
BEGIN
    UPDATE TB_ACTION_AUDIT
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_ACTION_AUDIT
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_ACTION_AUDIT
    SET REVISION_DATE = CONVERT_TZ(REVISION_DATE, TIMEZONE, 'UTC')
    WHERE REVISION_DATE IS NOT NULL;

    UPDATE TB_ALERT
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_ALERT
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_ALERT
    SET NEXT_ATTEMPT = CONVERT_TZ(NEXT_ATTEMPT, TIMEZONE, 'UTC')
    WHERE NEXT_ATTEMPT IS NOT NULL;

    UPDATE TB_ALERT
    SET PROCESSED_TIME = CONVERT_TZ(PROCESSED_TIME, TIMEZONE, 'UTC')
    WHERE PROCESSED_TIME IS NOT NULL;

    UPDATE TB_ALERT
    SET REPORTING_TIME = CONVERT_TZ(REPORTING_TIME, TIMEZONE, 'UTC')
    WHERE REPORTING_TIME IS NOT NULL;

    UPDATE TB_ALERT
    SET REPORTING_TIME_FAILURE = CONVERT_TZ(REPORTING_TIME_FAILURE, TIMEZONE, 'UTC')
    WHERE REPORTING_TIME_FAILURE IS NOT NULL;

    UPDATE TB_AUTHENTICATION_ENTRY
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_AUTHENTICATION_ENTRY
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_AUTHENTICATION_ENTRY
    SET PASSWORD_CHANGE_DATE = CONVERT_TZ(PASSWORD_CHANGE_DATE, TIMEZONE, 'UTC')
    WHERE PASSWORD_CHANGE_DATE IS NOT NULL;

    UPDATE TB_AUTHENTICATION_ENTRY
    SET SUSPENSION_DATE = CONVERT_TZ(SUSPENSION_DATE, TIMEZONE, 'UTC')
    WHERE SUSPENSION_DATE IS NOT NULL;

    UPDATE TB_AUTHENTICATION_ENTRY_AUD
    SET PASSWORD_CHANGE_DATE = CONVERT_TZ(PASSWORD_CHANGE_DATE, TIMEZONE, 'UTC')
    WHERE PASSWORD_CHANGE_DATE IS NOT NULL;

    UPDATE TB_BACKEND_FILTER
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_BACKEND_FILTER
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_CERTIFICATE
    SET ALERT_EXP_NOTIFICATION_DATE = CONVERT_TZ(ALERT_EXP_NOTIFICATION_DATE, TIMEZONE, 'UTC')
    WHERE ALERT_EXP_NOTIFICATION_DATE IS NOT NULL;

    UPDATE TB_CERTIFICATE
    SET ALERT_IMM_NOTIFICATION_DATE = CONVERT_TZ(ALERT_IMM_NOTIFICATION_DATE, TIMEZONE, 'UTC')
    WHERE ALERT_IMM_NOTIFICATION_DATE IS NOT NULL;

    UPDATE TB_CERTIFICATE
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_CERTIFICATE
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_CERTIFICATE
    SET REVOKE_NOTIFICATION_DATE = CONVERT_TZ(REVOKE_NOTIFICATION_DATE, TIMEZONE, 'UTC')
    WHERE REVOKE_NOTIFICATION_DATE IS NOT NULL;

    UPDATE TB_CERTIFICATE
    SET NOT_VALID_BEFORE_DATE = CONVERT_TZ(NOT_VALID_BEFORE_DATE, TIMEZONE, 'UTC')
    WHERE NOT_VALID_BEFORE_DATE IS NOT NULL;

    UPDATE TB_CERTIFICATE
    SET NOT_VALID_AFTER_DATE = CONVERT_TZ(NOT_VALID_AFTER_DATE, TIMEZONE, 'UTC')
    WHERE NOT_VALID_AFTER_DATE IS NOT NULL;

    UPDATE TB_CERTIFICATE_AUD
    SET ALERT_EXP_NOTIFICATION_DATE = CONVERT_TZ(ALERT_EXP_NOTIFICATION_DATE, TIMEZONE, 'UTC')
    WHERE ALERT_EXP_NOTIFICATION_DATE IS NOT NULL;

    UPDATE TB_CERTIFICATE_AUD
    SET ALERT_IMM_NOTIFICATION_DATE = CONVERT_TZ(ALERT_IMM_NOTIFICATION_DATE, TIMEZONE, 'UTC')
    WHERE ALERT_IMM_NOTIFICATION_DATE IS NOT NULL;

    UPDATE TB_CERTIFICATE_AUD
    SET REVOKE_NOTIFICATION_DATE = CONVERT_TZ(REVOKE_NOTIFICATION_DATE, TIMEZONE, 'UTC')
    WHERE REVOKE_NOTIFICATION_DATE IS NOT NULL;

    UPDATE TB_CERTIFICATE_AUD
    SET NOT_VALID_BEFORE_DATE = CONVERT_TZ(NOT_VALID_BEFORE_DATE, TIMEZONE, 'UTC')
    WHERE NOT_VALID_BEFORE_DATE IS NOT NULL;

    UPDATE TB_CERTIFICATE_AUD
    SET NOT_VALID_AFTER_DATE = CONVERT_TZ(NOT_VALID_AFTER_DATE, TIMEZONE, 'UTC')
    WHERE NOT_VALID_AFTER_DATE IS NOT NULL;

    UPDATE TB_COMMAND
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_COMMAND
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_COMMAND_PROPERTY
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_COMMAND_PROPERTY
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_ENCRYPTION_KEY
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_ENCRYPTION_KEY
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_ERROR
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_ERROR
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_ERROR_LOG
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_ERROR_LOG
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_ERROR_LOG
    SET NOTIFIED = CONVERT_TZ(NOTIFIED, TIMEZONE, 'UTC')
    WHERE NOTIFIED IS NOT NULL;

    UPDATE TB_ERROR_LOG
    SET TIME_STAMP = CONVERT_TZ(TIME_STAMP, TIMEZONE, 'UTC')
    WHERE TIME_STAMP IS NOT NULL;

    UPDATE TB_EVENT
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_EVENT
    SET LAST_ALERT_DATE = CONVERT_TZ(LAST_ALERT_DATE, TIMEZONE, 'UTC')
    WHERE LAST_ALERT_DATE IS NOT NULL;

    UPDATE TB_EVENT
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_EVENT
    SET REPORTING_TIME = CONVERT_TZ(REPORTING_TIME, TIMEZONE, 'UTC')
    WHERE REPORTING_TIME IS NOT NULL;

    UPDATE TB_EVENT_ALERT
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_EVENT_ALERT
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_EVENT_PROPERTY
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_EVENT_PROPERTY
    SET DATE_VALUE = CONVERT_TZ(DATE_VALUE, TIMEZONE, 'UTC')
    WHERE DATE_VALUE IS NOT NULL;

    UPDATE TB_EVENT_PROPERTY
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_MESSAGE_ACKNW
    SET ACKNOWLEDGE_DATE = CONVERT_TZ(ACKNOWLEDGE_DATE, TIMEZONE, 'UTC')
    WHERE ACKNOWLEDGE_DATE IS NOT NULL;

    UPDATE TB_MESSAGE_ACKNW
    SET CREATE_DATE = CONVERT_TZ(CREATE_DATE, TIMEZONE, 'UTC')
    WHERE CREATE_DATE IS NOT NULL;

    UPDATE TB_MESSAGE_ACKNW
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_MESSAGE_ACKNW
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_MESSAGE_ACKNW_PROP
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_MESSAGE_ACKNW_PROP
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PROPERTY
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PROPERTY
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_MESSAGING
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_MESSAGING
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_MESSAGING_LOCK
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_MESSAGING_LOCK
    SET MESSAGE_RECEIVED = CONVERT_TZ(MESSAGE_RECEIVED, TIMEZONE, 'UTC')
    WHERE MESSAGE_RECEIVED IS NOT NULL;

    UPDATE TB_MESSAGING_LOCK
    SET MESSAGE_STALED = CONVERT_TZ(MESSAGE_STALED, TIMEZONE, 'UTC')
    WHERE MESSAGE_STALED IS NOT NULL;

    UPDATE TB_MESSAGING_LOCK
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_MESSAGING_LOCK
    SET NEXT_ATTEMPT = CONVERT_TZ(NEXT_ATTEMPT, TIMEZONE, 'UTC')
    WHERE NEXT_ATTEMPT IS NOT NULL;

    UPDATE TB_PART_INFO
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PART_INFO
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PARTY_ID
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PARTY_ID
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PLUGIN_USER_PASSWD_HISTORY
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PLUGIN_USER_PASSWD_HISTORY
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PLUGIN_USER_PASSWD_HISTORY
    SET PASSWORD_CHANGE_DATE = CONVERT_TZ(PASSWORD_CHANGE_DATE, TIMEZONE, 'UTC')
    WHERE PASSWORD_CHANGE_DATE IS NOT NULL;

    UPDATE TB_PM_ACTION
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_ACTION
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PM_AGREEMENT
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_AGREEMENT
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PM_BUSINESS_PROCESS
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_BUSINESS_PROCESS
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PM_CONFIGURATION
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_CONFIGURATION
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PM_CONFIGURATION_RAW
    SET CONFIGURATION_DATE = CONVERT_TZ(CONFIGURATION_DATE, TIMEZONE, 'UTC')
    WHERE CONFIGURATION_DATE IS NOT NULL;

    UPDATE TB_PM_CONFIGURATION_RAW
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_CONFIGURATION_RAW
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PM_CONFIGURATION_RAW_AUD
    SET CONFIGURATION_DATE = CONVERT_TZ(CONFIGURATION_DATE, TIMEZONE, 'UTC')
    WHERE CONFIGURATION_DATE IS NOT NULL;

    UPDATE TB_PM_ERROR_HANDLING
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_ERROR_HANDLING
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PM_JOIN_PAYLOAD_PROFILE
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_JOIN_PAYLOAD_PROFILE
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PM_JOIN_PROCESS_INIT_PARTY
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_JOIN_PROCESS_INIT_PARTY
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PM_JOIN_PROCESS_LEG
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_JOIN_PROCESS_LEG
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PM_JOIN_PROCESS_RESP_PARTY
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_JOIN_PROCESS_RESP_PARTY
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PM_JOIN_PROPERTY_SET
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_JOIN_PROPERTY_SET
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PM_LEG
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_LEG
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PM_LEG_MPC
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_LEG_MPC
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PM_MEP
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_MEP
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PM_MEP_BINDING
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_MEP_BINDING
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PM_MESSAGE_PROPERTY
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_MESSAGE_PROPERTY
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PM_MESSAGE_PROPERTY_SET
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_MESSAGE_PROPERTY_SET
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PM_MPC
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_MPC
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PM_PARTY
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_PARTY
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PM_PARTY_ID_TYPE
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_PARTY_ID_TYPE
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PM_PARTY_IDENTIFIER
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_PARTY_IDENTIFIER
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PM_PAYLOAD
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_PAYLOAD
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PM_PAYLOAD_PROFILE
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_PAYLOAD_PROFILE
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PM_PROCESS
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_PROCESS
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PM_RECEPTION_AWARENESS
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_RECEPTION_AWARENESS
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PM_RELIABILITY
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_RELIABILITY
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PM_ROLE
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_ROLE
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PM_SECURITY
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_SECURITY
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PM_SERVICE
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_SERVICE
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_PM_SPLITTING
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_PM_SPLITTING
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_RECEIPT
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_RECEIPT
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_RECEIPT_DATA
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_RECEIPT_DATA
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_REV_CHANGES
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_REV_CHANGES
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_REV_INFO
    SET REVISION_DATE = CONVERT_TZ(REVISION_DATE, TIMEZONE, 'UTC')
    WHERE REVISION_DATE IS NOT NULL;

    UPDATE TB_ROUTING_CRITERIA
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_ROUTING_CRITERIA
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_SEND_ATTEMPT
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_SEND_ATTEMPT
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_SEND_ATTEMPT
    SET START_DATE = CONVERT_TZ(START_DATE, TIMEZONE, 'UTC')
    WHERE START_DATE IS NOT NULL;

    UPDATE TB_SEND_ATTEMPT
    SET END_DATE = CONVERT_TZ(END_DATE, TIMEZONE, 'UTC')
    WHERE END_DATE IS NOT NULL;

    UPDATE TB_MESSAGE_FRAGMENT
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_MESSAGE_FRAGMENT
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_MESSAGE_GROUP
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_MESSAGE_GROUP
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_MESSAGE_HEADER
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_MESSAGE_HEADER
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_USER
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_USER
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_USER
    SET PASSWORD_CHANGE_DATE = CONVERT_TZ(PASSWORD_CHANGE_DATE, TIMEZONE, 'UTC')
    WHERE PASSWORD_CHANGE_DATE IS NOT NULL;

    UPDATE TB_USER
    SET SUSPENSION_DATE = CONVERT_TZ(SUSPENSION_DATE, TIMEZONE, 'UTC')
    WHERE SUSPENSION_DATE IS NOT NULL;

    UPDATE TB_USER_AUD
    SET PASSWORD_CHANGE_DATE = CONVERT_TZ(PASSWORD_CHANGE_DATE, TIMEZONE, 'UTC')
    WHERE PASSWORD_CHANGE_DATE IS NOT NULL;

    UPDATE TB_USER_MESSAGE
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_USER_MESSAGE
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_SIGNAL_MESSAGE
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_SIGNAL_MESSAGE
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_MESSAGE_LOG
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_MESSAGE_LOG
    SET DELETED = CONVERT_TZ(DELETED, TIMEZONE, 'UTC')
    WHERE DELETED IS NOT NULL;

    UPDATE TB_MESSAGE_LOG
    SET DOWNLOADED = CONVERT_TZ(DOWNLOADED, TIMEZONE, 'UTC')
    WHERE DOWNLOADED IS NOT NULL;

    UPDATE TB_MESSAGE_LOG
    SET FAILED = CONVERT_TZ(FAILED, TIMEZONE, 'UTC')
    WHERE FAILED IS NOT NULL;

    UPDATE TB_MESSAGE_LOG
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_MESSAGE_LOG
    SET NEXT_ATTEMPT = CONVERT_TZ(NEXT_ATTEMPT, TIMEZONE, 'UTC')
    WHERE NEXT_ATTEMPT IS NOT NULL;

    UPDATE TB_MESSAGE_LOG
    SET RECEIVED = CONVERT_TZ(RECEIVED, TIMEZONE, 'UTC')
    WHERE RECEIVED IS NOT NULL;

    UPDATE TB_MESSAGE_LOG
    SET RESTORED = CONVERT_TZ(RESTORED, TIMEZONE, 'UTC')
    WHERE RESTORED IS NOT NULL;

    UPDATE TB_MESSAGE_INFO
    SET TIME_STAMP = CONVERT_TZ(TIME_STAMP, TIMEZONE, 'UTC')
    WHERE TIME_STAMP IS NOT NULL;

    UPDATE TB_MESSAGE_INFO
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_MESSAGE_INFO
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_RAWENVELOPE_LOG
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_RAWENVELOPE_LOG
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_USER_PASSWORD_HISTORY
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_USER_PASSWORD_HISTORY
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_USER_PASSWORD_HISTORY
    SET PASSWORD_CHANGE_DATE = CONVERT_TZ(PASSWORD_CHANGE_DATE, TIMEZONE, 'UTC')
    WHERE PASSWORD_CHANGE_DATE IS NOT NULL;

    UPDATE TB_USER_ROLE
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_USER_ROLE
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_USER_ROLES
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_USER_ROLES
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE WS_PLUGIN_TB_MESSAGE_LOG
    SET RECEIVED = CONVERT_TZ(RECEIVED, TIMEZONE, 'UTC')
    WHERE RECEIVED IS NOT NULL;

    COMMIT;
END
//

DROP PROCEDURE IF EXISTS MIGRATE_42_TO_50_utc_conversion_multitenancy
//

CREATE PROCEDURE MIGRATE_42_TO_50_utc_conversion_multitenancy(IN TIMEZONE VARCHAR(255))
BEGIN
    UPDATE TB_ALERT
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_ALERT
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_ALERT
    SET NEXT_ATTEMPT = CONVERT_TZ(NEXT_ATTEMPT, TIMEZONE, 'UTC')
    WHERE NEXT_ATTEMPT IS NOT NULL;

    UPDATE TB_ALERT
    SET PROCESSED_TIME = CONVERT_TZ(PROCESSED_TIME, TIMEZONE, 'UTC')
    WHERE PROCESSED_TIME IS NOT NULL;

    UPDATE TB_ALERT
    SET REPORTING_TIME = CONVERT_TZ(REPORTING_TIME, TIMEZONE, 'UTC')
    WHERE REPORTING_TIME IS NOT NULL;

    UPDATE TB_ALERT
    SET REPORTING_TIME_FAILURE = CONVERT_TZ(REPORTING_TIME_FAILURE, TIMEZONE, 'UTC')
    WHERE REPORTING_TIME_FAILURE IS NOT NULL;

    UPDATE TB_COMMAND
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_COMMAND
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_COMMAND_PROPERTY
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_COMMAND_PROPERTY
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_EVENT
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_EVENT
    SET LAST_ALERT_DATE = CONVERT_TZ(LAST_ALERT_DATE, TIMEZONE, 'UTC')
    WHERE LAST_ALERT_DATE IS NOT NULL;

    UPDATE TB_EVENT
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_EVENT
    SET REPORTING_TIME = CONVERT_TZ(REPORTING_TIME, TIMEZONE, 'UTC')
    WHERE REPORTING_TIME IS NOT NULL;

    UPDATE TB_EVENT_ALERT
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_EVENT_ALERT
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_EVENT_PROPERTY
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_EVENT_PROPERTY
    SET DATE_VALUE = CONVERT_TZ(DATE_VALUE, TIMEZONE, 'UTC')
    WHERE DATE_VALUE IS NOT NULL;

    UPDATE TB_EVENT_PROPERTY
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_REV_CHANGES
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_REV_CHANGES
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_REV_INFO
    SET REVISION_DATE = CONVERT_TZ(REVISION_DATE, TIMEZONE, 'UTC')
    WHERE REVISION_DATE IS NOT NULL;

    UPDATE TB_USER
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_USER
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_USER
    SET PASSWORD_CHANGE_DATE = CONVERT_TZ(PASSWORD_CHANGE_DATE, TIMEZONE, 'UTC')
    WHERE PASSWORD_CHANGE_DATE IS NOT NULL;

    UPDATE TB_USER
    SET SUSPENSION_DATE = CONVERT_TZ(SUSPENSION_DATE, TIMEZONE, 'UTC')
    WHERE SUSPENSION_DATE IS NOT NULL;

    UPDATE TB_USER_AUD
    SET PASSWORD_CHANGE_DATE = CONVERT_TZ(PASSWORD_CHANGE_DATE, TIMEZONE, 'UTC')
    WHERE PASSWORD_CHANGE_DATE IS NOT NULL;

    UPDATE TB_USER_DOMAIN
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_USER_DOMAIN
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_USER_PASSWORD_HISTORY
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_USER_PASSWORD_HISTORY
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_USER_PASSWORD_HISTORY
    SET PASSWORD_CHANGE_DATE = CONVERT_TZ(PASSWORD_CHANGE_DATE, TIMEZONE, 'UTC')
    WHERE PASSWORD_CHANGE_DATE IS NOT NULL;

    UPDATE TB_USER_ROLE
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_USER_ROLE
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    UPDATE TB_USER_ROLES
    SET CREATION_TIME = CONVERT_TZ(CREATION_TIME, TIMEZONE, 'UTC')
    WHERE CREATION_TIME IS NOT NULL;

    UPDATE TB_USER_ROLES
    SET MODIFICATION_TIME = CONVERT_TZ(MODIFICATION_TIME, TIMEZONE, 'UTC')
    WHERE MODIFICATION_TIME IS NOT NULL;

    COMMIT;
END
//

--  Changeset src/main/resources/db/archive/5.0/migration/common/changelog-42-50-data-migration-step1.xml::EDELIVERY-7970-prepare-common::Catalin Enache
--  drop previously created tables for migration - MIGR_* and TB_D tables
DROP TABLE IF EXISTS MIGR_TB_ALERT
//

DROP TABLE IF EXISTS MIGR_TB_EVENT
//

DROP TABLE IF EXISTS MIGR_TB_EVENT_ALERT
//

DROP TABLE IF EXISTS MIGR_TB_EVENT_PROPERTY
//

DROP TABLE IF EXISTS MIGR_TB_COMMAND
//

DROP TABLE IF EXISTS MIGR_TB_COMMAND_PROPERTY
//

DROP TABLE IF EXISTS MIGR_TB_USER
//

DROP TABLE IF EXISTS MIGR_TB_USER_PASSWORD_HISTORY
//

DROP TABLE IF EXISTS MIGR_TB_USER_ROLE
//

DROP TABLE IF EXISTS MIGR_TB_USER_ROLES
//

DROP TABLE IF EXISTS MIGR_TB_REV_INFO
//

DROP TABLE IF EXISTS MIGR_TB_REV_CHANGES
//

DROP TABLE IF EXISTS MIGR_TB_USER_AUD
//

DROP TABLE IF EXISTS MIGR_TB_USER_ROLE_AUD
//

DROP TABLE IF EXISTS MIGR_TB_USER_ROLES_AUD
//

--  Changeset src/main/resources/db/archive/5.0/migration/common/changelog-42-50-data-migration-step1.xml::EDELIVERY-7970-recreate-dictionary-tables-common::Catalin Enache
CREATE TABLE TB_D_TIMEZONE_OFFSET (ID_PK BIGINT AUTO_INCREMENT NOT NULL, NEXT_ATTEMPT_TIMEZONE_ID VARCHAR(255) NULL COMMENT 'Time zone ID on the application server to use when converting the next attempt for displaying it to the user', NEXT_ATTEMPT_OFFSET_SECONDS INT NULL COMMENT 'Offset in seconds of the time zone on the application server to use when converting the next attempt for displaying it to the user', CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_D_TIMEZONE_OFFSET PRIMARY KEY (ID_PK));

ALTER TABLE TB_D_TIMEZONE_OFFSET ADD CONSTRAINT UK_D_TIMEZONE_OFFSET UNIQUE (NEXT_ATTEMPT_TIMEZONE_ID, NEXT_ATTEMPT_OFFSET_SECONDS);

--  Changeset src/main/resources/db/archive/5.0/migration/common/changelog-42-50-data-migration-step1.xml::EDELIVERY-8441-recreate-MIGR-tables-for-primary-key-migration-common::Sebastian-Ion TINCU
CREATE TABLE MIGR_TB_REV_INFO (ID BIGINT AUTO_INCREMENT NOT NULL, TIMESTAMP BIGINT NULL, REVISION_DATE timestamp NULL, USER_NAME VARCHAR(255) NULL, CONSTRAINT PK_REV_INFO PRIMARY KEY (ID));

CREATE TABLE MIGR_TB_REV_CHANGES (ID_PK BIGINT AUTO_INCREMENT NOT NULL, REV BIGINT NULL, AUDIT_ORDER INT NULL, ENTITY_NAME VARCHAR(255) NULL, GROUP_NAME VARCHAR(255) NULL, ENTITY_ID VARCHAR(255) NULL, MODIFICATION_TYPE VARCHAR(255) NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_REV_CHANGES PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_COMMAND (ID_PK BIGINT AUTO_INCREMENT NOT NULL, SERVER_NAME VARCHAR(255) NOT NULL COMMENT 'The target server name', COMMAND_NAME VARCHAR(255) NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_COMMAND PRIMARY KEY (ID_PK)) COMMENT='Stores commands to be executed by different nodes in clustered environments';

CREATE TABLE MIGR_TB_COMMAND_PROPERTY (PROPERTY_NAME VARCHAR(50) NOT NULL, PROPERTY_VALUE VARCHAR(255) NULL, FK_COMMAND BIGINT NOT NULL COMMENT 'Reference to the parent command', CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL) COMMENT='Stores properties/parameters of the commands to be executed by different nodes in clustered environments';

CREATE TABLE MIGR_TB_ALERT (ID_PK BIGINT AUTO_INCREMENT NOT NULL, ALERT_TYPE VARCHAR(50) NOT NULL, ATTEMPTS_NUMBER INT NULL, MAX_ATTEMPTS_NUMBER INT NOT NULL, PROCESSED BIT(1) NULL, PROCESSED_TIME timestamp NULL, REPORTING_TIME timestamp NULL, REPORTING_TIME_FAILURE timestamp NULL, NEXT_ATTEMPT timestamp NULL, FK_TIMEZONE_OFFSET BIGINT NULL, ALERT_STATUS VARCHAR(50) NOT NULL, ALERT_LEVEL VARCHAR(20) NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_ALERT PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_EVENT (ID_PK BIGINT AUTO_INCREMENT NOT NULL, EVENT_TYPE VARCHAR(50) NOT NULL, REPORTING_TIME timestamp NULL, LAST_ALERT_DATE timestamp NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_EVENT PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_EVENT_ALERT (FK_EVENT BIGINT NOT NULL, FK_ALERT BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_EVENT_ALERT PRIMARY KEY (FK_EVENT, FK_ALERT));

CREATE TABLE MIGR_TB_EVENT_PROPERTY (ID_PK BIGINT AUTO_INCREMENT NOT NULL, PROPERTY_TYPE VARCHAR(50) NOT NULL, FK_EVENT BIGINT NOT NULL, DTYPE VARCHAR(31) NULL, STRING_VALUE VARCHAR(255) NULL, DATE_VALUE timestamp NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_EVENT_PROPERTY PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_USER (ID_PK BIGINT AUTO_INCREMENT NOT NULL, USER_EMAIL VARCHAR(255) NULL, USER_ENABLED BIT(1) NOT NULL, USER_PASSWORD VARCHAR(255) NOT NULL, USER_NAME VARCHAR(255) NOT NULL, OPTLOCK INT NULL, ATTEMPT_COUNT INT DEFAULT 0 NULL, SUSPENSION_DATE timestamp NULL, USER_DELETED BIT(1) DEFAULT 0 NOT NULL, PASSWORD_CHANGE_DATE timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, DEFAULT_PASSWORD BIT(1) DEFAULT 0 NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_USER PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_USER_PASSWORD_HISTORY (ID_PK BIGINT AUTO_INCREMENT NOT NULL, USER_ID BIGINT NOT NULL, USER_PASSWORD VARCHAR(255) NOT NULL, PASSWORD_CHANGE_DATE timestamp NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_USER_PASSWORD_HISTORY PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_USER_ROLE (ID_PK BIGINT AUTO_INCREMENT NOT NULL, ROLE_NAME VARCHAR(255) NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_USER_ROLE PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_USER_ROLES (USER_ID BIGINT NOT NULL, ROLE_ID BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PRIMARY PRIMARY KEY (USER_ID, ROLE_ID));

CREATE TABLE MIGR_TB_USER_ROLES_AUD (REV BIGINT NULL, REVTYPE TINYINT NULL, USER_ID BIGINT NULL, ROLE_ID BIGINT NULL);

--  Changeset src/main/resources/db/archive/5.0/migration/single-tenancy/changelog-42-50-data-migration-step1.xml::EDELIVERY-7970-prepare-single-tenancy::Catalin Enache
--  drop previously created tables for migration - MIGR_* and TB_D tables
DROP TABLE IF EXISTS MIGR_TB_USER_MESSAGE
//

DROP TABLE IF EXISTS MIGR_TB_SIGNAL_MESSAGE
//

DROP TABLE IF EXISTS MIGR_TB_SJ_MESSAGE_FRAGMENT
//

DROP TABLE IF EXISTS MIGR_TB_SJ_MESSAGE_GROUP
//

DROP TABLE IF EXISTS MIGR_TB_SJ_MESSAGE_HEADER
//

DROP TABLE IF EXISTS MIGR_TB_USER_MESSAGE_LOG
//

DROP TABLE IF EXISTS MIGR_TB_SIGNAL_MESSAGE_LOG
//

DROP TABLE IF EXISTS MIGR_TB_USER_MESSAGE_RAW
//

DROP TABLE IF EXISTS MIGR_TB_SIGNAL_MESSAGE_RAW
//

DROP TABLE IF EXISTS MIGR_TB_RECEIPT
//

DROP TABLE IF EXISTS MIGR_TB_MESSAGE_PROPERTIES
//

DROP TABLE IF EXISTS MIGR_TB_PART_INFO
//

DROP TABLE IF EXISTS MIGR_TB_PART_PROPERTIES
//

DROP TABLE IF EXISTS MIGR_TB_ERROR_LOG
//

DROP TABLE IF EXISTS MIGR_TB_MESSAGE_ACKNW
//

DROP TABLE IF EXISTS MIGR_TB_SEND_ATTEMPT
//

DROP TABLE IF EXISTS TB_D_MPC
//

DROP TABLE IF EXISTS TB_D_ROLE
//

DROP TABLE IF EXISTS TB_D_SERVICE
//

DROP TABLE IF EXISTS TB_D_AGREEMENT
//

DROP TABLE IF EXISTS TB_D_ACTION
//

DROP TABLE IF EXISTS TB_D_PARTY
//

DROP TABLE IF EXISTS TB_D_MESSAGE_STATUS
//

DROP TABLE IF EXISTS TB_D_NOTIFICATION_STATUS
//

DROP TABLE IF EXISTS TB_D_MESSAGE_PROPERTY
//

DROP TABLE IF EXISTS TB_D_PART_PROPERTY
//

DROP TABLE IF EXISTS TB_D_MSH_ROLE
//

DROP TABLE IF EXISTS MIGR_TB_ACTION_AUDIT
//

DROP TABLE IF EXISTS MIGR_TB_AUTHENTICATION_ENTRY
//

DROP TABLE IF EXISTS MIGR_TB_PLUGIN_USR_PASSWD_HIST
//

DROP TABLE IF EXISTS MIGR_TB_BACKEND_FILTER
//

DROP TABLE IF EXISTS MIGR_TB_ROUTING_CRITERIA
//

DROP TABLE IF EXISTS MIGR_TB_CERTIFICATE
//

DROP TABLE IF EXISTS MIGR_TB_ENCRYPTION_KEY
//

DROP TABLE IF EXISTS MIGR_TB_MESSAGE_ACKNW_PROP
//

DROP TABLE IF EXISTS MIGR_TB_MESSAGING_LOCK
//

DROP TABLE IF EXISTS MIGR_TB_PM_BUSINESS_PROCESS
//

DROP TABLE IF EXISTS MIGR_TB_PM_ACTION
//

DROP TABLE IF EXISTS MIGR_TB_PM_AGREEMENT
//

DROP TABLE IF EXISTS MIGR_TB_PM_ERROR_HANDLING
//

DROP TABLE IF EXISTS MIGR_TB_PM_MEP
//

DROP TABLE IF EXISTS MIGR_TB_PM_MEP_BINDING
//

DROP TABLE IF EXISTS MIGR_TB_PM_MESSAGE_PROPERTY
//

DROP TABLE IF EXISTS MIGR_TB_PM_MSG_PROPERTY_SET
//

DROP TABLE IF EXISTS MIGR_TB_PM_JOIN_PROPERTY_SET
//

DROP TABLE IF EXISTS MIGR_TB_PM_PARTY
//

DROP TABLE IF EXISTS MIGR_TB_PM_CONFIGURATION
//

DROP TABLE IF EXISTS MIGR_TB_PM_MPC
//

DROP TABLE IF EXISTS MIGR_TB_PM_PARTY_ID_TYPE
//

DROP TABLE IF EXISTS MIGR_TB_PM_PARTY_IDENTIFIER
//

DROP TABLE IF EXISTS MIGR_TB_PM_PAYLOAD
//

DROP TABLE IF EXISTS MIGR_TB_PM_PAYLOAD_PROFILE
//

DROP TABLE IF EXISTS MIGR_TB_PM_JOIN_PAYLD_PROFILE
//

DROP TABLE IF EXISTS MIGR_TB_PM_RECEPTION_AWARENESS
//

DROP TABLE IF EXISTS MIGR_TB_PM_RELIABILITY
//

DROP TABLE IF EXISTS MIGR_TB_PM_ROLE
//

DROP TABLE IF EXISTS MIGR_TB_PM_SECURITY
//

DROP TABLE IF EXISTS MIGR_TB_PM_SERVICE
//

DROP TABLE IF EXISTS MIGR_TB_PM_SPLITTING
//

DROP TABLE IF EXISTS MIGR_TB_PM_LEG
//

DROP TABLE IF EXISTS MIGR_TB_PM_LEG_MPC
//

DROP TABLE IF EXISTS MIGR_TB_PM_PROCESS
//

DROP TABLE IF EXISTS MIGR_TB_PM_JOIN_PROC_INI_PARTY
//

DROP TABLE IF EXISTS MIGR_TB_PM_JOIN_PROCESS_LEG
//

DROP TABLE IF EXISTS MIGR_TB_PM_JOIN_PROC_RSP_PARTY
//

DROP TABLE IF EXISTS MIGR_TB_PM_CONFIGURATION_RAW
//

DROP TABLE IF EXISTS MIGR_WS_PLUGIN_TB_MESSAGE_LOG
//

DROP TABLE IF EXISTS MIGR_TB_AUTH_ENTRY_AUD
//

DROP TABLE IF EXISTS MIGR_TB_BACK_RCRITERIA_AUD
//

DROP TABLE IF EXISTS MIGR_TB_BACKEND_FILTER_AUD
//

DROP TABLE IF EXISTS MIGR_TB_CERTIFICATE_AUD
//

DROP TABLE IF EXISTS MIGR_TB_PM_CONFIGURATION_AUD
//

DROP TABLE IF EXISTS MIGR_TB_PM_CONF_RAW_AUD
//

DROP TABLE IF EXISTS MIGR_TB_PM_PARTY_AUD
//

DROP TABLE IF EXISTS MIGR_TB_PM_PARTY_ID_TYPE_AUD
//

DROP TABLE IF EXISTS MIGR_TB_PM_PARTY_IDENTIF_AUD
//

DROP TABLE IF EXISTS MIGR_TB_ROUTING_CRITERIA_AUD
//

--  Changeset src/main/resources/db/archive/5.0/migration/single-tenancy/changelog-42-50-data-migration-step1.xml::EDELIVERY-7970-recreate-dictionary-tables-single-tenancy::Catalin Enache
CREATE TABLE TB_D_MSH_ROLE (ID_PK BIGINT AUTO_INCREMENT NOT NULL, `ROLE` VARCHAR(255) NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_D_MSH_ROLE PRIMARY KEY (ID_PK));

ALTER TABLE TB_D_MSH_ROLE ADD CONSTRAINT UK_D_MSH_ROLE UNIQUE (`ROLE`);

CREATE TABLE TB_D_MESSAGE_PROPERTY (ID_PK BIGINT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NOT NULL, VALUE VARCHAR(1024) NULL, TYPE VARCHAR(255) NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_D_MSG_PROPERTY PRIMARY KEY (ID_PK));

CREATE UNIQUE INDEX UIDX_D_MSG_PROP_NAME_VALUE_TYPE ON TB_D_MESSAGE_PROPERTY (NAME(100), VALUE(100), (CASE WHEN TYPE IS NULL THEN '' ELSE TYPE END));

CREATE TABLE TB_D_PART_PROPERTY (ID_PK BIGINT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NOT NULL, VALUE VARCHAR(1024) NULL, TYPE VARCHAR(255) NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_D_PART_PROPERTY PRIMARY KEY (ID_PK));

CREATE UNIQUE INDEX UIDX_D_PART_PROP_NAME_VALUE_TYPE ON TB_D_PART_PROPERTY (NAME(100), VALUE(100), (CASE WHEN TYPE IS NULL THEN '' ELSE TYPE END));

CREATE TABLE TB_D_MPC (ID_PK BIGINT AUTO_INCREMENT NOT NULL, VALUE VARCHAR(255) NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_D_MPC PRIMARY KEY (ID_PK));

ALTER TABLE TB_D_MPC ADD CONSTRAINT UK_D_MPC_VALUE UNIQUE (VALUE);

CREATE TABLE TB_D_SERVICE (ID_PK BIGINT AUTO_INCREMENT NOT NULL, VALUE VARCHAR(255) NOT NULL, TYPE VARCHAR(255) NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_D_SERVICE PRIMARY KEY (ID_PK));

CREATE UNIQUE INDEX UIDX_D_SERVICE_VALUE_TYPE ON TB_D_SERVICE (VALUE, (CASE WHEN TYPE IS NULL THEN '' ELSE TYPE END));

CREATE TABLE TB_D_PARTY (ID_PK BIGINT AUTO_INCREMENT NOT NULL, VALUE VARCHAR(255) NOT NULL, TYPE VARCHAR(255) NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_D_PARTY PRIMARY KEY (ID_PK));

CREATE UNIQUE INDEX UIDX_D_PARTY_VALUE_TYPE ON TB_D_PARTY (VALUE, (CASE WHEN TYPE IS NULL THEN '' ELSE TYPE END));

CREATE TABLE TB_D_ACTION (ID_PK BIGINT AUTO_INCREMENT NOT NULL, ACTION VARCHAR(255) NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_D_ACTION PRIMARY KEY (ID_PK));

ALTER TABLE TB_D_ACTION ADD CONSTRAINT UK_D_PARTY_ACTION UNIQUE (ACTION);

CREATE TABLE TB_D_AGREEMENT (ID_PK BIGINT AUTO_INCREMENT NOT NULL, VALUE VARCHAR(255) NOT NULL, TYPE VARCHAR(255) NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_D_AGREEMENT PRIMARY KEY (ID_PK));

CREATE UNIQUE INDEX UIDX_D_AGREEMENT_VALUE_TYPE ON TB_D_AGREEMENT (VALUE, (CASE WHEN TYPE IS NULL THEN '' ELSE TYPE END));

CREATE TABLE TB_D_ROLE (ID_PK BIGINT AUTO_INCREMENT NOT NULL, `ROLE` VARCHAR(255) NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_D_ROLE PRIMARY KEY (ID_PK));

ALTER TABLE TB_D_ROLE ADD CONSTRAINT UK_D_ROLE_VALUE UNIQUE (`ROLE`);

CREATE TABLE TB_D_NOTIFICATION_STATUS (ID_PK BIGINT AUTO_INCREMENT NOT NULL, STATUS VARCHAR(255) NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_D_NOTIFICATION_STATUS PRIMARY KEY (ID_PK));

ALTER TABLE TB_D_NOTIFICATION_STATUS ADD CONSTRAINT UK_D_NOTIF_STATUS UNIQUE (STATUS);

CREATE TABLE TB_D_MESSAGE_STATUS (ID_PK BIGINT AUTO_INCREMENT NOT NULL, STATUS VARCHAR(255) NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_D_MESSAGE_STATUS PRIMARY KEY (ID_PK));

ALTER TABLE TB_D_MESSAGE_STATUS ADD CONSTRAINT UK_D_MESSAGE_STATUS UNIQUE (STATUS);

--  Changeset src/main/resources/db/archive/5.0/migration/single-tenancy/changelog-42-50-data-migration-step1.xml::EDELIVERY-7970-recreate-MIGR-tables-single-tenancy::Catalin Enache
CREATE TABLE MIGR_TB_USER_MESSAGE (ID_PK BIGINT AUTO_INCREMENT NOT NULL, MESSAGE_ID VARCHAR(255) NULL, REF_TO_MESSAGE_ID VARCHAR(255) NULL, CONVERSATION_ID VARCHAR(255) NULL, SOURCE_MESSAGE BIT(1) NULL COMMENT 'true if the message is a SourceMessage', MESSAGE_FRAGMENT BIT(1) NULL COMMENT 'true if the message is a message fragment', TEST_MESSAGE BIT(1) NULL, EBMS3_TIMESTAMP timestamp NULL COMMENT 'the EBMS3 timestamp present in eb:Messaging/eb:UserMessage/eb:MessageInfo/eb:Timestamp', ACTION_ID_FK BIGINT NULL, AGREEMENT_ID_FK BIGINT NULL, SERVICE_ID_FK BIGINT NULL, MPC_ID_FK BIGINT NULL, FROM_PARTY_ID_FK BIGINT NULL, FROM_ROLE_ID_FK BIGINT NULL, TO_PARTY_ID_FK BIGINT NULL, TO_ROLE_ID_FK BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_USER_MESSAGE PRIMARY KEY (ID_PK));

CREATE INDEX IDX_USER_MSG_MESSAGE_ID ON MIGR_TB_USER_MESSAGE(MESSAGE_ID);

CREATE TABLE MIGR_TB_SJ_MESSAGE_FRAGMENT (ID_PK BIGINT NOT NULL, FRAGMENT_NUMBER INT NOT NULL, GROUP_ID_FK BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_MESSAGE_FRAGMENT PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_SJ_MESSAGE_GROUP (ID_PK BIGINT NOT NULL, GROUP_ID VARCHAR(255) NOT NULL, MESSAGE_SIZE BIGINT NULL COMMENT 'The message size before compression', FRAGMENT_COUNT INT NULL, SENT_FRAGMENTS INT NULL, RECEIVED_FRAGMENTS INT NULL, COMPRESSION_ALGORITHM VARCHAR(255) NULL, COMPRESSED_MESSAGE_SIZE BIGINT NULL COMMENT 'The size of the message after compression', SOAP_ACTION VARCHAR(255) NULL, REJECTED BIT(1) NULL COMMENT 'True if the message group has been rejected', EXPIRED BIT(1) NULL COMMENT 'True if the message group has expired', MSH_ROLE_ID_FK BIGINT NOT NULL, SOURCE_MESSAGE_ID_FK BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_SJ_MESSAGE_GROUP PRIMARY KEY (ID_PK)) COMMENT='Stores information about the message group for SplitAndJoin';

CREATE TABLE MIGR_TB_SJ_MESSAGE_HEADER (ID_PK BIGINT AUTO_INCREMENT NOT NULL, BOUNDARY VARCHAR(255) NULL COMMENT 'The multipart boundary value', START_MULTIPART VARCHAR(255) NULL COMMENT 'The multipart start value', CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_SJ_MESSAGE_HEADER PRIMARY KEY (ID_PK)) COMMENT='Stores the message header details for SplitAndJoin';

CREATE TABLE MIGR_TB_SIGNAL_MESSAGE (ID_PK BIGINT NOT NULL, SIGNAL_MESSAGE_ID VARCHAR(255) NULL, REF_TO_MESSAGE_ID VARCHAR(255) NULL, EBMS3_TIMESTAMP timestamp NULL COMMENT 'the EBMS3 timestamp present in eb:Messaging/eb:UserMessage/eb:MessageInfo/eb:Timestamp', CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_SIGNAL_MESSAGE PRIMARY KEY (ID_PK));

CREATE INDEX IDX_SIG_MESS_SIGNAL_MESS_ID ON MIGR_TB_SIGNAL_MESSAGE(SIGNAL_MESSAGE_ID);

CREATE TABLE MIGR_TB_RECEIPT (ID_PK BIGINT NOT NULL, RAW_XML LONGBLOB NULL, COMPRESSED BIT(1) DEFAULT 0 NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_RECEIPT PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_USER_MESSAGE_LOG (ID_PK BIGINT NOT NULL, BACKEND VARCHAR(255) NULL, RECEIVED timestamp NOT NULL, DOWNLOADED timestamp NULL, FAILED timestamp NULL, RESTORED timestamp NULL, DELETED timestamp NULL, ARCHIVED timestamp NULL, EXPORTED timestamp NULL, ACKNOWLEDGED timestamp NULL, NEXT_ATTEMPT timestamp NULL, FK_TIMEZONE_OFFSET BIGINT NULL, SEND_ATTEMPTS INT NULL, SEND_ATTEMPTS_MAX INT NULL, SCHEDULED BIT(1) NULL COMMENT 'true if the message is already scheduled to be sent', VERSION INT DEFAULT 0 NOT NULL COMMENT 'Used for optimistic locking mechanism', MESSAGE_STATUS_ID_FK BIGINT NULL, MSH_ROLE_ID_FK BIGINT NOT NULL, NOTIFICATION_STATUS_ID_FK BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, PROCESSING_TYPE VARCHAR(255) NULL, CONSTRAINT PK_MESSAGE_LOG PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_SIGNAL_MESSAGE_LOG (ID_PK BIGINT NOT NULL, RECEIVED timestamp NOT NULL, DELETED timestamp NULL, MESSAGE_STATUS_ID_FK BIGINT NULL, MSH_ROLE_ID_FK BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_SIGNAL_MESSAGE_LOG PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_USER_MESSAGE_RAW (ID_PK BIGINT NOT NULL, RAW_XML LONGBLOB NULL, COMPRESSED BIT(1) DEFAULT 0 NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_USER_MESSAGE_RAW PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_SIGNAL_MESSAGE_RAW (ID_PK BIGINT NOT NULL, RAW_XML LONGBLOB NULL, COMPRESSED BIT(1) DEFAULT 0 NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_SIGNAL_MESSAGE_RAW PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_MESSAGE_PROPERTIES (USER_MESSAGE_ID_FK BIGINT NOT NULL, MESSAGE_PROPERTY_FK BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL);

ALTER TABLE MIGR_TB_MESSAGE_PROPERTIES ADD PRIMARY KEY (USER_MESSAGE_ID_FK, MESSAGE_PROPERTY_FK);

CREATE TABLE MIGR_TB_PART_INFO (ID_PK BIGINT AUTO_INCREMENT NOT NULL, BINARY_DATA LONGBLOB NULL, DESCRIPTION_LANG VARCHAR(255) NULL, DESCRIPTION_VALUE VARCHAR(255) NULL, HREF VARCHAR(255) NULL, IN_BODY BIT(1) NULL, FILENAME VARCHAR(255) NULL, MIME VARCHAR(255) NOT NULL, USER_MESSAGE_ID_FK BIGINT NOT NULL, PART_ORDER INT DEFAULT 0 NOT NULL, ENCRYPTED BIT(1) DEFAULT 0 NULL, COMPRESSED BIT(1) DEFAULT 0 NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, PART_LENGTH BIGINT DEFAULT -1 NOT NULL, CONSTRAINT PK_PART_INFO PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_PART_PROPERTIES (PART_INFO_ID_FK BIGINT NOT NULL, PART_INFO_PROPERTY_FK BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL);

ALTER TABLE MIGR_TB_PART_PROPERTIES ADD PRIMARY KEY (PART_INFO_ID_FK, PART_INFO_PROPERTY_FK);

CREATE TABLE MIGR_TB_ERROR_LOG (ID_PK BIGINT AUTO_INCREMENT NOT NULL, ERROR_CODE VARCHAR(255) NULL, ERROR_DETAIL VARCHAR(255) NULL, ERROR_SIGNAL_MESSAGE_ID VARCHAR(255) NULL, MESSAGE_IN_ERROR_ID VARCHAR(255) NULL, MSH_ROLE_ID_FK BIGINT NULL, NOTIFIED timestamp NULL, TIME_STAMP timestamp NULL, USER_MESSAGE_ID_FK BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_ERROR_LOG PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_MESSAGE_ACKNW (ID_PK BIGINT AUTO_INCREMENT NOT NULL, FROM_VALUE VARCHAR(255) NULL, TO_VALUE VARCHAR(255) NULL, ACKNOWLEDGE_DATE timestamp NULL, USER_MESSAGE_ID_FK BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_MESSAGE_ACKNW PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_SEND_ATTEMPT (ID_PK BIGINT AUTO_INCREMENT NOT NULL, START_DATE datetime NOT NULL, END_DATE datetime NOT NULL, STATUS VARCHAR(255) NOT NULL, ERROR VARCHAR(255) NULL, USER_MESSAGE_ID_FK BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_SEND_ATTEMPT PRIMARY KEY (ID_PK));

--  Changeset src/main/resources/db/archive/5.0/migration/single-tenancy/changelog-42-50-data-migration-step1.xml::EDELIVERY-8441-recreate-MIGR-tables-for-primary-key-migration-single-tenancy::Sebastian-Ion TINCU
CREATE TABLE MIGR_WS_PLUGIN_TB_MESSAGE_LOG (ID_PK BIGINT AUTO_INCREMENT NOT NULL, MESSAGE_ID VARCHAR(255) NOT NULL, CONVERSATION_ID VARCHAR(255) NULL, REF_TO_MESSAGE_ID VARCHAR(255) NULL, FROM_PARTY_ID VARCHAR(255) NULL, FINAL_RECIPIENT VARCHAR(255) NULL, ORIGINAL_SENDER VARCHAR(255) NULL, RECEIVED timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CONSTRAINT PK_WS_PLUGIN_TB_MESSAGE_LOG PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_MESSAGE_ACKNW_PROP (ID_PK BIGINT AUTO_INCREMENT NOT NULL, PROPERTY_NAME VARCHAR(255) NULL, PROPERTY_VALUE VARCHAR(255) NULL, FK_MSG_ACKNOWLEDGE BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_MESSAGE_ACKNW_PROP PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_MESSAGING_LOCK (ID_PK BIGINT AUTO_INCREMENT NOT NULL, MESSAGE_TYPE VARCHAR(10) NULL, MESSAGE_RECEIVED timestamp NULL, MESSAGE_STATE VARCHAR(10) NULL, MESSAGE_ID VARCHAR(255) NULL, INITIATOR VARCHAR(255) NULL, MPC VARCHAR(255) NULL, SEND_ATTEMPTS INT NULL, SEND_ATTEMPTS_MAX INT NULL, NEXT_ATTEMPT timestamp NULL, FK_TIMEZONE_OFFSET BIGINT NULL, MESSAGE_STALED timestamp NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_MESSAGING_LOCK PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_CERTIFICATE (ID_PK BIGINT AUTO_INCREMENT NOT NULL, CERTIFICATE_ALIAS VARCHAR(255) NOT NULL, NOT_VALID_BEFORE_DATE datetime NULL, NOT_VALID_AFTER_DATE datetime NULL, REVOKE_NOTIFICATION_DATE timestamp NULL, ALERT_IMM_NOTIFICATION_DATE timestamp NULL COMMENT 'Alert imminent notification date', ALERT_EXP_NOTIFICATION_DATE timestamp NULL COMMENT 'Alert expired notification date', CERTIFICATE_STATUS VARCHAR(255) NOT NULL, CERTIFICATE_TYPE VARCHAR(255) NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_CERTIFICATE PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_CERTIFICATE_AUD (ID_PK BIGINT NOT NULL, REV BIGINT NOT NULL, REVTYPE TINYINT NULL, CERTIFICATE_ALIAS VARCHAR(255) NULL, NOT_VALID_BEFORE_DATE datetime NULL, NOT_VALID_AFTER_DATE datetime NULL, REVOKE_NOTIFICATION_DATE timestamp NULL, ALERT_IMM_NOTIFICATION_DATE timestamp NULL COMMENT 'Alert imminent notification date', ALERT_EXP_NOTIFICATION_DATE timestamp NULL COMMENT 'Alert expired notification date', CERTIFICATE_STATUS VARCHAR(255) NULL, CERTIFICATE_TYPE VARCHAR(255) NULL, CONSTRAINT PK_CERTIFICATE_AUD PRIMARY KEY (ID_PK, REV));

CREATE TABLE MIGR_TB_ENCRYPTION_KEY (ID_PK BIGINT AUTO_INCREMENT NOT NULL, KEY_USAGE VARCHAR(255) NULL COMMENT 'The encryption usage: PAYLOAD', SECRET_KEY LONGBLOB NOT NULL COMMENT 'The secret key used for symmetric encryption', INIT_VECTOR LONGBLOB NOT NULL COMMENT 'The initialization vector used for encryption', CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_ENCRYPTION_KEY PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_PM_BUSINESS_PROCESS (ID_PK BIGINT AUTO_INCREMENT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_BUSINESS_PROCESS PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_PM_ACTION (ID_PK BIGINT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, VALUE VARCHAR(255) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_ACTION PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_ACTION_AUDIT (ID_PK BIGINT AUTO_INCREMENT NOT NULL, AUDIT_TYPE VARCHAR(31) NOT NULL, ENTITY_ID VARCHAR(255) NULL, MODIFICATION_TYPE VARCHAR(255) NULL, REVISION_DATE timestamp NULL, USER_NAME VARCHAR(255) NULL, FROM_QUEUE VARCHAR(255) NULL, TO_QUEUE VARCHAR(255) NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_ACTION_AUDIT PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_PM_AGREEMENT (ID_PK BIGINT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, TYPE VARCHAR(255) NULL, VALUE VARCHAR(255) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_AGREEMENT PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_PM_PARTY (ID_PK BIGINT AUTO_INCREMENT NOT NULL, ENDPOINT VARCHAR(1024) NULL, NAME VARCHAR(255) NULL, PASSWORD VARCHAR(255) NULL, USERNAME VARCHAR(255) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_PARTY PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_PM_CONFIGURATION (ID_PK BIGINT AUTO_INCREMENT NOT NULL, FK_BUSINESSPROCESSES BIGINT NULL, FK_PARTY BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_CONFIGURATION PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_PM_CONFIGURATION_AUD (ID_PK BIGINT NOT NULL, REV BIGINT NOT NULL, REVTYPE TINYINT NULL, EXPRESSION VARCHAR(255) NULL, EXPRESSION_MOD BIT(1) NULL, NAME VARCHAR(255) NULL, NAME_MOD BIT(1) NULL, CONSTRAINT PK_CONFIGURATION_AUD PRIMARY KEY (ID_PK, REV));

CREATE TABLE MIGR_TB_PM_CONFIGURATION_RAW (ID_PK BIGINT AUTO_INCREMENT NOT NULL, CONFIGURATION_DATE timestamp NULL, XML LONGBLOB NULL, `DESCRIPTION` VARCHAR(255) DEFAULT '' NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_CONFIGURATION_RAW PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_PM_CONF_RAW_AUD (ID_PK BIGINT NOT NULL, REV BIGINT NOT NULL, REVTYPE TINYINT NULL, CONFIGURATION_DATE timestamp NULL, CONFIGURATIONDATE_MOD BIT(1) NULL, `DESCRIPTION` VARCHAR(255) NULL, DESCRIPTION_MOD VARCHAR(255) NULL, XML LONGBLOB NULL, XML_MOD BIT(1) NULL, CONSTRAINT PK_CONFIGURATION_RAW_AUD PRIMARY KEY (ID_PK, REV));

CREATE TABLE MIGR_TB_PM_ERROR_HANDLING (ID_PK BIGINT AUTO_INCREMENT NOT NULL, BUSINESS_ERROR_NOTIFY_CONSUMER BIT(1) NULL, BUSINESS_ERROR_NOTIFY_PRODUCER BIT(1) NULL, DELIVERY_FAIL_NOTIFY_PRODUCER BIT(1) NULL, ERROR_AS_RESPONSE BIT(1) NULL, NAME VARCHAR(255) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_ERROR_HANDLING PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_PM_PAYLOAD_PROFILE (ID_PK BIGINT AUTO_INCREMENT NOT NULL, MAX_SIZE BIGINT NULL, NAME VARCHAR(255) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_PAYLOAD_PROFILE PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_PM_PAYLOAD (ID_PK BIGINT AUTO_INCREMENT NOT NULL, CID VARCHAR(255) NULL, IN_BODY BIT(1) NULL, MAX_SIZE INT NULL, MIME_TYPE VARCHAR(255) NULL, NAME VARCHAR(255) NULL, REQUIRED_ BIT(1) NULL, SCHEMA_FILE VARCHAR(1024) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_PAYLOAD PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_PM_JOIN_PAYLD_PROFILE (FK_PAYLOAD BIGINT NOT NULL, FK_PROFILE BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL);

CREATE TABLE MIGR_TB_PM_MEP_BINDING (ID_PK BIGINT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, VALUE VARCHAR(1024) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_MEP_BINDING PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_PM_ROLE (ID_PK BIGINT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, VALUE VARCHAR(255) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_ROLE PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_PM_MEP (ID_PK BIGINT AUTO_INCREMENT NOT NULL, LEG_COUNT INT NULL, NAME VARCHAR(255) NULL, VALUE VARCHAR(1024) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_MEP PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_PM_PROCESS (ID_PK BIGINT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, FK_AGREEMENT BIGINT NULL, FK_INITIATOR_ROLE BIGINT NULL, FK_MEP BIGINT NULL, FK_MEP_BINDING BIGINT NULL, FK_RESPONDER_ROLE BIGINT NULL, FK_BUSINESSPROCESS BIGINT NULL, USE_DYNAMIC_INITIATOR BIT(1) NOT NULL, USE_DYNAMIC_RESPONDER BIT(1) NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_PROCESS PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_PM_JOIN_PROC_INI_PARTY (PROCESS_FK BIGINT NOT NULL, PARTY_FK BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL);

CREATE TABLE MIGR_TB_PM_SECURITY (ID_PK BIGINT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, POLICY VARCHAR(255) NULL, SIGNATURE_METHOD VARCHAR(255) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_SECURITY PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_PM_SERVICE (ID_PK BIGINT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, SERVICE_TYPE VARCHAR(255) NULL, VALUE VARCHAR(255) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_SERVICE PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_PM_RECEPTION_AWARENESS (ID_PK BIGINT AUTO_INCREMENT NOT NULL, DUPLICATE_DETECTION BIT(1) NULL, NAME VARCHAR(255) NULL, RETRY_COUNT INT NULL, RETRY_TIMEOUT INT NULL, STRATEGY VARCHAR(255) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_RECEPTION_AWARENESS PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_PM_RELIABILITY (ID_PK BIGINT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, NON_REPUDIATION BIT(1) NULL, REPLY_PATTERN VARCHAR(255) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_RELIABILITY PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_PM_MPC (ID_PK BIGINT AUTO_INCREMENT NOT NULL, DEFAULT_MPC BIT(1) NULL, IS_ENABLED BIT(1) NULL, NAME VARCHAR(255) NULL, QUALIFIED_NAME VARCHAR(255) NULL, RETENTION_DOWNLOADED INT NULL, RETENTION_UNDOWNLOADED INT NULL, RETENTION_SENT INT DEFAULT -1 NULL COMMENT 'Retention time for sent messages (both send success and send failure)', DELETE_MESSAGE_METADATA BIT(1) DEFAULT 0 NULL COMMENT 'Specifies whether the message metadata should be deleted or not.', MAX_BATCH_DELETE INT DEFAULT -1 NULL COMMENT 'Maximum number of DOWNLOADED/UNDOWNLOADED/SENT messages to be deleted in one batch', FK_CONFIGURATION BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_MPC PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_PM_MSG_PROPERTY_SET (ID_PK BIGINT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_MESSAGE_PROPERTY_SET PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_PM_SPLITTING (ID_PK BIGINT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL COMMENT 'Splitting configuration name', FRAGMENT_SIZE INT NULL COMMENT 'The fragment size', COMPRESSION BIT(1) NULL COMMENT 'True if compression will be used', COMPRESSION_ALGORITHM VARCHAR(255) NULL COMMENT 'Compression algorithm to use for compressing the SourceMessage', JOIN_INTERVAL INT NULL COMMENT 'The join interval', FK_BUSINESSPROCESS BIGINT NULL COMMENT 'Foreign key to the business process', CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_SPLITTING PRIMARY KEY (ID_PK)) COMMENT='Stores the configuration of the SplitAndJoin parameters configured in the PMode';

CREATE TABLE MIGR_TB_PM_LEG (ID_PK BIGINT AUTO_INCREMENT NOT NULL, COMPRESS_PAYLOADS BIT(1) NULL, NAME VARCHAR(255) NULL, FK_ACTION BIGINT NULL, FK_MPC BIGINT NULL, FK_ERROR_HANDLING BIGINT NULL, FK_PAYLOAD_PROFILE BIGINT NULL, FK_PROPERTY_SET BIGINT NULL, FK_RECEPTION_AWARENESS BIGINT NULL, FK_RELIABILITY BIGINT NULL, FK_SECURITY BIGINT NULL, FK_SERVICE BIGINT NULL, FK_BUSINESSPROCESS BIGINT NULL, FK_SPLITTING BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_LEG PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_PM_JOIN_PROCESS_LEG (PROCESS_FK BIGINT NOT NULL, LEG_FK BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL);

CREATE TABLE MIGR_TB_PM_JOIN_PROC_RSP_PARTY (PROCESS_FK BIGINT NOT NULL, PARTY_FK BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL);

CREATE TABLE MIGR_TB_PM_MESSAGE_PROPERTY (ID_PK BIGINT AUTO_INCREMENT NOT NULL, DATATYPE VARCHAR(255) NULL, KEY_ VARCHAR(255) NULL, NAME VARCHAR(255) NULL, REQUIRED_ BIT(1) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_MESSAGE_PROPERTY PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_PM_JOIN_PROPERTY_SET (PROPERTY_FK BIGINT NOT NULL, SET_FK BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL);

CREATE TABLE MIGR_TB_PM_LEG_MPC (LEGCONFIGURATION_ID_PK BIGINT NOT NULL, PARTYMPCMAP_ID_PK BIGINT NOT NULL, PARTYMPCMAP_KEY BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PRIMARY_12 PRIMARY KEY (LEGCONFIGURATION_ID_PK, PARTYMPCMAP_KEY));

CREATE TABLE MIGR_TB_PM_PARTY_AUD (ID_PK BIGINT NOT NULL, REV BIGINT NOT NULL, REVTYPE TINYINT NULL, ENDPOINT VARCHAR(1024) NULL, ENDPOINT_MOD BIT(1) NULL, NAME VARCHAR(255) NULL, NAME_MOD BIT(1) NULL, PASSWORD VARCHAR(255) NULL, PASSWORD_MOD BIT(1) NULL, USERNAME VARCHAR(255) NULL, USERNAME_MOD BIT(1) NULL, CONSTRAINT PK_PARTY_AUD PRIMARY KEY (ID_PK, REV));

CREATE TABLE MIGR_TB_PM_PARTY_ID_TYPE (ID_PK BIGINT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, VALUE VARCHAR(1024) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_PARTY_ID_TYPE PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_PM_PARTY_IDENTIFIER (ID_PK BIGINT AUTO_INCREMENT NOT NULL, PARTY_ID VARCHAR(255) NULL, FK_PARTY_ID_TYPE BIGINT NULL, FK_PARTY BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_PARTY_IDENTIFIER PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_PM_PARTY_IDENTIF_AUD (ID_PK BIGINT NOT NULL, REV BIGINT NOT NULL, REVTYPE TINYINT NULL, FK_PARTY BIGINT NULL, CONSTRAINT PK_PARTY_IDENTIFIER_AUD PRIMARY KEY (ID_PK, REV));

CREATE TABLE MIGR_TB_PM_PARTY_ID_TYPE_AUD (ID_PK BIGINT NOT NULL, REV BIGINT NOT NULL, REVTYPE TINYINT NULL, NAME VARCHAR(255) NULL, NAME_MOD BIT(1) NULL, VALUE VARCHAR(1024) NULL, VALUE_MOD BIT(1) NULL, CONSTRAINT PK_PARTY_ID_TYPE_AUD PRIMARY KEY (ID_PK, REV));

CREATE TABLE MIGR_TB_BACKEND_FILTER (ID_PK BIGINT AUTO_INCREMENT NOT NULL, BACKEND_NAME VARCHAR(255) NULL, PRIORITY INT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_BACKEND_FILTER PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_BACKEND_FILTER_AUD (ID_PK BIGINT NOT NULL, REV BIGINT NOT NULL, REVTYPE TINYINT NULL, BACKEND_NAME VARCHAR(255) NULL, BACKENDNAME_MOD BIT(1) NULL, PRIORITY INT NULL, INDEX_MOD BIT(1) NULL, ROUTINGCRITERIAS_MOD BIT(1) NULL, CONSTRAINT PK_BACKEND_FILTER_AUD PRIMARY KEY (ID_PK, REV));

CREATE TABLE MIGR_TB_ROUTING_CRITERIA (ID_PK BIGINT AUTO_INCREMENT NOT NULL, EXPRESSION VARCHAR(255) NULL, NAME VARCHAR(255) NULL, FK_BACKEND_FILTER BIGINT NULL, PRIORITY INT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_ROUTING_CRITERIA PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_ROUTING_CRITERIA_AUD (ID_PK BIGINT NOT NULL, REV BIGINT NOT NULL, REVTYPE TINYINT NULL, EXPRESSION VARCHAR(255) NULL, EXPRESSION_MOD BIT(1) NULL, NAME VARCHAR(255) NULL, NAME_MOD BIT(1) NULL, CONSTRAINT PK_ROUTING_CRITERIA_AUD PRIMARY KEY (ID_PK, REV));

CREATE TABLE MIGR_TB_BACK_RCRITERIA_AUD (ID_PK BIGINT NOT NULL, REV BIGINT NOT NULL, REVTYPE TINYINT NULL, FK_BACKEND_FILTER BIGINT NULL, PRIORITY INT NULL, CONSTRAINT PK_BACK_RCRITERIA_AUD PRIMARY KEY (ID_PK, REV));

CREATE TABLE MIGR_TB_AUTHENTICATION_ENTRY (ID_PK BIGINT AUTO_INCREMENT NOT NULL, CERTIFICATE_ID VARCHAR(255) NULL, USERNAME VARCHAR(255) NULL, PASSWD VARCHAR(255) NULL, AUTH_ROLES VARCHAR(255) NOT NULL, ORIGINAL_USER VARCHAR(255) NULL, BACKEND VARCHAR(255) NULL, PASSWORD_CHANGE_DATE timestamp NULL, DEFAULT_PASSWORD BIT(1) DEFAULT 0 NULL, ATTEMPT_COUNT INT DEFAULT 0 NOT NULL, SUSPENSION_DATE timestamp NULL, USER_ENABLED BIT(1) DEFAULT 1 NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_AUTHENTICATION_ENTRY PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_AUTH_ENTRY_AUD (ID_PK BIGINT NOT NULL, REV BIGINT NOT NULL, REVTYPE TINYINT NULL, CERTIFICATE_ID VARCHAR(255) NULL, CERTIFICATEID_MOD BIT(1) NULL, USERNAME VARCHAR(255) NULL, USERNAME_MOD BIT(1) NULL, PASSWD VARCHAR(255) NULL, PASSWORD_MOD BIT(1) NULL, AUTH_ROLES VARCHAR(255) NULL, AUTHROLES_MOD BIT(1) NULL, ORIGINAL_USER VARCHAR(255) NULL, ORIGINALUSER_MOD BIT(1) NULL, BACKEND VARCHAR(255) NULL, BACKEND_MOD BIT(1) NULL, USER_ENABLED BIT(1) NULL, ACTIVE_MOD BIT(1) NULL, PASSWORD_CHANGE_DATE timestamp NULL, PASSWORDCHANGEDATE_MOD BIT(1) NULL, DEFAULT_PASSWORD BIT(1) NULL, DEFAULTPASSWORD_MOD BIT(1) NULL, CONSTRAINT PK_AUTHENTICATION_ENTRY_AUD PRIMARY KEY (ID_PK, REV));

CREATE TABLE MIGR_TB_PLUGIN_USR_PASSWD_HIST (ID_PK BIGINT AUTO_INCREMENT NOT NULL, USER_ID BIGINT NOT NULL, USER_PASSWORD VARCHAR(255) NOT NULL, PASSWORD_CHANGE_DATE timestamp NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PLUGIN_USER_PASSWD_HISTO PRIMARY KEY (ID_PK));

CREATE TABLE MIGR_TB_USER_AUD (ID_PK BIGINT NOT NULL, REV BIGINT NOT NULL, REVTYPE TINYINT NULL, USER_ENABLED BIT(1) NULL, ACTIVE_MOD BIT(1) NULL, USER_DELETED BIT(1) NULL, DELETED_MOD BIT(1) NULL, USER_EMAIL VARCHAR(255) NULL, EMAIL_MOD BIT(1) NULL, USER_PASSWORD VARCHAR(255) NULL, PASSWORD_MOD BIT(1) NULL, USER_NAME VARCHAR(255) NULL, USERNAME_MOD BIT(1) NULL, OPTLOCK INT NULL, VERSION_MOD BIT(1) NULL, ROLES_MOD BIT(1) NULL, PASSWORD_CHANGE_DATE timestamp NULL, PASSWORDCHANGEDATE_MOD BIT(1) NULL, DEFAULT_PASSWORD BIT(1) NULL, DEFAULTPASSWORD_MOD BIT(1) NULL, CONSTRAINT PK_USER_AUD PRIMARY KEY (ID_PK, REV));

CREATE TABLE MIGR_TB_USER_ROLE_AUD (ID_PK BIGINT NOT NULL, REV BIGINT NOT NULL, REVTYPE TINYINT NULL, ROLE_NAME VARCHAR(255) NULL, NAME_MOD BIT(1) NULL, USERS_MOD BIT(1) NULL, CONSTRAINT PK_USER_ROLE_AUD PRIMARY KEY (ID_PK, REV));

--  Changeset src/main/resources/db/archive/5.0/migration/single-tenancy/changelog-42-50-data-migration-step1.xml::EDELIVERY-7849-Migrate-Timestamp-to-UTC-single-tenancy::Soumya
