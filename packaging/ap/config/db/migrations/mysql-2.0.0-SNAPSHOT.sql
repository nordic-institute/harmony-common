--  Changeset src/main/resources/db/changelog.xml::EDELIVERY-7836::gautifr
--  create DOMIBUS_SCALABLE_SEQUENCE sequence
CREATE TABLE DOMIBUS_SCALABLE_SEQUENCE (sequence_name VARCHAR(255) NOT NULL, next_val BIGINT NULL, CONSTRAINT PK_DOMIBUS_SCALABLE_SEQUENCE PRIMARY KEY (sequence_name));

--  Changeset src/main/resources/db/changelog-quartz.xml::EDELIVERY-3425::migueti
CREATE TABLE QRTZ_BLOB_TRIGGERS (SCHED_NAME VARCHAR(120) NOT NULL, TRIGGER_NAME VARCHAR(200) NOT NULL, TRIGGER_GROUP VARCHAR(200) NOT NULL, BLOB_DATA BLOB NULL);

CREATE TABLE QRTZ_CALENDARS (SCHED_NAME VARCHAR(120) NOT NULL, CALENDAR_NAME VARCHAR(200) NOT NULL, CALENDAR_BLOB BLOB NOT NULL);

CREATE TABLE QRTZ_CRON_TRIGGERS (SCHED_NAME VARCHAR(120) NOT NULL, TRIGGER_NAME VARCHAR(200) NOT NULL, TRIGGER_GROUP VARCHAR(200) NOT NULL, CRON_EXPRESSION VARCHAR(120) NOT NULL, TIME_ZONE_ID VARCHAR(80) NULL);

CREATE TABLE QRTZ_FIRED_TRIGGERS (SCHED_NAME VARCHAR(120) NOT NULL, ENTRY_ID VARCHAR(95) NOT NULL, TRIGGER_NAME VARCHAR(200) NOT NULL, TRIGGER_GROUP VARCHAR(200) NOT NULL, INSTANCE_NAME VARCHAR(200) NOT NULL, FIRED_TIME BIGINT NOT NULL, SCHED_TIME BIGINT NOT NULL, PRIORITY INT NOT NULL, STATE VARCHAR(16) NOT NULL, JOB_NAME VARCHAR(200) NULL, JOB_GROUP VARCHAR(200) NULL, IS_NONCONCURRENT BIT(1) NULL, REQUESTS_RECOVERY BIT(1) NULL);

CREATE TABLE QRTZ_JOB_DETAILS (SCHED_NAME VARCHAR(120) NOT NULL, JOB_NAME VARCHAR(200) NOT NULL, JOB_GROUP VARCHAR(200) NOT NULL, `DESCRIPTION` VARCHAR(250) NULL, JOB_CLASS_NAME VARCHAR(250) NOT NULL, IS_DURABLE BIT(1) NOT NULL, IS_NONCONCURRENT BIT(1) NOT NULL, IS_UPDATE_DATA BIT(1) NOT NULL, REQUESTS_RECOVERY BIT(1) NOT NULL, JOB_DATA BLOB NULL);

CREATE TABLE QRTZ_LOCKS (SCHED_NAME VARCHAR(120) NOT NULL, LOCK_NAME VARCHAR(40) NOT NULL);

CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS (SCHED_NAME VARCHAR(120) NOT NULL, TRIGGER_GROUP VARCHAR(200) NOT NULL);

CREATE TABLE QRTZ_SCHEDULER_STATE (SCHED_NAME VARCHAR(120) NOT NULL, INSTANCE_NAME VARCHAR(200) NOT NULL, LAST_CHECKIN_TIME BIGINT NOT NULL, CHECKIN_INTERVAL BIGINT NOT NULL);

CREATE TABLE QRTZ_SIMPLE_TRIGGERS (SCHED_NAME VARCHAR(120) NOT NULL, TRIGGER_NAME VARCHAR(200) NOT NULL, TRIGGER_GROUP VARCHAR(200) NOT NULL, REPEAT_COUNT BIGINT NOT NULL, REPEAT_INTERVAL BIGINT NOT NULL, TIMES_TRIGGERED BIGINT NOT NULL);

CREATE TABLE QRTZ_SIMPROP_TRIGGERS (SCHED_NAME VARCHAR(120) NOT NULL, TRIGGER_NAME VARCHAR(200) NOT NULL, TRIGGER_GROUP VARCHAR(200) NOT NULL, STR_PROP_1 VARCHAR(512) NULL, STR_PROP_2 VARCHAR(512) NULL, STR_PROP_3 VARCHAR(512) NULL, INT_PROP_1 INT NULL, INT_PROP_2 INT NULL, LONG_PROP_1 BIGINT NULL, LONG_PROP_2 BIGINT NULL, DEC_PROP_1 DECIMAL(13, 4) NULL, DEC_PROP_2 DECIMAL(13, 4) NULL, BOOL_PROP_1 BIT(1) NULL, BOOL_PROP_2 BIT(1) NULL);

CREATE TABLE QRTZ_TRIGGERS (SCHED_NAME VARCHAR(120) NOT NULL, TRIGGER_NAME VARCHAR(200) NOT NULL, TRIGGER_GROUP VARCHAR(200) NOT NULL, JOB_NAME VARCHAR(200) NOT NULL, JOB_GROUP VARCHAR(200) NOT NULL, `DESCRIPTION` VARCHAR(250) NULL, NEXT_FIRE_TIME BIGINT NULL, PREV_FIRE_TIME BIGINT NULL, PRIORITY INT NULL, TRIGGER_STATE VARCHAR(16) NOT NULL, TRIGGER_TYPE VARCHAR(8) NOT NULL, START_TIME BIGINT NOT NULL, END_TIME BIGINT NULL, CALENDAR_NAME VARCHAR(200) NULL, MISFIRE_INSTR SMALLINT NULL, JOB_DATA BLOB NULL);

ALTER TABLE QRTZ_BLOB_TRIGGERS ADD PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

ALTER TABLE QRTZ_CALENDARS ADD PRIMARY KEY (SCHED_NAME, CALENDAR_NAME);

ALTER TABLE QRTZ_CRON_TRIGGERS ADD PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

ALTER TABLE QRTZ_FIRED_TRIGGERS ADD PRIMARY KEY (SCHED_NAME, ENTRY_ID);

ALTER TABLE QRTZ_JOB_DETAILS ADD PRIMARY KEY (SCHED_NAME, JOB_NAME, JOB_GROUP);

ALTER TABLE QRTZ_LOCKS ADD PRIMARY KEY (SCHED_NAME, LOCK_NAME);

ALTER TABLE QRTZ_PAUSED_TRIGGER_GRPS ADD PRIMARY KEY (SCHED_NAME, TRIGGER_GROUP);

ALTER TABLE QRTZ_SCHEDULER_STATE ADD PRIMARY KEY (SCHED_NAME, INSTANCE_NAME, LAST_CHECKIN_TIME, CHECKIN_INTERVAL);

ALTER TABLE QRTZ_SIMPLE_TRIGGERS ADD PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

ALTER TABLE QRTZ_SIMPROP_TRIGGERS ADD PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

ALTER TABLE QRTZ_TRIGGERS ADD PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

CREATE INDEX IDX_QRTZ_FT_INST_JOB_REQ_RCVRY ON QRTZ_FIRED_TRIGGERS(SCHED_NAME, INSTANCE_NAME, REQUESTS_RECOVERY);

CREATE INDEX IDX_QRTZ_FT_JG ON QRTZ_FIRED_TRIGGERS(SCHED_NAME, JOB_GROUP);

CREATE INDEX IDX_QRTZ_FT_J_G ON QRTZ_FIRED_TRIGGERS(SCHED_NAME, JOB_NAME, JOB_GROUP);

CREATE INDEX IDX_QRTZ_FT_TG ON QRTZ_FIRED_TRIGGERS(SCHED_NAME, TRIGGER_GROUP);

CREATE INDEX IDX_QRTZ_FT_TRIG_INST_NAME ON QRTZ_FIRED_TRIGGERS(SCHED_NAME, INSTANCE_NAME);

CREATE INDEX IDX_QRTZ_FT_T_G ON QRTZ_FIRED_TRIGGERS(SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

CREATE INDEX IDX_QRTZ_J_GRP ON QRTZ_JOB_DETAILS(SCHED_NAME, JOB_GROUP);

CREATE INDEX IDX_QRTZ_J_REQ_RECOVERY ON QRTZ_JOB_DETAILS(SCHED_NAME, REQUESTS_RECOVERY);

CREATE INDEX IDX_QRTZ_T_C ON QRTZ_TRIGGERS(SCHED_NAME, CALENDAR_NAME);

CREATE INDEX IDX_QRTZ_T_G ON QRTZ_TRIGGERS(SCHED_NAME, TRIGGER_GROUP);

CREATE INDEX IDX_QRTZ_T_J ON QRTZ_TRIGGERS(SCHED_NAME, JOB_NAME, JOB_GROUP);

CREATE INDEX IDX_QRTZ_T_JG ON QRTZ_TRIGGERS(SCHED_NAME, JOB_GROUP);

CREATE INDEX IDX_QRTZ_T_NEXT_FIRE_TIME ON QRTZ_TRIGGERS(SCHED_NAME, NEXT_FIRE_TIME);

CREATE INDEX IDX_QRTZ_T_NFT_MISFIRE ON QRTZ_TRIGGERS(SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME);

CREATE INDEX IDX_QRTZ_T_NFT_ST ON QRTZ_TRIGGERS(SCHED_NAME, TRIGGER_STATE, NEXT_FIRE_TIME);

CREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE ON QRTZ_TRIGGERS(SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME, TRIGGER_STATE);

CREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE_GRP ON QRTZ_TRIGGERS(SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME, TRIGGER_GROUP, TRIGGER_STATE);

CREATE INDEX IDX_QRTZ_T_N_G_STATE ON QRTZ_TRIGGERS(SCHED_NAME, TRIGGER_GROUP, TRIGGER_STATE);

CREATE INDEX IDX_QRTZ_T_N_STATE ON QRTZ_TRIGGERS(SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP, TRIGGER_STATE);

CREATE INDEX IDX_QRTZ_T_STATE ON QRTZ_TRIGGERS(SCHED_NAME, TRIGGER_STATE);

ALTER TABLE QRTZ_BLOB_TRIGGERS ADD CONSTRAINT FK_BLOB_TRIGGERS FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE QRTZ_CRON_TRIGGERS ADD CONSTRAINT FK_CRON_TRIGGERS FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE QRTZ_SIMPLE_TRIGGERS ADD CONSTRAINT FK_SIMPLE_TRIGGERS FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE QRTZ_SIMPROP_TRIGGERS ADD CONSTRAINT FK_SIMPROP_TRIGGERS FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE QRTZ_TRIGGERS ADD CONSTRAINT FK_TRIGGERS FOREIGN KEY (SCHED_NAME, JOB_NAME, JOB_GROUP) REFERENCES QRTZ_JOB_DETAILS (SCHED_NAME, JOB_NAME, JOB_GROUP) ON UPDATE NO ACTION ON DELETE NO ACTION;

--  Changeset src/main/resources/db/changelog.xml::EDELIVERY-4740::idragusa
--  Plugin specific tables
CREATE TABLE WS_PLUGIN_TB_MESSAGE_LOG (ID_PK BIGINT AUTO_INCREMENT NOT NULL, MESSAGE_ID VARCHAR(255) NOT NULL, CONVERSATION_ID VARCHAR(255) NULL, REF_TO_MESSAGE_ID VARCHAR(255) NULL, FROM_PARTY_ID VARCHAR(255) NULL, FINAL_RECIPIENT VARCHAR(255) NULL, ORIGINAL_SENDER VARCHAR(255) NULL, RECEIVED timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CONSTRAINT PK_WS_PLUGIN_TB_MESSAGE_LOG PRIMARY KEY (ID_PK));

--  Changeset src/main/resources/db/changelog.xml::EDELIVERY-2427::Francois Gautier
--  WS Plugin specific tables for backend dispatch
CREATE TABLE WS_PLUGIN_TB_BACKEND_MSG_LOG (ID_PK BIGINT AUTO_INCREMENT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, MESSAGE_ID VARCHAR(255) NOT NULL, MESSAGE_IDS LONGTEXT NULL, MESSAGE_ENTITY_ID BIGINT NULL, FINAL_RECIPIENT VARCHAR(255) NULL, ORIGINAL_SENDER VARCHAR(255) NULL, BACKEND_MESSAGE_STATUS VARCHAR(255) NULL, MESSAGE_STATUS VARCHAR(255) NULL, BACKEND_MESSAGE_TYPE VARCHAR(255) NULL, RULE_NAME VARCHAR(255) NULL COMMENT 'Name of the rule used for dispatching', SENT datetime NOT NULL COMMENT 'DateTime when the message had been dispatched', FAILED datetime NULL COMMENT 'DateTime when the message had failed', SEND_ATTEMPTS INT NULL COMMENT 'Number of attempts sent', SEND_ATTEMPTS_MAX INT NULL COMMENT 'Number of attempts maximal', NEXT_ATTEMPT datetime NULL COMMENT 'DateTime for the next attempt', SCHEDULED BIT(1) NULL COMMENT 'true if the backend message is already scheduled to be sent', CONSTRAINT PK_WS_PLUGIN_BACKEND_MSG_LOG PRIMARY KEY (ID_PK));

--  Changeset src/main/resources/db/changelog.xml::EDELIVERY-7803-Dictionary Tables::Cosmin Baciu
CREATE TABLE TB_D_MSH_ROLE (ID_PK BIGINT AUTO_INCREMENT NOT NULL, `ROLE` VARCHAR(255) NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_D_MSH_ROLE PRIMARY KEY (ID_PK));

ALTER TABLE TB_D_MSH_ROLE ADD CONSTRAINT UK_D_MSH_ROLE UNIQUE (`ROLE`);

CREATE TABLE TB_D_MESSAGE_PROPERTY (ID_PK BIGINT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NOT NULL, VALUE VARCHAR(1024) NULL, TYPE VARCHAR(255) NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_D_MSG_PROPERTY PRIMARY KEY (ID_PK));

CREATE UNIQUE INDEX UIDX_D_MSG_PROP_NAME_VALUE_TYPE ON TB_D_MESSAGE_PROPERTY (NAME(100), VALUE(100), (CASE WHEN TYPE IS NULL THEN '' ELSE TYPE END));

CREATE TABLE TB_D_PART_PROPERTY (ID_PK BIGINT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NOT NULL, VALUE VARCHAR(1024) NULL, TYPE VARCHAR(255) NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_D_PART_PROPERTY PRIMARY KEY (ID_PK));

CREATE UNIQUE INDEX UIDX_D_PART_PROP_NAME_VALUE_TYPE ON TB_D_PART_PROPERTY (NAME(100), VALUE(100), (CASE WHEN TYPE IS NULL THEN '' ELSE TYPE END));

CREATE TABLE TB_D_MPC (ID_PK BIGINT AUTO_INCREMENT NOT NULL, VALUE VARCHAR(255) NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_D_MPC PRIMARY KEY (ID_PK));

ALTER TABLE TB_D_MPC ADD CONSTRAINT UK_D_MPC_VALUE UNIQUE (VALUE);

CREATE TABLE TB_D_SERVICE (ID_PK BIGINT AUTO_INCREMENT NOT NULL, VALUE VARCHAR(255) NOT NULL, TYPE VARCHAR(255) NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_D_SERVICE PRIMARY KEY (ID_PK));

CREATE UNIQUE INDEX UIDX_D_SERVICE_VALUE_TYPE ON TB_D_SERVICE (VALUE, (CASE WHEN TYPE IS NULL THEN '' ELSE TYPE END));

CREATE TABLE TB_D_PARTY (ID_PK BIGINT AUTO_INCREMENT NOT NULL, VALUE VARCHAR(255) NOT NULL, TYPE VARCHAR(255) NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_D_PARTY PRIMARY KEY (ID_PK));

CREATE UNIQUE INDEX UIDX_D_PARTY_VALUE_TYPE ON TB_D_PARTY (VALUE, (CASE WHEN TYPE IS NULL THEN '' ELSE TYPE END));

CREATE TABLE TB_D_ACTION (ID_PK BIGINT AUTO_INCREMENT NOT NULL, ACTION VARCHAR(255) NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_D_ACTION PRIMARY KEY (ID_PK));

ALTER TABLE TB_D_ACTION ADD CONSTRAINT UK_D_PARTY_ACTION UNIQUE (ACTION);

CREATE TABLE TB_D_AGREEMENT (ID_PK BIGINT AUTO_INCREMENT NOT NULL, VALUE VARCHAR(255) NOT NULL, TYPE VARCHAR(255) NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_D_AGREEMENT PRIMARY KEY (ID_PK));

CREATE UNIQUE INDEX UIDX_D_AGREEMENT_VALUE_TYPE ON TB_D_AGREEMENT (VALUE, (CASE WHEN TYPE IS NULL THEN '' ELSE TYPE END));

CREATE TABLE TB_D_ROLE (ID_PK BIGINT AUTO_INCREMENT NOT NULL, `ROLE` VARCHAR(255) NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_D_ROLE PRIMARY KEY (ID_PK));

ALTER TABLE TB_D_ROLE ADD CONSTRAINT UK_D_ROLE_VALUE UNIQUE (`ROLE`);

CREATE TABLE TB_D_NOTIFICATION_STATUS (ID_PK BIGINT AUTO_INCREMENT NOT NULL, STATUS VARCHAR(255) NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_D_NOTIFICATION_STATUS PRIMARY KEY (ID_PK));

ALTER TABLE TB_D_NOTIFICATION_STATUS ADD CONSTRAINT UK_D_NOTIF_STATUS UNIQUE (STATUS);

CREATE TABLE TB_D_MESSAGE_STATUS (ID_PK BIGINT AUTO_INCREMENT NOT NULL, STATUS VARCHAR(255) NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_D_MESSAGE_STATUS PRIMARY KEY (ID_PK));

ALTER TABLE TB_D_MESSAGE_STATUS ADD CONSTRAINT UK_D_MESSAGE_STATUS UNIQUE (STATUS);

CREATE TABLE TB_D_TIMEZONE_OFFSET (ID_PK BIGINT AUTO_INCREMENT NOT NULL, NEXT_ATTEMPT_TIMEZONE_ID VARCHAR(255) NULL COMMENT 'Time zone ID on the application server to use when converting the next attempt for displaying it to the user', NEXT_ATTEMPT_OFFSET_SECONDS INT NULL COMMENT 'Offset in seconds of the time zone on the application server to use when converting the next attempt for displaying it to the user', CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_D_TIMEZONE_OFFSET PRIMARY KEY (ID_PK));

ALTER TABLE TB_D_TIMEZONE_OFFSET ADD CONSTRAINT UK_D_TIMEZONE_OFFSET UNIQUE (NEXT_ATTEMPT_TIMEZONE_ID, NEXT_ATTEMPT_OFFSET_SECONDS);

--  Changeset src/main/resources/db/changelog.xml::EDELIVERY-7803-UserMessage Tables::Cosmin Baciu
CREATE TABLE TB_USER_MESSAGE (ID_PK BIGINT AUTO_INCREMENT NOT NULL, MESSAGE_ID VARCHAR(255) NULL, MSH_ROLE_ID_FK BIGINT NOT NULL, REF_TO_MESSAGE_ID VARCHAR(255) NULL, CONVERSATION_ID VARCHAR(255) NULL, SOURCE_MESSAGE BIT(1) NULL COMMENT 'true if the message is a SourceMessage', MESSAGE_FRAGMENT BIT(1) NULL COMMENT 'true if the message is a message fragment', TEST_MESSAGE BIT(1) NULL, EBMS3_TIMESTAMP timestamp NULL COMMENT 'the EBMS3 timestamp present in eb:Messaging/eb:UserMessage/eb:MessageInfo/eb:Timestamp', ACTION_ID_FK BIGINT NULL, AGREEMENT_ID_FK BIGINT NULL, SERVICE_ID_FK BIGINT NULL, MPC_ID_FK BIGINT NULL, FROM_PARTY_ID_FK BIGINT NULL, FROM_ROLE_ID_FK BIGINT NULL, TO_PARTY_ID_FK BIGINT NULL, TO_ROLE_ID_FK BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_USER_MESSAGE PRIMARY KEY (ID_PK));

ALTER TABLE TB_USER_MESSAGE ADD CONSTRAINT FK_USER_MSG_ACTION_ID FOREIGN KEY (ACTION_ID_FK) REFERENCES TB_D_ACTION (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_USER_MESSAGE ADD CONSTRAINT FK_USER_MSG_AGREEMENT_ID FOREIGN KEY (AGREEMENT_ID_FK) REFERENCES TB_D_AGREEMENT (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_USER_MESSAGE ADD CONSTRAINT FK_USER_MSG_SERVICE_ID FOREIGN KEY (SERVICE_ID_FK) REFERENCES TB_D_SERVICE (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_USER_MESSAGE ADD CONSTRAINT FK_USER_MSG_MPC_ID FOREIGN KEY (MPC_ID_FK) REFERENCES TB_D_MPC (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_USER_MESSAGE ADD CONSTRAINT FK_USER_MSG_FROM_PARTY_ID FOREIGN KEY (FROM_PARTY_ID_FK) REFERENCES TB_D_PARTY (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_USER_MESSAGE ADD CONSTRAINT FK_USER_MSG_FROM_ROLE_ID FOREIGN KEY (FROM_ROLE_ID_FK) REFERENCES TB_D_ROLE (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_USER_MESSAGE ADD CONSTRAINT FK_USER_MSG_TO_PARTY_ID FOREIGN KEY (TO_PARTY_ID_FK) REFERENCES TB_D_PARTY (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_USER_MESSAGE ADD CONSTRAINT FK_USER_MSG_TO_ROLE_ID FOREIGN KEY (TO_ROLE_ID_FK) REFERENCES TB_D_ROLE (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_USER_MESSAGE ADD CONSTRAINT FK_USER_MSG_MSH_ROLE FOREIGN KEY (MSH_ROLE_ID_FK) REFERENCES TB_D_MSH_ROLE (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_USER_MSG_MESSAGE_ID ON TB_USER_MESSAGE(MESSAGE_ID, MSH_ROLE_ID_FK);

CREATE INDEX IDX_USER_MSG_ACTION_ID ON TB_USER_MESSAGE(ACTION_ID_FK);

CREATE INDEX IDX_USER_MSG_AGREEMENT_ID ON TB_USER_MESSAGE(AGREEMENT_ID_FK);

CREATE INDEX IDX_USER_MSG_SERVICE_ID ON TB_USER_MESSAGE(SERVICE_ID_FK);

CREATE INDEX IDX_USER_MSG_MPC_ID ON TB_USER_MESSAGE(MPC_ID_FK);

CREATE INDEX IDX_USER_MSG_FROM_PARTY_ID ON TB_USER_MESSAGE(FROM_PARTY_ID_FK);

CREATE INDEX IDX_FROM_ROLE_ID ON TB_USER_MESSAGE(FROM_ROLE_ID_FK);

CREATE INDEX IDX_USER_MSG_TO_PARTY_ID ON TB_USER_MESSAGE(TO_PARTY_ID_FK);

CREATE INDEX IDX_TO_ROLE_ID ON TB_USER_MESSAGE(TO_ROLE_ID_FK);

CREATE INDEX IDX_TEST_MESSAGE ON TB_USER_MESSAGE(TEST_MESSAGE, ID_PK);

CREATE INDEX IDX_UM_DELETION_COMPOSITE ON TB_USER_MESSAGE(MPC_ID_FK, ID_PK);

ALTER TABLE TB_USER_MESSAGE ADD CONSTRAINT UK_USER_MSG_MESSAGE_ID UNIQUE (MESSAGE_ID, MSH_ROLE_ID_FK);

CREATE TABLE TB_MESSAGE_ACKNW (ID_PK BIGINT AUTO_INCREMENT NOT NULL, FROM_VALUE VARCHAR(255) NULL, TO_VALUE VARCHAR(255) NULL, ACKNOWLEDGE_DATE timestamp NULL, USER_MESSAGE_ID_FK BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_MESSAGE_ACKNW PRIMARY KEY (ID_PK));

ALTER TABLE TB_MESSAGE_ACKNW ADD CONSTRAINT FK_MSG_ACK_USER_MSG FOREIGN KEY (USER_MESSAGE_ID_FK) REFERENCES TB_USER_MESSAGE (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_MSG_ACKNW_MESSAGE_ID_FK ON TB_MESSAGE_ACKNW(USER_MESSAGE_ID_FK);

CREATE TABLE TB_MESSAGE_ACKNW_PROP (ID_PK BIGINT AUTO_INCREMENT NOT NULL, PROPERTY_NAME VARCHAR(255) NULL, PROPERTY_VALUE VARCHAR(255) NULL, MESSAGE_ACK_ID_FK BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_MESSAGE_ACKNW_PROP PRIMARY KEY (ID_PK));

ALTER TABLE TB_MESSAGE_ACKNW_PROP ADD CONSTRAINT FK_MSG_ACK_PROP_MSG_ACK FOREIGN KEY (MESSAGE_ACK_ID_FK) REFERENCES TB_MESSAGE_ACKNW (ID_PK) ON UPDATE CASCADE ON DELETE RESTRICT;

CREATE INDEX IDX_MSG_ACK_PROP_MSG_ACK ON TB_MESSAGE_ACKNW_PROP(MESSAGE_ACK_ID_FK);

CREATE TABLE TB_SJ_MESSAGE_HEADER (ID_PK BIGINT AUTO_INCREMENT NOT NULL, BOUNDARY VARCHAR(255) NULL COMMENT 'The multipart boundary value', START_MULTIPART VARCHAR(255) NULL COMMENT 'The multipart start value', CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_SJ_MESSAGE_HEADER PRIMARY KEY (ID_PK)) COMMENT='Stores the message header details for SplitAndJoin';

CREATE TABLE TB_SJ_MESSAGE_GROUP (ID_PK BIGINT NOT NULL, GROUP_ID VARCHAR(255) NOT NULL, MESSAGE_SIZE BIGINT NULL COMMENT 'The message size before compression', FRAGMENT_COUNT INT NULL, SENT_FRAGMENTS INT NULL, RECEIVED_FRAGMENTS INT NULL, COMPRESSION_ALGORITHM VARCHAR(255) NULL, COMPRESSED_MESSAGE_SIZE BIGINT NULL COMMENT 'The size of the message after compression', SOAP_ACTION VARCHAR(255) NULL, REJECTED BIT(1) NULL COMMENT 'True if the message group has been rejected', EXPIRED BIT(1) NULL COMMENT 'True if the message group has expired', MSH_ROLE_ID_FK BIGINT NOT NULL, SOURCE_MESSAGE_ID_FK BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_SJ_MESSAGE_GROUP PRIMARY KEY (ID_PK)) COMMENT='Stores information about the message group for SplitAndJoin';

ALTER TABLE TB_SJ_MESSAGE_GROUP ADD CONSTRAINT FK_MSG_FG_GROUP_MSH_ROLE FOREIGN KEY (MSH_ROLE_ID_FK) REFERENCES TB_D_MSH_ROLE (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_SJ_MESSAGE_GROUP ADD CONSTRAINT FK_MSG_FG_GROUP_UM FOREIGN KEY (SOURCE_MESSAGE_ID_FK) REFERENCES TB_USER_MESSAGE (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_SJ_MESSAGE_GROUP ADD CONSTRAINT FK_MSG_FG_GROUP_MH FOREIGN KEY (ID_PK) REFERENCES TB_SJ_MESSAGE_HEADER (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_SJ_MG_SM_ID_FK ON TB_SJ_MESSAGE_GROUP(SOURCE_MESSAGE_ID_FK);

CREATE INDEX IDX_SJ_MG_ROLE_FK ON TB_SJ_MESSAGE_GROUP(MSH_ROLE_ID_FK);

CREATE TABLE TB_SJ_MESSAGE_FRAGMENT (ID_PK BIGINT NOT NULL, FRAGMENT_NUMBER INT NOT NULL, GROUP_ID_FK BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_MESSAGE_FRAGMENT PRIMARY KEY (ID_PK));

ALTER TABLE TB_SJ_MESSAGE_FRAGMENT ADD CONSTRAINT FK_SJ_MSG_FG_GROUP FOREIGN KEY (GROUP_ID_FK) REFERENCES TB_SJ_MESSAGE_GROUP (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_SJ_MESSAGE_FRAGMENT ADD CONSTRAINT FK_SJ_MSG_FG_USER_MSG FOREIGN KEY (ID_PK) REFERENCES TB_USER_MESSAGE (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_SJ_MSG_FG_GROUP ON TB_SJ_MESSAGE_FRAGMENT(GROUP_ID_FK);

CREATE TABLE TB_USER_MESSAGE_LOG (ID_PK BIGINT NOT NULL, BACKEND VARCHAR(255) NULL, RECEIVED timestamp NOT NULL, ACKNOWLEDGED timestamp NULL, DOWNLOADED timestamp NULL, ARCHIVED timestamp NULL, EXPORTED timestamp NULL, FAILED timestamp NULL, RESTORED timestamp NULL, DELETED timestamp NULL, NEXT_ATTEMPT timestamp NULL, FK_TIMEZONE_OFFSET BIGINT NULL, SEND_ATTEMPTS INT NULL, SEND_ATTEMPTS_MAX INT NULL, SCHEDULED BIT(1) NULL COMMENT 'true if the message is already scheduled to be sent', VERSION INT DEFAULT 0 NOT NULL COMMENT 'Used for optimistic locking mechanism', MESSAGE_STATUS_ID_FK BIGINT NOT NULL, MSH_ROLE_ID_FK BIGINT NOT NULL, NOTIFICATION_STATUS_ID_FK BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, PROCESSING_TYPE VARCHAR(255) NULL, CONSTRAINT PK_MESSAGE_LOG PRIMARY KEY (ID_PK));

ALTER TABLE TB_USER_MESSAGE_LOG ADD CONSTRAINT FK_MSG_LOG_MSG_STATUS FOREIGN KEY (MESSAGE_STATUS_ID_FK) REFERENCES TB_D_MESSAGE_STATUS (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_USER_MESSAGE_LOG ADD CONSTRAINT FK_MSG_LOG_MSH_ROLE FOREIGN KEY (MSH_ROLE_ID_FK) REFERENCES TB_D_MSH_ROLE (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_USER_MESSAGE_LOG ADD CONSTRAINT FK_MSG_LOG_NOTIF_STATUS FOREIGN KEY (NOTIFICATION_STATUS_ID_FK) REFERENCES TB_D_NOTIFICATION_STATUS (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_USER_MESSAGE_LOG ADD CONSTRAINT FK_MSG_LOG_MSG_ID FOREIGN KEY (ID_PK) REFERENCES TB_USER_MESSAGE (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_USER_MESSAGE_LOG ADD CONSTRAINT FK_MESSAGE_LOG_TZ_OFFSET FOREIGN KEY (FK_TIMEZONE_OFFSET) REFERENCES TB_D_TIMEZONE_OFFSET (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_MESSAGE_LOG_MSG_STATUS_ID ON TB_USER_MESSAGE_LOG(MESSAGE_STATUS_ID_FK);

CREATE INDEX IDX_MESSAGE_LOG_MSG_ROLE_ID ON TB_USER_MESSAGE_LOG(MSH_ROLE_ID_FK);

CREATE INDEX IDX_MSG_LOG_NOTIF_STATUS_ID ON TB_USER_MESSAGE_LOG(NOTIFICATION_STATUS_ID_FK);

CREATE INDEX IDX_USER_LOG_RECEIVED ON TB_USER_MESSAGE_LOG(RECEIVED);

CREATE INDEX IDX_MESSAGE_LOG_TZ_OFFSET ON TB_USER_MESSAGE_LOG(FK_TIMEZONE_OFFSET);

CREATE INDEX IDX_MSG_ARCHIVED ON TB_USER_MESSAGE_LOG(ARCHIVED);

CREATE INDEX IDX_MSG_EXPORTED ON TB_USER_MESSAGE_LOG(EXPORTED);

CREATE INDEX IDX_MSG_ACKNOWLEDGED ON TB_USER_MESSAGE_LOG(ACKNOWLEDGED);

CREATE INDEX IDX_MSG_PROCESSING_TYPE ON TB_USER_MESSAGE_LOG(PROCESSING_TYPE);

CREATE INDEX IDX_MSG_DOWNLOADED ON TB_USER_MESSAGE_LOG(DOWNLOADED);

CREATE INDEX IDX_UML_DELETION_COMPOSITE ON TB_USER_MESSAGE_LOG(DOWNLOADED, ID_PK, MESSAGE_STATUS_ID_FK);

CREATE TABLE TB_MESSAGING_LOCK (ID_PK BIGINT AUTO_INCREMENT NOT NULL, MESSAGE_TYPE VARCHAR(10) NULL, MESSAGE_RECEIVED timestamp NULL, MESSAGE_STATE VARCHAR(10) NULL, MESSAGE_ID VARCHAR(255) NULL, INITIATOR VARCHAR(255) NULL, MPC VARCHAR(255) NULL, SEND_ATTEMPTS INT NULL, SEND_ATTEMPTS_MAX INT NULL, NEXT_ATTEMPT timestamp NULL, FK_TIMEZONE_OFFSET BIGINT NULL, MESSAGE_STALED timestamp NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_MESSAGING_LOCK PRIMARY KEY (ID_PK));

ALTER TABLE TB_MESSAGING_LOCK ADD CONSTRAINT FK_MESSAGING_LOCK_TZ_OFFSET FOREIGN KEY (FK_TIMEZONE_OFFSET) REFERENCES TB_D_TIMEZONE_OFFSET (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_MESSAGE_LOCK_SEARCH ON TB_MESSAGING_LOCK(MESSAGE_TYPE, MESSAGE_STATE, INITIATOR, MPC, NEXT_ATTEMPT);

CREATE UNIQUE INDEX IDX_MESSAGE_LOCK_UNIQUE_ID ON TB_MESSAGING_LOCK(MESSAGE_ID);

CREATE INDEX IDX_MESSAGING_LOCK_TZ_OFFSET ON TB_MESSAGING_LOCK(FK_TIMEZONE_OFFSET);

CREATE TABLE TB_PART_INFO (ID_PK BIGINT AUTO_INCREMENT NOT NULL, BINARY_DATA LONGBLOB NULL, DESCRIPTION_LANG VARCHAR(255) NULL, DESCRIPTION_VALUE VARCHAR(255) NULL, HREF VARCHAR(255) NULL, IN_BODY BIT(1) NULL, FILENAME VARCHAR(255) NULL, MIME VARCHAR(255) NOT NULL, USER_MESSAGE_ID_FK BIGINT NOT NULL, PART_ORDER INT DEFAULT 0 NOT NULL, ENCRYPTED BIT(1) DEFAULT 0 NULL, COMPRESSED BIT(1) DEFAULT 0 NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, PART_LENGTH BIGINT DEFAULT -1 NOT NULL, CONSTRAINT PK_PART_INFO PRIMARY KEY (ID_PK));

ALTER TABLE TB_PART_INFO ADD CONSTRAINT FK_PART_INFO_USER_MSG FOREIGN KEY (USER_MESSAGE_ID_FK) REFERENCES TB_USER_MESSAGE (ID_PK) ON UPDATE RESTRICT ON DELETE CASCADE;

CREATE INDEX FK_USER_MESSAGE_ID ON TB_PART_INFO(USER_MESSAGE_ID_FK);

CREATE TABLE TB_PART_PROPERTIES (PART_INFO_ID_FK BIGINT NOT NULL, PART_INFO_PROPERTY_FK BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL);

ALTER TABLE TB_PART_PROPERTIES ADD PRIMARY KEY (PART_INFO_ID_FK, PART_INFO_PROPERTY_FK);

ALTER TABLE TB_PART_PROPERTIES ADD CONSTRAINT FK_PART_PROPS_PART_INFO FOREIGN KEY (PART_INFO_ID_FK) REFERENCES TB_PART_INFO (ID_PK) ON UPDATE RESTRICT ON DELETE CASCADE;

ALTER TABLE TB_PART_PROPERTIES ADD CONSTRAINT FK_PART_PROPS_PART_PROP FOREIGN KEY (PART_INFO_PROPERTY_FK) REFERENCES TB_D_PART_PROPERTY (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_PART_PROPS_PART_PROP ON TB_PART_PROPERTIES(PART_INFO_PROPERTY_FK);

CREATE TABLE TB_MESSAGE_PROPERTIES (USER_MESSAGE_ID_FK BIGINT NOT NULL, MESSAGE_PROPERTY_FK BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL);

ALTER TABLE TB_MESSAGE_PROPERTIES ADD PRIMARY KEY (USER_MESSAGE_ID_FK, MESSAGE_PROPERTY_FK);

ALTER TABLE TB_MESSAGE_PROPERTIES ADD CONSTRAINT FK_MSG_PROPS_USER_MSG FOREIGN KEY (USER_MESSAGE_ID_FK) REFERENCES TB_USER_MESSAGE (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_MESSAGE_PROPERTIES ADD CONSTRAINT FK_MSG_PROPS_MSG_PROP FOREIGN KEY (MESSAGE_PROPERTY_FK) REFERENCES TB_D_MESSAGE_PROPERTY (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE TABLE TB_USER_MESSAGE_RAW (ID_PK BIGINT NOT NULL, RAW_XML LONGBLOB NULL, COMPRESSED BIT(1) DEFAULT 0 NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_USER_MESSAGE_RAW PRIMARY KEY (ID_PK));

ALTER TABLE TB_USER_MESSAGE_RAW ADD CONSTRAINT FK_MSG_RAW_USER_MSG FOREIGN KEY (ID_PK) REFERENCES TB_USER_MESSAGE (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE TABLE TB_SIGNAL_MESSAGE (ID_PK BIGINT NOT NULL, SIGNAL_MESSAGE_ID VARCHAR(255) NULL, MSH_ROLE_ID_FK BIGINT NOT NULL, REF_TO_MESSAGE_ID VARCHAR(255) NULL, EBMS3_TIMESTAMP timestamp NULL COMMENT 'the EBMS3 timestamp present in eb:Messaging/eb:UserMessage/eb:MessageInfo/eb:Timestamp', CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_SIGNAL_MESSAGE PRIMARY KEY (ID_PK));

ALTER TABLE TB_SIGNAL_MESSAGE ADD CONSTRAINT FK_TB_SIGNAL_USER_MSG FOREIGN KEY (ID_PK) REFERENCES TB_USER_MESSAGE (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_SIGNAL_MESSAGE ADD CONSTRAINT FK_SIGNAL_MSH_ROLE FOREIGN KEY (MSH_ROLE_ID_FK) REFERENCES TB_D_MSH_ROLE (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_SIG_MESS_REF_TO_MESS_ID ON TB_SIGNAL_MESSAGE(REF_TO_MESSAGE_ID);

CREATE INDEX IDX_SIG_MESS_SIGNAL_MESS_ID ON TB_SIGNAL_MESSAGE(SIGNAL_MESSAGE_ID);

ALTER TABLE TB_SIGNAL_MESSAGE ADD CONSTRAINT UK_SIGNAL_MSG_MESSAGE_ID UNIQUE (SIGNAL_MESSAGE_ID, MSH_ROLE_ID_FK);

CREATE TABLE TB_SIGNAL_MESSAGE_LOG (ID_PK BIGINT NOT NULL, RECEIVED timestamp NOT NULL, DELETED timestamp NULL, MESSAGE_STATUS_ID_FK BIGINT NULL, MSH_ROLE_ID_FK BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_SIGNAL_MESSAGE_LOG PRIMARY KEY (ID_PK));

ALTER TABLE TB_SIGNAL_MESSAGE_LOG ADD CONSTRAINT FK_SIGNAL_LOG_SIGNAL_ID FOREIGN KEY (ID_PK) REFERENCES TB_SIGNAL_MESSAGE (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_SIGNAL_MESSAGE_LOG ADD CONSTRAINT FK_SIGNAL_LOG_MSG_STATUS FOREIGN KEY (MESSAGE_STATUS_ID_FK) REFERENCES TB_D_MESSAGE_STATUS (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_SIGNAL_MESSAGE_LOG ADD CONSTRAINT FK_SIGNAL_LOG_MSH_ROLE FOREIGN KEY (MSH_ROLE_ID_FK) REFERENCES TB_D_MSH_ROLE (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_SIGNAL_LOG_MSG_STATUS_ID ON TB_SIGNAL_MESSAGE_LOG(MESSAGE_STATUS_ID_FK);

CREATE INDEX IDX_SIGNAL_LOG_MSG_ROLE_ID ON TB_SIGNAL_MESSAGE_LOG(MSH_ROLE_ID_FK);

CREATE INDEX IDX_SIGNAL_LOG_RECEIVED ON TB_SIGNAL_MESSAGE_LOG(RECEIVED);

CREATE TABLE TB_RECEIPT (ID_PK BIGINT NOT NULL, RAW_XML LONGBLOB NULL, COMPRESSED BIT(1) DEFAULT 0 NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_RECEIPT PRIMARY KEY (ID_PK));

ALTER TABLE TB_RECEIPT ADD CONSTRAINT FK_TB_RECEIPT_SIGNAL_MSG FOREIGN KEY (ID_PK) REFERENCES TB_SIGNAL_MESSAGE (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE TABLE TB_SIGNAL_MESSAGE_RAW (ID_PK BIGINT NOT NULL, RAW_XML LONGBLOB NULL, COMPRESSED BIT(1) DEFAULT 0 NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_SIGNAL_MESSAGE_RAW PRIMARY KEY (ID_PK));

ALTER TABLE TB_SIGNAL_MESSAGE_RAW ADD CONSTRAINT FK_SIGNAL_MSG_RAW_SIGNAL_MSG FOREIGN KEY (ID_PK) REFERENCES TB_SIGNAL_MESSAGE (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE TABLE TB_SEND_ATTEMPT (ID_PK BIGINT AUTO_INCREMENT NOT NULL, START_DATE datetime NOT NULL, END_DATE datetime NOT NULL, STATUS VARCHAR(255) NOT NULL, ERROR VARCHAR(255) NULL, USER_MESSAGE_ID_FK BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_SEND_ATTEMPT PRIMARY KEY (ID_PK));

ALTER TABLE TB_SEND_ATTEMPT ADD CONSTRAINT FK_SEND_ATTEMPT_USER_MSG FOREIGN KEY (USER_MESSAGE_ID_FK) REFERENCES TB_USER_MESSAGE (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_MESSAGE_ID_FK ON TB_SEND_ATTEMPT(USER_MESSAGE_ID_FK);

--  Changeset src/main/resources/db/changelog.xml::EDELIVERY-7803-Miscellaneous Tables::Cosmin Baciu
CREATE TABLE TB_CERTIFICATE (ID_PK BIGINT AUTO_INCREMENT NOT NULL, CERTIFICATE_ALIAS VARCHAR(255) NOT NULL, NOT_VALID_BEFORE_DATE datetime NULL, NOT_VALID_AFTER_DATE datetime NULL, REVOKE_NOTIFICATION_DATE timestamp NULL, ALERT_IMM_NOTIFICATION_DATE timestamp NULL COMMENT 'Alert imminent notification date', ALERT_EXP_NOTIFICATION_DATE timestamp NULL COMMENT 'Alert expired notification date', CERTIFICATE_STATUS VARCHAR(255) NOT NULL, CERTIFICATE_TYPE VARCHAR(255) NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_CERTIFICATE PRIMARY KEY (ID_PK));

ALTER TABLE TB_CERTIFICATE ADD CONSTRAINT UK_CERTIFICATE_ALIAS UNIQUE (CERTIFICATE_ALIAS, CERTIFICATE_TYPE);

CREATE TABLE TB_REV_INFO (ID BIGINT AUTO_INCREMENT NOT NULL, TIMESTAMP BIGINT NULL, REVISION_DATE timestamp NULL, USER_NAME VARCHAR(255) NULL, CONSTRAINT PK_REV_INFO PRIMARY KEY (ID));

CREATE TABLE TB_REV_CHANGES (ID_PK BIGINT AUTO_INCREMENT NOT NULL, REV BIGINT NULL, AUDIT_ORDER INT NULL, ENTITY_NAME VARCHAR(255) NULL, GROUP_NAME VARCHAR(255) NULL, ENTITY_ID VARCHAR(255) NULL, MODIFICATION_TYPE VARCHAR(255) NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_REV_CHANGES PRIMARY KEY (ID_PK));

ALTER TABLE TB_REV_CHANGES ADD CONSTRAINT FK_REV_CHANGES_REV_INFO FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_REV_CHANGES_REV_INFO ON TB_REV_CHANGES(REV);

CREATE TABLE TB_CERTIFICATE_AUD (ID_PK BIGINT NOT NULL, REV BIGINT NOT NULL, REVTYPE TINYINT NULL, CERTIFICATE_ALIAS VARCHAR(255) NULL, NOT_VALID_BEFORE_DATE datetime NULL, NOT_VALID_AFTER_DATE datetime NULL, REVOKE_NOTIFICATION_DATE timestamp NULL, ALERT_IMM_NOTIFICATION_DATE timestamp NULL COMMENT 'Alert imminent notification date', ALERT_EXP_NOTIFICATION_DATE timestamp NULL COMMENT 'Alert expired notification date', CERTIFICATE_STATUS VARCHAR(255) NULL, CERTIFICATE_TYPE VARCHAR(255) NULL, CONSTRAINT PK_CERTIFICATE_AUD PRIMARY KEY (ID_PK, REV));

ALTER TABLE TB_CERTIFICATE_AUD ADD CONSTRAINT FK_CERTIFICATE_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_CERTIFICATE_AUD_REV ON TB_CERTIFICATE_AUD(REV);

CREATE TABLE TB_COMMAND (ID_PK BIGINT AUTO_INCREMENT NOT NULL, SERVER_NAME VARCHAR(255) NOT NULL COMMENT 'The target server name', COMMAND_NAME VARCHAR(255) NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_COMMAND PRIMARY KEY (ID_PK)) COMMENT='Stores commands to be executed by different nodes in clustered environments';

CREATE TABLE TB_COMMAND_PROPERTY (PROPERTY_NAME VARCHAR(50) NOT NULL, PROPERTY_VALUE VARCHAR(255) NULL, FK_COMMAND BIGINT NOT NULL COMMENT 'Reference to the parent command', CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL) COMMENT='Stores properties/parameters of the commands to be executed by different nodes in clustered environments';

ALTER TABLE TB_COMMAND_PROPERTY ADD CONSTRAINT FK_COMMAND_PROPERTY_ID FOREIGN KEY (FK_COMMAND) REFERENCES TB_COMMAND (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_COMMAND_PROPERTY ADD CONSTRAINT UK_COMMAND_PROP_NAME UNIQUE (FK_COMMAND, PROPERTY_NAME);

CREATE TABLE TB_ENCRYPTION_KEY (ID_PK BIGINT AUTO_INCREMENT NOT NULL, KEY_USAGE VARCHAR(255) NULL COMMENT 'The encryption usage: PAYLOAD', SECRET_KEY LONGBLOB NOT NULL COMMENT 'The secret key used for symmetric encryption', INIT_VECTOR LONGBLOB NOT NULL COMMENT 'The initialization vector used for encryption', CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_ENCRYPTION_KEY PRIMARY KEY (ID_PK));

ALTER TABLE TB_ENCRYPTION_KEY ADD CONSTRAINT UK_KEY_USAGE UNIQUE (KEY_USAGE);

CREATE TABLE TB_ERROR_LOG (ID_PK BIGINT AUTO_INCREMENT NOT NULL, ERROR_CODE VARCHAR(255) NULL, ERROR_DETAIL VARCHAR(255) NULL, ERROR_SIGNAL_MESSAGE_ID VARCHAR(255) NULL, MESSAGE_IN_ERROR_ID VARCHAR(255) NULL, MSH_ROLE_ID_FK BIGINT NULL, NOTIFIED timestamp NULL, TIME_STAMP timestamp NULL, USER_MESSAGE_ID_FK BIGINT DEFAULT 19700101 NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_ERROR_LOG PRIMARY KEY (ID_PK));

ALTER TABLE TB_ERROR_LOG ADD CONSTRAINT FK_ERROR_LOG_MSH_ROLE FOREIGN KEY (MSH_ROLE_ID_FK) REFERENCES TB_D_MSH_ROLE (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_ERROR_LOG ADD CONSTRAINT FK_ERROR_LOG_MSG_ID FOREIGN KEY (USER_MESSAGE_ID_FK) REFERENCES TB_USER_MESSAGE (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_ERROR_LOG_MSH_ROLE_ID ON TB_ERROR_LOG(MSH_ROLE_ID_FK);

CREATE INDEX IDX_ERROR_LOG_MSG_ID ON TB_ERROR_LOG(USER_MESSAGE_ID_FK);

CREATE INDEX IDX_MESSAGE_IN_ERROR_ID ON TB_ERROR_LOG(MESSAGE_IN_ERROR_ID);

CREATE INDEX IDX_SIGNAL_MESSAGE_ID ON TB_ERROR_LOG(ERROR_SIGNAL_MESSAGE_ID);

CREATE TABLE TB_VERSION (VERSION VARCHAR(30) NULL, BUILD_TIME VARCHAR(30) NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL) COMMENT='Stores Domibus version and build time';

ALTER TABLE TB_VERSION ADD CONSTRAINT UK_VERSION UNIQUE (VERSION);

--  Changeset src/main/resources/db/changelog.xml::EDELIVERY-10221::Cosmin Baciu
CREATE TABLE TB_FINAL_RECIPIENT_URL (ID_PK BIGINT AUTO_INCREMENT NOT NULL, FINAL_RECIPIENT VARCHAR(255) NULL, ENDPOINT_URL VARCHAR(1000) NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_TB_FINAL_RECIPIENT_URL PRIMARY KEY (ID_PK));

CREATE INDEX TB_FINAL_RECIPIENT_URL_IDX ON TB_FINAL_RECIPIENT_URL(FINAL_RECIPIENT);

--  Changeset src/main/resources/db/changelog.xml::EDELIVERY-7803-PMode Tables::Cosmin Baciu
CREATE TABLE TB_PM_BUSINESS_PROCESS (ID_PK BIGINT AUTO_INCREMENT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_BUSINESS_PROCESS PRIMARY KEY (ID_PK));

CREATE TABLE TB_PM_ACTION (ID_PK BIGINT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, VALUE VARCHAR(255) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_ACTION PRIMARY KEY (ID_PK));

ALTER TABLE TB_PM_ACTION ADD CONSTRAINT FK_ACTION_BP FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_PM_BUSINESS_PROCESS (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_ACTION_BP ON TB_PM_ACTION(FK_BUSINESSPROCESS);

CREATE TABLE TB_ACTION_AUDIT (ID_PK BIGINT AUTO_INCREMENT NOT NULL, AUDIT_TYPE VARCHAR(31) NOT NULL, ENTITY_ID VARCHAR(255) NULL, MODIFICATION_TYPE VARCHAR(255) NULL, REVISION_DATE timestamp NULL, USER_NAME VARCHAR(255) NULL, FROM_QUEUE VARCHAR(255) NULL, TO_QUEUE VARCHAR(255) NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_ACTION_AUDIT PRIMARY KEY (ID_PK));

CREATE OR REPLACE VIEW V_AUDIT_DETAIL AS SELECT
                DISTINCT rc.GROUP_NAME as AUDIT_TYPE ,
                         rc.MODIFICATION_TYPE as ACTION_TYPE,
                         ri.USER_NAME as USER_NAME ,
                         ri.REVISION_DATE as AUDIT_DATE,
                         COALESCE(TRIM(CAST(rc.ENTITY_ID AS CHAR(255))), '') AS ID,
                         COALESCE(TRIM(CAST(ri.ID AS CHAR(19))), '') AS REV_ID
            FROM TB_REV_INFO ri, TB_REV_CHANGES rc
            WHERE ri.ID=rc.REV
            UNION
            SELECT aa.AUDIT_TYPE,aa.MODIFICATION_TYPE,aa.USER_NAME,aa.REVISION_DATE,aa.ENTITY_ID,'1' FROM
                TB_ACTION_AUDIT aa;

CREATE OR REPLACE VIEW V_AUDIT AS SELECT *
            FROM V_AUDIT_DETAIL VAD
            ORDER BY VAD.AUDIT_DATE DESC;

CREATE TABLE TB_PM_AGREEMENT (ID_PK BIGINT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, TYPE VARCHAR(255) NULL, VALUE VARCHAR(255) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_AGREEMENT PRIMARY KEY (ID_PK));

ALTER TABLE TB_PM_AGREEMENT ADD CONSTRAINT FK_AGREEMENT_BP FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_PM_BUSINESS_PROCESS (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_AGREEMENT_BP ON TB_PM_AGREEMENT(FK_BUSINESSPROCESS);

CREATE TABLE TB_PM_PARTY (ID_PK BIGINT AUTO_INCREMENT NOT NULL, ENDPOINT VARCHAR(1024) NULL, NAME VARCHAR(255) NULL, PASSWORD VARCHAR(255) NULL, USERNAME VARCHAR(255) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_PARTY PRIMARY KEY (ID_PK));

ALTER TABLE TB_PM_PARTY ADD CONSTRAINT FK_PARTY_BP FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_PM_BUSINESS_PROCESS (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_PARTY_BP ON TB_PM_PARTY(FK_BUSINESSPROCESS);

CREATE TABLE TB_PM_CONFIGURATION (ID_PK BIGINT AUTO_INCREMENT NOT NULL, FK_BUSINESSPROCESSES BIGINT NULL, FK_PARTY BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_CONFIGURATION PRIMARY KEY (ID_PK));

ALTER TABLE TB_PM_CONFIGURATION ADD CONSTRAINT FK_CONFIG_PARTY FOREIGN KEY (FK_PARTY) REFERENCES TB_PM_PARTY (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_PM_CONFIGURATION ADD CONSTRAINT FK_CONFIG_BP FOREIGN KEY (FK_BUSINESSPROCESSES) REFERENCES TB_PM_BUSINESS_PROCESS (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_CONFIG_PARTY ON TB_PM_CONFIGURATION(FK_PARTY);

CREATE INDEX IDX_FK_CONFIG_BP ON TB_PM_CONFIGURATION(FK_BUSINESSPROCESSES);

CREATE TABLE TB_PM_CONFIGURATION_AUD (ID_PK BIGINT NOT NULL, REV BIGINT NOT NULL, REVTYPE TINYINT NULL, EXPRESSION VARCHAR(255) NULL, EXPRESSION_MOD BIT(1) NULL, NAME VARCHAR(255) NULL, NAME_MOD BIT(1) NULL, CONSTRAINT PK_CONFIGURATION_AUD PRIMARY KEY (ID_PK, REV));

ALTER TABLE TB_PM_CONFIGURATION_AUD ADD CONSTRAINT FK_CONFIG_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_CONFIG_AUD_REV ON TB_PM_CONFIGURATION_AUD(REV);

CREATE TABLE TB_PM_CONFIGURATION_RAW (ID_PK BIGINT AUTO_INCREMENT NOT NULL, CONFIGURATION_DATE timestamp NULL, XML LONGBLOB NULL, `DESCRIPTION` VARCHAR(255) DEFAULT '' NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_CONFIGURATION_RAW PRIMARY KEY (ID_PK));

CREATE TABLE TB_PM_CONFIGURATION_RAW_AUD (ID_PK BIGINT NOT NULL, REV BIGINT NOT NULL, REVTYPE TINYINT NULL, CONFIGURATION_DATE timestamp NULL, CONFIGURATIONDATE_MOD BIT(1) NULL, `DESCRIPTION` VARCHAR(255) NULL, DESCRIPTION_MOD VARCHAR(255) NULL, XML LONGBLOB NULL, XML_MOD BIT(1) NULL, CONSTRAINT PK_CONFIGURATION_RAW_AUD PRIMARY KEY (ID_PK, REV));

ALTER TABLE TB_PM_CONFIGURATION_RAW_AUD ADD CONSTRAINT FK_CONFIG_RAW_AUD FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_CONFIG_RAW_AUD ON TB_PM_CONFIGURATION_RAW_AUD(REV);

CREATE TABLE TB_PM_ERROR_HANDLING (ID_PK BIGINT AUTO_INCREMENT NOT NULL, BUSINESS_ERROR_NOTIFY_CONSUMER BIT(1) NULL, BUSINESS_ERROR_NOTIFY_PRODUCER BIT(1) NULL, DELIVERY_FAIL_NOTIFY_PRODUCER BIT(1) NULL, ERROR_AS_RESPONSE BIT(1) NULL, NAME VARCHAR(255) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_ERROR_HANDLING PRIMARY KEY (ID_PK));

ALTER TABLE TB_PM_ERROR_HANDLING ADD CONSTRAINT FK_ERROR_HANDLING_BP FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_PM_BUSINESS_PROCESS (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_ERROR_HANDLING_BP ON TB_PM_ERROR_HANDLING(FK_BUSINESSPROCESS);

CREATE TABLE TB_PM_PAYLOAD_PROFILE (ID_PK BIGINT AUTO_INCREMENT NOT NULL, MAX_SIZE BIGINT NULL, NAME VARCHAR(255) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_PAYLOAD_PROFILE PRIMARY KEY (ID_PK));

CREATE TABLE TB_PM_PAYLOAD (ID_PK BIGINT AUTO_INCREMENT NOT NULL, CID VARCHAR(255) NULL, IN_BODY BIT(1) NULL, MAX_SIZE INT NULL, MIME_TYPE VARCHAR(255) NULL, NAME VARCHAR(255) NULL, REQUIRED_ BIT(1) NULL, SCHEMA_FILE VARCHAR(1024) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_PAYLOAD PRIMARY KEY (ID_PK));

ALTER TABLE TB_PM_PAYLOAD ADD CONSTRAINT FK_PAYLOAD_BP FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_PM_BUSINESS_PROCESS (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_PAYLOAD_BP ON TB_PM_PAYLOAD(FK_BUSINESSPROCESS);

CREATE TABLE TB_PM_JOIN_PAYLOAD_PROFILE (FK_PAYLOAD BIGINT NOT NULL, FK_PROFILE BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL);

ALTER TABLE TB_PM_JOIN_PAYLOAD_PROFILE ADD CONSTRAINT FK_JP_PROFILE FOREIGN KEY (FK_PAYLOAD) REFERENCES TB_PM_PAYLOAD_PROFILE (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_PM_JOIN_PAYLOAD_PROFILE ADD CONSTRAINT FK_JP_PAYLOAD FOREIGN KEY (FK_PROFILE) REFERENCES TB_PM_PAYLOAD (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_JP_PROFILE ON TB_PM_JOIN_PAYLOAD_PROFILE(FK_PAYLOAD);

CREATE INDEX IDX_FK_JP_PAYLOAD ON TB_PM_JOIN_PAYLOAD_PROFILE(FK_PROFILE);

CREATE TABLE TB_PM_MEP_BINDING (ID_PK BIGINT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, VALUE VARCHAR(1024) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_MEP_BINDING PRIMARY KEY (ID_PK));

ALTER TABLE TB_PM_MEP_BINDING ADD CONSTRAINT FK_MEP_BINDING_BP FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_PM_BUSINESS_PROCESS (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_MEP_BINDING_BP ON TB_PM_MEP_BINDING(FK_BUSINESSPROCESS);

CREATE TABLE TB_PM_ROLE (ID_PK BIGINT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, VALUE VARCHAR(255) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_ROLE PRIMARY KEY (ID_PK));

ALTER TABLE TB_PM_ROLE ADD CONSTRAINT FK_ROLE_BP FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_PM_BUSINESS_PROCESS (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_ROLE_BP ON TB_PM_ROLE(FK_BUSINESSPROCESS);

CREATE TABLE TB_PM_MEP (ID_PK BIGINT AUTO_INCREMENT NOT NULL, LEG_COUNT INT NULL, NAME VARCHAR(255) NULL, VALUE VARCHAR(1024) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_MEP PRIMARY KEY (ID_PK));

ALTER TABLE TB_PM_MEP ADD CONSTRAINT FK_MEP_BP FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_PM_BUSINESS_PROCESS (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_MEP_BP ON TB_PM_MEP(FK_BUSINESSPROCESS);

CREATE TABLE TB_PM_PROCESS (ID_PK BIGINT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, FK_AGREEMENT BIGINT NULL, FK_INITIATOR_ROLE BIGINT NULL, FK_MEP BIGINT NULL, FK_MEP_BINDING BIGINT NULL, FK_RESPONDER_ROLE BIGINT NULL, FK_BUSINESSPROCESS BIGINT NULL, USE_DYNAMIC_INITIATOR BIT(1) NOT NULL, USE_DYNAMIC_RESPONDER BIT(1) NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_PROCESS PRIMARY KEY (ID_PK));

ALTER TABLE TB_PM_PROCESS ADD CONSTRAINT FK_PROCESS_MEP_BINDING FOREIGN KEY (FK_MEP_BINDING) REFERENCES TB_PM_MEP_BINDING (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_PM_PROCESS ADD CONSTRAINT FK_PROCESS_INITIATOR_ROLE FOREIGN KEY (FK_INITIATOR_ROLE) REFERENCES TB_PM_ROLE (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_PM_PROCESS ADD CONSTRAINT FK_PROCESS_MEP FOREIGN KEY (FK_MEP) REFERENCES TB_PM_MEP (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_PM_PROCESS ADD CONSTRAINT FK_PROCESS_BP FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_PM_BUSINESS_PROCESS (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_PM_PROCESS ADD CONSTRAINT FK_PROCESS_RESPONDER_ROLE FOREIGN KEY (FK_RESPONDER_ROLE) REFERENCES TB_PM_ROLE (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_PM_PROCESS ADD CONSTRAINT FK_PROCESS_AGREEMENT FOREIGN KEY (FK_AGREEMENT) REFERENCES TB_PM_AGREEMENT (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_PROCESS_MEP_BINDING ON TB_PM_PROCESS(FK_MEP_BINDING);

CREATE INDEX IDX_FK_PROCESS_INIT_ROLE ON TB_PM_PROCESS(FK_INITIATOR_ROLE);

CREATE INDEX IDX_FK_PROCESS_AGRMNT ON TB_PM_PROCESS(FK_AGREEMENT);

CREATE INDEX IDX_FK_PROCESS_MEP ON TB_PM_PROCESS(FK_MEP);

CREATE INDEX IDX_FK_PROCESS_BP ON TB_PM_PROCESS(FK_BUSINESSPROCESS);

CREATE INDEX IDX_FK_PROCESS_RESP_ROLE ON TB_PM_PROCESS(FK_RESPONDER_ROLE);

CREATE TABLE TB_PM_JOIN_PROCESS_INIT_PARTY (PROCESS_FK BIGINT NOT NULL, PARTY_FK BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL);

ALTER TABLE TB_PM_JOIN_PROCESS_INIT_PARTY ADD CONSTRAINT FK_JOIN_INIT_PARTY_PRS FOREIGN KEY (PROCESS_FK) REFERENCES TB_PM_PROCESS (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_PM_JOIN_PROCESS_INIT_PARTY ADD CONSTRAINT FK_JOIN_INIT_PARTY FOREIGN KEY (PARTY_FK) REFERENCES TB_PM_PARTY (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_JOIN_INIT_PARTY_PRS ON TB_PM_JOIN_PROCESS_INIT_PARTY(PROCESS_FK);

CREATE INDEX IDX_FK_JOIN_INIT_PARTY ON TB_PM_JOIN_PROCESS_INIT_PARTY(PARTY_FK);

CREATE TABLE TB_PM_SECURITY (ID_PK BIGINT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, POLICY VARCHAR(255) NULL, SIGNATURE_METHOD VARCHAR(255) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_SECURITY PRIMARY KEY (ID_PK));

ALTER TABLE TB_PM_SECURITY ADD CONSTRAINT FK_SECURITY_BP FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_PM_BUSINESS_PROCESS (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_SECURITY_BP ON TB_PM_SECURITY(FK_BUSINESSPROCESS);

CREATE TABLE TB_PM_SERVICE (ID_PK BIGINT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, SERVICE_TYPE VARCHAR(255) NULL, VALUE VARCHAR(255) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_SERVICE PRIMARY KEY (ID_PK));

ALTER TABLE TB_PM_SERVICE ADD CONSTRAINT FK_SERVICE_BP FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_PM_BUSINESS_PROCESS (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_SERVICE_BP ON TB_PM_SERVICE(FK_BUSINESSPROCESS);

CREATE TABLE TB_PM_RECEPTION_AWARENESS (ID_PK BIGINT AUTO_INCREMENT NOT NULL, DUPLICATE_DETECTION BIT(1) NULL, NAME VARCHAR(255) NULL, RETRY_COUNT INT NULL, RETRY_TIMEOUT INT NULL, INITIAL_INTERVAL INT DEFAULT 0 NULL, MULTIPLYING_FACTOR INT DEFAULT 0 NULL, STRATEGY VARCHAR(255) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_RECEPTION_AWARENESS PRIMARY KEY (ID_PK));

ALTER TABLE TB_PM_RECEPTION_AWARENESS ADD CONSTRAINT FK_REC_AWRNS_BP FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_PM_BUSINESS_PROCESS (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_REC_AWRNS_BP ON TB_PM_RECEPTION_AWARENESS(FK_BUSINESSPROCESS);

CREATE TABLE TB_PM_RELIABILITY (ID_PK BIGINT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, NON_REPUDIATION BIT(1) NULL, REPLY_PATTERN VARCHAR(255) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_RELIABILITY PRIMARY KEY (ID_PK));

ALTER TABLE TB_PM_RELIABILITY ADD CONSTRAINT FK_RELIABILITY_BP FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_PM_BUSINESS_PROCESS (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_RELIABILITY_BP ON TB_PM_RELIABILITY(FK_BUSINESSPROCESS);

CREATE TABLE TB_PM_MPC (ID_PK BIGINT AUTO_INCREMENT NOT NULL, DEFAULT_MPC BIT(1) NULL, IS_ENABLED BIT(1) NULL, NAME VARCHAR(255) NULL, QUALIFIED_NAME VARCHAR(255) NULL, RETENTION_DOWNLOADED INT NULL, RETENTION_UNDOWNLOADED INT NULL, RETENTION_SENT INT DEFAULT -1 NULL COMMENT 'Retention time for sent messages (both send success and send failure)', DELETE_MESSAGE_METADATA BIT(1) DEFAULT 0 NULL COMMENT 'Specifies whether the message metadata should be deleted or not.', RETENTION_METADATA_OFFSET INT DEFAULT 0 NULL, MAX_BATCH_DELETE INT DEFAULT -1 NULL COMMENT 'Maximum number of DOWNLOADED/UNDOWNLOADED/SENT messages to be deleted in one batch', FK_CONFIGURATION BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_MPC PRIMARY KEY (ID_PK));

ALTER TABLE TB_PM_MPC ADD CONSTRAINT FK_MPC_CONFIGURATION FOREIGN KEY (FK_CONFIGURATION) REFERENCES TB_PM_CONFIGURATION (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_MPC_CONFIGURATION ON TB_PM_MPC(FK_CONFIGURATION);

CREATE TABLE TB_PM_MESSAGE_PROPERTY_SET (ID_PK BIGINT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_MESSAGE_PROPERTY_SET PRIMARY KEY (ID_PK));

ALTER TABLE TB_PM_MESSAGE_PROPERTY_SET ADD CONSTRAINT FK_PROPERTY_SET_BP FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_PM_BUSINESS_PROCESS (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_PROPERTY_SET_BP ON TB_PM_MESSAGE_PROPERTY_SET(FK_BUSINESSPROCESS);

CREATE TABLE TB_PM_SPLITTING (ID_PK BIGINT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL COMMENT 'Splitting configuration name', FRAGMENT_SIZE INT NULL COMMENT 'The fragment size', COMPRESSION BIT(1) NULL COMMENT 'True if compression will be used', COMPRESSION_ALGORITHM VARCHAR(255) NULL COMMENT 'Compression algorithm to use for compressing the SourceMessage', JOIN_INTERVAL INT NULL COMMENT 'The join interval', FK_BUSINESSPROCESS BIGINT NULL COMMENT 'Foreign key to the business process', CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_SPLITTING PRIMARY KEY (ID_PK)) COMMENT='Stores the configuration of the SplitAndJoin parameters configured in the PMode';

CREATE INDEX IDX_FK_SPLT_BP ON TB_PM_SPLITTING(FK_BUSINESSPROCESS);

CREATE TABLE TB_PM_LEG (ID_PK BIGINT AUTO_INCREMENT NOT NULL, COMPRESS_PAYLOADS BIT(1) NULL, NAME VARCHAR(255) NULL, FK_ACTION BIGINT NULL, FK_MPC BIGINT NULL, FK_ERROR_HANDLING BIGINT NULL, FK_PAYLOAD_PROFILE BIGINT NULL, FK_PROPERTY_SET BIGINT NULL, FK_RECEPTION_AWARENESS BIGINT NULL, FK_RELIABILITY BIGINT NULL, FK_SECURITY BIGINT NULL, FK_SERVICE BIGINT NULL, FK_BUSINESSPROCESS BIGINT NULL, FK_SPLITTING BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_LEG PRIMARY KEY (ID_PK));

ALTER TABLE TB_PM_LEG ADD CONSTRAINT FK_LEG_SPLT FOREIGN KEY (FK_SPLITTING) REFERENCES TB_PM_SPLITTING (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_PM_LEG ADD CONSTRAINT FK_LEG_PROPERTY_SET FOREIGN KEY (FK_PROPERTY_SET) REFERENCES TB_PM_MESSAGE_PROPERTY_SET (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_PM_LEG ADD CONSTRAINT FK_LEG_ERROR_HANDLING FOREIGN KEY (FK_ERROR_HANDLING) REFERENCES TB_PM_ERROR_HANDLING (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_PM_LEG ADD CONSTRAINT FK_LEG_ACTION FOREIGN KEY (FK_ACTION) REFERENCES TB_PM_ACTION (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_PM_LEG ADD CONSTRAINT FK_LEG_PAYLOAD_PROFILE FOREIGN KEY (FK_PAYLOAD_PROFILE) REFERENCES TB_PM_PAYLOAD_PROFILE (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_PM_LEG ADD CONSTRAINT FK_LEG_SECURITY FOREIGN KEY (FK_SECURITY) REFERENCES TB_PM_SECURITY (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_PM_LEG ADD CONSTRAINT FK_LEG_SERVICE FOREIGN KEY (FK_SERVICE) REFERENCES TB_PM_SERVICE (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_PM_LEG ADD CONSTRAINT FK_LEG_REC_AWRNS FOREIGN KEY (FK_RECEPTION_AWARENESS) REFERENCES TB_PM_RECEPTION_AWARENESS (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_PM_LEG ADD CONSTRAINT FK_LEG_BP FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_PM_BUSINESS_PROCESS (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_PM_LEG ADD CONSTRAINT FK_LEG_MPC FOREIGN KEY (FK_MPC) REFERENCES TB_PM_MPC (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_PM_LEG ADD CONSTRAINT FK_LEG_RELIABILITY FOREIGN KEY (FK_RELIABILITY) REFERENCES TB_PM_RELIABILITY (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_LEG_REC_AWRNS ON TB_PM_LEG(FK_RECEPTION_AWARENESS);

CREATE INDEX IDX_FK_LEG_BP ON TB_PM_LEG(FK_BUSINESSPROCESS);

CREATE INDEX IDX_FK_LEG_MPC ON TB_PM_LEG(FK_MPC);

CREATE INDEX IDX_FK_LEG_SPLT ON TB_PM_LEG(FK_SPLITTING);

CREATE INDEX IDX_FK_LEG_PROPERTY_SET ON TB_PM_LEG(FK_PROPERTY_SET);

CREATE INDEX IDX_FK_LEG_SERVICE ON TB_PM_LEG(FK_SERVICE);

CREATE INDEX IDX_FK_LEG_ERROR_HANDLING ON TB_PM_LEG(FK_ERROR_HANDLING);

CREATE INDEX IDX_FK_LEG_ACTION ON TB_PM_LEG(FK_ACTION);

CREATE INDEX IDX_FK_LEG_PAYLOAD_PROFILE ON TB_PM_LEG(FK_PAYLOAD_PROFILE);

CREATE INDEX IDX_FK_LEG_SECURITY ON TB_PM_LEG(FK_SECURITY);

CREATE INDEX IDX_FK_LEG_RELIABILITY ON TB_PM_LEG(FK_RELIABILITY);

CREATE TABLE TB_PM_JOIN_PROCESS_LEG (PROCESS_FK BIGINT NOT NULL, LEG_FK BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL);

ALTER TABLE TB_PM_JOIN_PROCESS_LEG ADD CONSTRAINT FK_JOIN_PROCESS_LEG FOREIGN KEY (LEG_FK) REFERENCES TB_PM_LEG (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_PM_JOIN_PROCESS_LEG ADD CONSTRAINT FK_JOIN_PROC_LEG_PROC FOREIGN KEY (PROCESS_FK) REFERENCES TB_PM_PROCESS (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_JOIN_PROCESS_LEG ON TB_PM_JOIN_PROCESS_LEG(LEG_FK);

CREATE INDEX IDX_FK_JOIN_PROC_LEG_PROC ON TB_PM_JOIN_PROCESS_LEG(PROCESS_FK);

CREATE TABLE TB_PM_JOIN_PROCESS_RESP_PARTY (PROCESS_FK BIGINT NOT NULL, PARTY_FK BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL);

ALTER TABLE TB_PM_JOIN_PROCESS_RESP_PARTY ADD CONSTRAINT FK_JOIN_PROC_RESP_PARTY FOREIGN KEY (PARTY_FK) REFERENCES TB_PM_PARTY (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_PM_JOIN_PROCESS_RESP_PARTY ADD CONSTRAINT FK_JN_PROC_RESP_PRT_PROC FOREIGN KEY (PROCESS_FK) REFERENCES TB_PM_PROCESS (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_JOIN_PROC_RESP_PARTY ON TB_PM_JOIN_PROCESS_RESP_PARTY(PARTY_FK);

CREATE INDEX IDX_FK_JN_PROC_RESP_PRT_PROC ON TB_PM_JOIN_PROCESS_RESP_PARTY(PROCESS_FK);

CREATE TABLE TB_PM_MESSAGE_PROPERTY (ID_PK BIGINT AUTO_INCREMENT NOT NULL, DATATYPE VARCHAR(255) NULL, KEY_ VARCHAR(255) NULL, NAME VARCHAR(255) NULL, REQUIRED_ BIT(1) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_MESSAGE_PROPERTY PRIMARY KEY (ID_PK));

ALTER TABLE TB_PM_MESSAGE_PROPERTY ADD CONSTRAINT FK_MESSAGE_PROPERTY_BP FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_PM_BUSINESS_PROCESS (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_MESSAGE_PROPERTY_BP ON TB_PM_MESSAGE_PROPERTY(FK_BUSINESSPROCESS);

CREATE TABLE TB_PM_JOIN_PROPERTY_SET (PROPERTY_FK BIGINT NOT NULL, SET_FK BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL);

ALTER TABLE TB_PM_JOIN_PROPERTY_SET ADD CONSTRAINT FK_JOIN_PROP_SET_PROP FOREIGN KEY (PROPERTY_FK) REFERENCES TB_PM_MESSAGE_PROPERTY_SET (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_PM_JOIN_PROPERTY_SET ADD CONSTRAINT FK_JOIN_PROPERTY_SET FOREIGN KEY (SET_FK) REFERENCES TB_PM_MESSAGE_PROPERTY (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_JOIN_PROP_SET_PROP ON TB_PM_JOIN_PROPERTY_SET(PROPERTY_FK);

CREATE INDEX IDX_FK_JOIN_PROPERTY_SET ON TB_PM_JOIN_PROPERTY_SET(SET_FK);

CREATE TABLE TB_PM_LEG_MPC (LEGCONFIGURATION_ID_PK BIGINT NOT NULL, PARTYMPCMAP_ID_PK BIGINT NOT NULL, PARTYMPCMAP_KEY BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PRIMARY_12 PRIMARY KEY (LEGCONFIGURATION_ID_PK, PARTYMPCMAP_KEY));

ALTER TABLE TB_PM_LEG_MPC ADD CONSTRAINT FK_LEG_MPC_LEG FOREIGN KEY (LEGCONFIGURATION_ID_PK) REFERENCES TB_PM_LEG (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_PM_LEG_MPC ADD CONSTRAINT FK_LEG_MPC_PARTY FOREIGN KEY (PARTYMPCMAP_KEY) REFERENCES TB_PM_PARTY (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_PM_LEG_MPC ADD CONSTRAINT UK_LEG_MPC_PARTYMPCMAP_ID UNIQUE (PARTYMPCMAP_ID_PK);

ALTER TABLE TB_PM_LEG_MPC ADD CONSTRAINT FK_LEG_MPC_MPC FOREIGN KEY (PARTYMPCMAP_ID_PK) REFERENCES TB_PM_MPC (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_LEG_MPC_PARTY ON TB_PM_LEG_MPC(PARTYMPCMAP_KEY);

CREATE TABLE TB_PM_PARTY_AUD (ID_PK BIGINT NOT NULL, REV BIGINT NOT NULL, REVTYPE TINYINT NULL, ENDPOINT VARCHAR(1024) NULL, ENDPOINT_MOD BIT(1) NULL, NAME VARCHAR(255) NULL, NAME_MOD BIT(1) NULL, PASSWORD VARCHAR(255) NULL, PASSWORD_MOD BIT(1) NULL, USERNAME VARCHAR(255) NULL, USERNAME_MOD BIT(1) NULL, CONSTRAINT PK_PARTY_AUD PRIMARY KEY (ID_PK, REV));

ALTER TABLE TB_PM_PARTY_AUD ADD CONSTRAINT FK_PARTY_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_PARTY_AUD_REV ON TB_PM_PARTY_AUD(REV);

CREATE TABLE TB_PM_PARTY_ID_TYPE (ID_PK BIGINT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, VALUE VARCHAR(1024) NULL, FK_BUSINESSPROCESS BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_PARTY_ID_TYPE PRIMARY KEY (ID_PK));

ALTER TABLE TB_PM_PARTY_ID_TYPE ADD CONSTRAINT FK_PARTY_ID_TYPE_BP FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_PM_BUSINESS_PROCESS (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_PARTY_ID_TYPE_BP ON TB_PM_PARTY_ID_TYPE(FK_BUSINESSPROCESS);

CREATE TABLE TB_PM_PARTY_IDENTIFIER (ID_PK BIGINT AUTO_INCREMENT NOT NULL, PARTY_ID VARCHAR(255) NULL, FK_PARTY_ID_TYPE BIGINT NULL, FK_PARTY BIGINT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PM_PARTY_IDENTIFIER PRIMARY KEY (ID_PK));

ALTER TABLE TB_PM_PARTY_IDENTIFIER ADD CONSTRAINT FK_PARTY_IDENT_PARTY FOREIGN KEY (FK_PARTY) REFERENCES TB_PM_PARTY (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_PM_PARTY_IDENTIFIER ADD CONSTRAINT FK_PARTY_IDENT_ID_TYPE FOREIGN KEY (FK_PARTY_ID_TYPE) REFERENCES TB_PM_PARTY_ID_TYPE (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_PARTY_IDENT_PARTY ON TB_PM_PARTY_IDENTIFIER(FK_PARTY);

CREATE INDEX IDX_FK_PARTY_IDENT_ID_TYPE ON TB_PM_PARTY_IDENTIFIER(FK_PARTY_ID_TYPE);

CREATE TABLE TB_PM_PARTY_IDENTIFIER_AUD (ID_PK BIGINT NOT NULL, REV BIGINT NOT NULL, REVTYPE TINYINT NULL, FK_PARTY BIGINT NULL, CONSTRAINT PK_PARTY_IDENTIFIER_AUD PRIMARY KEY (ID_PK, REV));

ALTER TABLE TB_PM_PARTY_IDENTIFIER_AUD ADD CONSTRAINT FK_PARTY_IDENT_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_PARTY_IDENT_AUD_REV ON TB_PM_PARTY_IDENTIFIER_AUD(REV);

CREATE TABLE TB_PM_PARTY_ID_TYPE_AUD (ID_PK BIGINT NOT NULL, REV BIGINT NOT NULL, REVTYPE TINYINT NULL, NAME VARCHAR(255) NULL, NAME_MOD BIT(1) NULL, VALUE VARCHAR(1024) NULL, VALUE_MOD BIT(1) NULL, CONSTRAINT PK_PARTY_ID_TYPE_AUD PRIMARY KEY (ID_PK, REV));

ALTER TABLE TB_PM_PARTY_ID_TYPE_AUD ADD CONSTRAINT FK_PARTY_ID_TYPE_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_PARTY_ID_TYPE_AUD_REV ON TB_PM_PARTY_ID_TYPE_AUD(REV);

ALTER TABLE TB_PM_PAYLOAD_PROFILE ADD CONSTRAINT FK_PAYLOAD_PROFILE_BP FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_PM_BUSINESS_PROCESS (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_PAYLOAD_PROFILE_BP ON TB_PM_PAYLOAD_PROFILE(FK_BUSINESSPROCESS);

--  Changeset src/main/resources/db/changelog.xml::EDELIVERY-7803-Alert Tables::Cosmin Baciu
CREATE TABLE TB_ALERT (ID_PK BIGINT AUTO_INCREMENT NOT NULL, ALERT_TYPE VARCHAR(50) NOT NULL, ATTEMPTS_NUMBER INT NULL, MAX_ATTEMPTS_NUMBER INT NOT NULL, PROCESSED BIT(1) NULL, PROCESSED_TIME timestamp NULL, REPORTING_TIME timestamp NULL, REPORTING_TIME_FAILURE timestamp NULL, NEXT_ATTEMPT timestamp NULL, FK_TIMEZONE_OFFSET BIGINT NULL, ALERT_STATUS VARCHAR(50) NOT NULL, ALERT_LEVEL VARCHAR(20) NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_ALERT PRIMARY KEY (ID_PK));

ALTER TABLE TB_ALERT ADD CONSTRAINT FK_ALERT_TZ_OFFSET FOREIGN KEY (FK_TIMEZONE_OFFSET) REFERENCES TB_D_TIMEZONE_OFFSET (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_ALERT_TZ_OFFSET ON TB_ALERT(FK_TIMEZONE_OFFSET);

CREATE INDEX IDX_ALERT_STATUS ON TB_ALERT(ALERT_STATUS);

CREATE TABLE TB_EVENT (ID_PK BIGINT AUTO_INCREMENT NOT NULL, EVENT_TYPE VARCHAR(50) NOT NULL, REPORTING_TIME timestamp NULL, LAST_ALERT_DATE timestamp NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_EVENT PRIMARY KEY (ID_PK));

CREATE TABLE TB_EVENT_ALERT (FK_EVENT BIGINT NOT NULL, FK_ALERT BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_EVENT_ALERT PRIMARY KEY (FK_EVENT, FK_ALERT));

ALTER TABLE TB_EVENT_ALERT ADD CONSTRAINT FK_ALERT_ID FOREIGN KEY (FK_ALERT) REFERENCES TB_ALERT (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_EVENT_ALERT ADD CONSTRAINT FK_EVENT_ID FOREIGN KEY (FK_EVENT) REFERENCES TB_EVENT (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_ALERT ON TB_EVENT_ALERT(FK_ALERT);

CREATE TABLE TB_EVENT_PROPERTY (ID_PK BIGINT AUTO_INCREMENT NOT NULL, PROPERTY_TYPE VARCHAR(50) NOT NULL, FK_EVENT BIGINT NOT NULL, DTYPE VARCHAR(31) NULL, STRING_VALUE VARCHAR(255) NULL, DATE_VALUE timestamp NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_EVENT_PROPERTY PRIMARY KEY (ID_PK));

ALTER TABLE TB_EVENT_PROPERTY ADD CONSTRAINT FK_EVENT_PROPERTY_ID FOREIGN KEY (FK_EVENT) REFERENCES TB_EVENT (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_EVENT_PROPERTY ON TB_EVENT_PROPERTY(FK_EVENT);

--  Changeset src/main/resources/db/changelog.xml::EDELIVERY-8450::Francois Gautier
CREATE TABLE TB_EARCHIVE_BATCH (ID_PK BIGINT AUTO_INCREMENT NOT NULL, BATCH_ID VARCHAR(255) NULL, ORIGINAL_BATCH_ID VARCHAR(255) NULL COMMENT 'The original BATCH_ID from which this batch was generated/re-exported', REEXPORTED BIT(1) DEFAULT 0 NOT NULL COMMENT 'true if this batch messages were re-exported by a new batch', REQUEST_TYPE VARCHAR(255) NULL, BATCH_STATUS VARCHAR(255) NULL, DATE_REQUESTED timestamp NULL, LAST_PK_USER_MESSAGE BIGINT NULL, FIRST_PK_USER_MESSAGE BIGINT NULL, DOMIBUS_CODE VARCHAR(255) NULL, MESSAGE VARCHAR(255) NULL, MANIFEST_CHECK_SUM VARCHAR(255) NULL, BATCH_SIZE INT NULL, STORAGE_LOCATION VARCHAR(255) NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_EARCHIVE_BATCH PRIMARY KEY (ID_PK));

CREATE UNIQUE INDEX IDX_EARCHIVE_BATCH_UNIQUE_ID ON TB_EARCHIVE_BATCH(BATCH_ID);

CREATE INDEX IDX_EARCHIVE_BATCH_STATUS ON TB_EARCHIVE_BATCH(BATCH_STATUS);

CREATE TABLE TB_EARCHIVEBATCH_UM (ID_PK BIGINT AUTO_INCREMENT NOT NULL, FK_EARCHIVE_BATCH_ID BIGINT NOT NULL, FK_USER_MESSAGE_ID BIGINT NOT NULL, MESSAGE_ID VARCHAR(255) NOT NULL, CONSTRAINT PK_EARCHIVEBATCH_UML PRIMARY KEY (ID_PK));

ALTER TABLE TB_EARCHIVEBATCH_UM ADD CONSTRAINT FK_EARCHIVE_BATCH_ID_FTR FOREIGN KEY (FK_EARCHIVE_BATCH_ID) REFERENCES TB_EARCHIVE_BATCH (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_TB_EARCHIVEBATCH_UM_ID ON TB_EARCHIVEBATCH_UM(FK_USER_MESSAGE_ID);

CREATE INDEX IDX_TB_EARCHIVEBATCH_UM_B_ID ON TB_EARCHIVEBATCH_UM(FK_EARCHIVE_BATCH_ID);

CREATE TABLE TB_EARCHIVE_START (ID_PK BIGINT AUTO_INCREMENT NOT NULL, LAST_PK_USER_MESSAGE BIGINT NULL, `DESCRIPTION` VARCHAR(255) NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_EARCHIVE_START PRIMARY KEY (ID_PK));

--  Changeset src/main/resources/db/changelog.xml::EDELIVERY-7803-Backend Filter Tables::Cosmin Baciu
CREATE TABLE TB_BACKEND_FILTER (ID_PK BIGINT AUTO_INCREMENT NOT NULL, BACKEND_NAME VARCHAR(255) NULL, PRIORITY INT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_BACKEND_FILTER PRIMARY KEY (ID_PK));

CREATE TABLE TB_BACKEND_FILTER_AUD (ID_PK BIGINT NOT NULL, REV BIGINT NOT NULL, REVTYPE TINYINT NULL, BACKEND_NAME VARCHAR(255) NULL, BACKENDNAME_MOD BIT(1) NULL, PRIORITY INT NULL, INDEX_MOD BIT(1) NULL, ROUTINGCRITERIAS_MOD BIT(1) NULL, CONSTRAINT PK_BACKEND_FILTER_AUD PRIMARY KEY (ID_PK, REV));

CREATE INDEX IDX_FK_BACKEND_FTR_AUD_REV ON TB_BACKEND_FILTER_AUD(REV);

ALTER TABLE TB_BACKEND_FILTER_AUD ADD CONSTRAINT FK_BACKEND_FILTER_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE TABLE TB_ROUTING_CRITERIA (ID_PK BIGINT AUTO_INCREMENT NOT NULL, EXPRESSION VARCHAR(255) NULL, NAME VARCHAR(255) NULL, FK_BACKEND_FILTER BIGINT NULL, PRIORITY INT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_ROUTING_CRITERIA PRIMARY KEY (ID_PK));

ALTER TABLE TB_ROUTING_CRITERIA ADD CONSTRAINT FK_ROUT_CRIT_BACK_FTR FOREIGN KEY (FK_BACKEND_FILTER) REFERENCES TB_BACKEND_FILTER (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_ROUT_CRIT_BACK_FTR ON TB_ROUTING_CRITERIA(FK_BACKEND_FILTER);

CREATE TABLE TB_ROUTING_CRITERIA_AUD (ID_PK BIGINT NOT NULL, REV BIGINT NOT NULL, REVTYPE TINYINT NULL, EXPRESSION VARCHAR(255) NULL, EXPRESSION_MOD BIT(1) NULL, NAME VARCHAR(255) NULL, NAME_MOD BIT(1) NULL, CONSTRAINT PK_ROUTING_CRITERIA_AUD PRIMARY KEY (ID_PK, REV));

ALTER TABLE TB_ROUTING_CRITERIA_AUD ADD CONSTRAINT FK_ROUT_CRIT_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_ROUT_CRIT_AUD_REV ON TB_ROUTING_CRITERIA_AUD(REV);

CREATE TABLE TB_BACK_RCRITERIA_AUD (ID_PK BIGINT NOT NULL, REV BIGINT NOT NULL, REVTYPE TINYINT NULL, FK_BACKEND_FILTER BIGINT NULL, PRIORITY INT NULL, CONSTRAINT PK_BACK_RCRITERIA_AUD PRIMARY KEY (ID_PK, REV));

ALTER TABLE TB_BACK_RCRITERIA_AUD ADD CONSTRAINT FK_BCK_RCR_AUD_REV_INFO FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_BCK_RCR_AUD_REV_INFO ON TB_BACK_RCRITERIA_AUD(REV);

--  Changeset src/main/resources/db/changelog.xml::EDELIVERY-7803-User/Plugin User Tables::Cosmin Baciu
CREATE TABLE TB_AUTHENTICATION_ENTRY (ID_PK BIGINT AUTO_INCREMENT NOT NULL, CERTIFICATE_ID VARCHAR(255) NULL, USERNAME VARCHAR(255) NULL, PASSWD VARCHAR(255) NULL, AUTH_ROLES VARCHAR(255) NOT NULL, ORIGINAL_USER VARCHAR(255) NULL, BACKEND VARCHAR(255) NULL, PASSWORD_CHANGE_DATE timestamp NULL, DEFAULT_PASSWORD BIT(1) DEFAULT 0 NULL, ATTEMPT_COUNT INT DEFAULT 0 NOT NULL, SUSPENSION_DATE timestamp NULL, USER_ENABLED BIT(1) DEFAULT 1 NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_AUTHENTICATION_ENTRY PRIMARY KEY (ID_PK));

ALTER TABLE TB_AUTHENTICATION_ENTRY ADD CONSTRAINT UK_PLUGIN_USER_NAME UNIQUE (USERNAME);

ALTER TABLE TB_AUTHENTICATION_ENTRY ADD CONSTRAINT UK_PLUGIN_USER_CERT UNIQUE (CERTIFICATE_ID);

CREATE TABLE TB_AUTHENTICATION_ENTRY_AUD (ID_PK BIGINT NOT NULL, REV BIGINT NOT NULL, REVTYPE TINYINT NULL, CERTIFICATE_ID VARCHAR(255) NULL, CERTIFICATEID_MOD BIT(1) NULL, USERNAME VARCHAR(255) NULL, USERNAME_MOD BIT(1) NULL, PASSWD VARCHAR(255) NULL, PASSWORD_MOD BIT(1) NULL, AUTH_ROLES VARCHAR(255) NULL, AUTHROLES_MOD BIT(1) NULL, ORIGINAL_USER VARCHAR(255) NULL, ORIGINALUSER_MOD BIT(1) NULL, BACKEND VARCHAR(255) NULL, BACKEND_MOD BIT(1) NULL, USER_ENABLED BIT(1) NULL, ACTIVE_MOD BIT(1) NULL, PASSWORD_CHANGE_DATE timestamp NULL, PASSWORDCHANGEDATE_MOD BIT(1) NULL, DEFAULT_PASSWORD BIT(1) NULL, DEFAULTPASSWORD_MOD BIT(1) NULL, CONSTRAINT PK_AUTHENTICATION_ENTRY_AUD PRIMARY KEY (ID_PK, REV));

ALTER TABLE TB_AUTHENTICATION_ENTRY_AUD ADD CONSTRAINT FK_AUTH_ENTRY_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_AUTH_ENTRY_AUD_REV ON TB_AUTHENTICATION_ENTRY_AUD(REV);

CREATE TABLE TB_PLUGIN_USER_PASSWD_HISTORY (ID_PK BIGINT AUTO_INCREMENT NOT NULL, USER_ID BIGINT NOT NULL, USER_PASSWORD VARCHAR(255) NOT NULL, PASSWORD_CHANGE_DATE timestamp NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PLUGIN_USER_PASSWD_HISTO PRIMARY KEY (ID_PK));

ALTER TABLE TB_PLUGIN_USER_PASSWD_HISTORY ADD CONSTRAINT FK_PLUGIN_USER_PASSWD_HISTORY FOREIGN KEY (USER_ID) REFERENCES TB_AUTHENTICATION_ENTRY (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_PLUGIN_USER_ID ON TB_PLUGIN_USER_PASSWD_HISTORY(USER_ID);

CREATE TABLE TB_USER (ID_PK BIGINT AUTO_INCREMENT NOT NULL, USER_EMAIL VARCHAR(255) NULL, USER_ENABLED BIT(1) NOT NULL, USER_PASSWORD VARCHAR(255) NOT NULL, USER_NAME VARCHAR(255) NOT NULL, OPTLOCK INT NULL, ATTEMPT_COUNT INT DEFAULT 0 NULL, SUSPENSION_DATE timestamp NULL, USER_DELETED BIT(1) DEFAULT 0 NOT NULL, PASSWORD_CHANGE_DATE timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, DEFAULT_PASSWORD BIT(1) DEFAULT 0 NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_USER PRIMARY KEY (ID_PK));

ALTER TABLE TB_USER ADD CONSTRAINT UK_USER_NAME UNIQUE (USER_NAME);

CREATE TABLE TB_USER_AUD (ID_PK BIGINT NOT NULL, REV BIGINT NOT NULL, REVTYPE TINYINT NULL, USER_ENABLED BIT(1) NULL, ACTIVE_MOD BIT(1) NULL, USER_DELETED BIT(1) NULL, DELETED_MOD BIT(1) NULL, USER_EMAIL VARCHAR(255) NULL, EMAIL_MOD BIT(1) NULL, USER_PASSWORD VARCHAR(255) NULL, PASSWORD_MOD BIT(1) NULL, USER_NAME VARCHAR(255) NULL, USERNAME_MOD BIT(1) NULL, OPTLOCK INT NULL, VERSION_MOD BIT(1) NULL, ROLES_MOD BIT(1) NULL, PASSWORD_CHANGE_DATE timestamp NULL, PASSWORDCHANGEDATE_MOD BIT(1) NULL, DEFAULT_PASSWORD BIT(1) NULL, DEFAULTPASSWORD_MOD BIT(1) NULL, CONSTRAINT PK_USER_AUD PRIMARY KEY (ID_PK, REV));

ALTER TABLE TB_USER_AUD ADD CONSTRAINT FK_USER_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_USER_AUD_REV ON TB_USER_AUD(REV);

CREATE TABLE TB_USER_PASSWORD_HISTORY (ID_PK BIGINT AUTO_INCREMENT NOT NULL, USER_ID BIGINT NOT NULL, USER_PASSWORD VARCHAR(255) NOT NULL, PASSWORD_CHANGE_DATE timestamp NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_USER_PASSWORD_HISTORY PRIMARY KEY (ID_PK));

ALTER TABLE TB_USER_PASSWORD_HISTORY ADD CONSTRAINT FK_USER_PASSWORD_HISTORY FOREIGN KEY (USER_ID) REFERENCES TB_USER (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_UPH_USER_ID ON TB_USER_PASSWORD_HISTORY(USER_ID);

CREATE TABLE TB_USER_ROLE (ID_PK BIGINT AUTO_INCREMENT NOT NULL, ROLE_NAME VARCHAR(255) NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_USER_ROLE PRIMARY KEY (ID_PK));

ALTER TABLE TB_USER_ROLE ADD CONSTRAINT UK_ROLE_NAME UNIQUE (ROLE_NAME);

CREATE TABLE TB_USER_ROLES (USER_ID BIGINT NOT NULL, ROLE_ID BIGINT NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PRIMARY PRIMARY KEY (USER_ID, ROLE_ID));

ALTER TABLE TB_USER_ROLES ADD CONSTRAINT FK_USER_ROLES_ROLE FOREIGN KEY (USER_ID) REFERENCES TB_USER (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE TB_USER_ROLES ADD CONSTRAINT FK_USER_ROLES_USER FOREIGN KEY (ROLE_ID) REFERENCES TB_USER_ROLE (ID_PK) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_ROLE_ID ON TB_USER_ROLES(ROLE_ID);

CREATE TABLE TB_USER_ROLES_AUD (REV BIGINT NULL, REVTYPE TINYINT NULL, USER_ID BIGINT NULL, ROLE_ID BIGINT NULL);

CREATE TABLE TB_USER_ROLE_AUD (ID_PK BIGINT NOT NULL, REV BIGINT NOT NULL, REVTYPE TINYINT NULL, ROLE_NAME VARCHAR(255) NULL, NAME_MOD BIT(1) NULL, USERS_MOD BIT(1) NULL, CONSTRAINT PK_USER_ROLE_AUD PRIMARY KEY (ID_PK, REV));

ALTER TABLE TB_USER_ROLE_AUD ADD CONSTRAINT FK_USR_ROL_AUD_REV_INFO FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID) ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE INDEX IDX_FK_USR_ROL_AUD_REV_INFO ON TB_USER_ROLE_AUD(REV);

--  Changeset src/main/resources/db/changelog.xml::EDELIVERY-4669::dussath
--  Create pull request table
CREATE TABLE TB_PULL_REQUEST (PULL_REQUEST_UUID VARCHAR(255) NOT NULL, MPC VARCHAR(255) NOT NULL, CONSTRAINT PK_PULL_REQUEST PRIMARY KEY (PULL_REQUEST_UUID));

--  Changeset src/main/resources/db/changelog.xml::EDELIVERY-8503_1::ion perpegel
CREATE TABLE TB_LOCK (ID_PK BIGINT AUTO_INCREMENT NOT NULL, LOCK_KEY VARCHAR(255) NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_LOCK PRIMARY KEY (ID_PK)) COMMENT='Stores keys used for locking/synchronizing in cluster';

ALTER TABLE TB_LOCK ADD CONSTRAINT UK_LOCK_KEY UNIQUE (LOCK_KEY);

--  Changeset src/main/resources/db/changelog.xml::EDELIVERY-8532::ion perpegel
CREATE TABLE TB_TRUSTSTORE (ID_PK BIGINT AUTO_INCREMENT NOT NULL, NAME VARCHAR(100) NOT NULL, TYPE VARCHAR(50) NOT NULL, PASSWORD VARCHAR(100) NOT NULL, CONTENT LONGBLOB NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_TRUSTSTORE PRIMARY KEY (ID_PK));

ALTER TABLE TB_TRUSTSTORE ADD CONSTRAINT UK_NAME UNIQUE (NAME);

--  Changeset src/main/resources/db/changelog.xml::EDELIVERY-9563::Razvan Cretu
CREATE TABLE TB_PARTY_STATUS (ID_PK BIGINT AUTO_INCREMENT NOT NULL, PARTY_NAME VARCHAR(100) NOT NULL, CONNECTIVITY_STATUS VARCHAR(50) NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_PARTY_STATUS PRIMARY KEY (ID_PK));

ALTER TABLE TB_PARTY_STATUS ADD CONSTRAINT UK_PARTY_NAME UNIQUE (PARTY_NAME);

--  Changeset src/main/resources/db/changelog.xml::EDELIVERY-9686::Lucian Furca
ALTER TABLE TB_PM_SECURITY ADD PROFILE VARCHAR(255) NULL;

--  Changeset src/main/resources/db/changelog.xml::EDELIVERY-10091::Soumya Chandran 
CREATE TABLE TB_MESSAGES_TO_RESEND (ID_PK BIGINT AUTO_INCREMENT NOT NULL, MESSAGE_ID VARCHAR(255) NOT NULL, CREATION_TIME timestamp DEFAULT (UTC_TIMESTAMP) NOT NULL, CREATED_BY VARCHAR(255) DEFAULT 'DOMIBUS' NOT NULL, MODIFICATION_TIME timestamp NULL, MODIFIED_BY VARCHAR(255) NULL, CONSTRAINT PK_MESSAGES_TO_RESEND PRIMARY KEY (ID_PK));

ALTER TABLE TB_MESSAGES_TO_RESEND ADD CONSTRAINT UK_MESSAGE_ID UNIQUE (MESSAGE_ID);

