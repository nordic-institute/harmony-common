#!/bin/bash
set -e

. /usr/share/debconf/confmodule

escape_for_sed() {
    printf '%s\n' "$1" | sed -e 's/[\/&]/\\&/g'
}

SUCCESS=false
DROPDBONERROR=false

cleanup() {
  if [ ! "$SUCCESS" = true ]; then
    rm -f /etc/harmony-ap/*.jks
    if [ "$DROPDBONERROR" = true ]; then
      mysql -e "DROP SCHEMA harmony_ap; DROP USER harmony_ap@localhost"
    fi;
  fi
}

case "$1" in
 configure)

  trap cleanup EXIT

  db_get harmony-ap/usedynamicdiscovery
  USEDYNAMIC="$RET"
  if [ ! "$USEDYNAMIC" = true ]; then
    USEDYNAMIC=false
  fi
  db_get harmony-ap/smlzone
  SMLZONE="$RET"
  db_get harmony-ap/adminuser
  AUSER="$RET"
  db_get harmony-ap/adminpassword
  APASSWORD="$RET"
  db_get harmony-ap/partyname
  PARTYNAME="$RET"
  db_get harmony-ap/serverdn
  SERVERDN="$RET"
  db_get harmony-ap/tomcatport
  TOMCATPORT="$RET"
  db_stop

  DBUSER=harmony_ap
  SCHEMA_EXISTS=$(mysql -s -N -e "SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME='harmony_ap'");
  if [ -z "$SCHEMA_EXISTS" ]; then
    DROPDBONERROR=true
    echo "Creating database schema harmony_ap" >&2
    DBPASSWORD=$(openssl rand -base64 12)
    mysql -e \
      "create schema harmony_ap; \
      alter database harmony_ap charset=utf8mb4 collate=utf8mb4_bin; \
      create user $DBUSER@localhost identified by '$DBPASSWORD'; \
      grant all on harmony_ap.* to $DBUSER@localhost; \
      grant xa_recover_admin on *.* to $DBUSER@localhost;"

    mysql harmony_ap < /opt/harmony-ap/setup/harmony_ap_schema.ddl

    HASHEDPASSWORD=$(java -cp "/opt/harmony-ap/webapps/ROOT/WEB-INF/lib/*" \
      eu.domibus.api.util.BCryptPasswordHash "$APASSWORD")

    mysql -e "INSERT INTO harmony_ap.TB_USER (ID_PK, USER_NAME, USER_PASSWORD, USER_ENABLED, USER_DELETED, DEFAULT_PASSWORD) \
       VALUES ('1', '$AUSER', '$HASHEDPASSWORD', 1, 0, 0);
        INSERT INTO harmony_ap.TB_USER_ROLES (USER_ID, ROLE_ID) VALUES ('1', '1');"
  else
    echo "Schema harmony_ap already exists. Skipping schema creation" >&2
  fi

  if [ ! -f /etc/harmony-ap/domibus.properties ]; then
    rm -f /etc/harmony-ap/*.jks

    KEYSTOREPASS=$(openssl rand -base64 12)
    TRUSTSTOREPASS=$(openssl rand -base64 12)
    TLSKEYPASS=$(openssl rand -base64 12)
    TLSTRUSTSTOREPASS=$(openssl rand -base64 12)

    keytool -J-Dkeystore.pkcs12.legacy -genkeypair -keyalg RSA -alias $PARTYNAME -keystore /etc/harmony-ap/ap-keystore.jks -storepass $KEYSTOREPASS \
      -keypass $KEYSTOREPASS -validity 333 -keysize 3072 -dname "$SERVERDN" 2>/dev/null

    keytool -J-Dkeystore.pkcs12.legacy -genkeypair -keyalg RSA -alias $PARTYNAME -keystore /etc/harmony-ap/tls-keystore.jks -storepass $TLSKEYPASS \
      -keypass $TLSKEYPASS -validity 333 -keysize 3072 -dname "$SERVERDN" 2>/dev/null

    keytool -J-Dkeystore.pkcs12.legacy -genkeypair -alias mock -keystore /etc/harmony-ap/ap-truststore.jks -storepass $TRUSTSTOREPASS \
      -keypass $TRUSTSTOREPASS -dname "CN=mock" 2>/dev/null
    keytool -delete -alias mock -keystore /etc/harmony-ap/ap-truststore.jks -storepass $TRUSTSTOREPASS 2>/dev/null

    keytool -export -alias $PARTYNAME -file /etc/harmony-ap/selfsigned.cer \
      -keystore /etc/harmony-ap/tls-keystore.jks -storepass $TLSKEYPASS 2>/dev/null
    keytool -import -noprompt -alias $PARTYNAME -file /etc/harmony-ap/selfsigned.cer \
      -keystore /etc/harmony-ap/tls-truststore.jks -storepass $TLSTRUSTSTOREPASS 2>/dev/null
    rm -f /etc/harmony-ap/selfsigned.cer

    E_KEYSTOREPASS=$(escape_for_sed "$KEYSTOREPASS")
    E_TRUSTSTOREPASS=$(escape_for_sed "$TRUSTSTOREPASS")
    E_DBUSER=$(escape_for_sed "$DBUSER")
    E_DBPASSWORD=$(escape_for_sed "$DBPASSWORD")
    E_TLSKEYPASS=$(escape_for_sed "$TLSKEYPASS")
    E_TLSTRUSTSTOREPASS=$(escape_for_sed "$TLSTRUSTSTOREPASS")
    E_SMLZONE=$(escape_for_sed "$SMLZONE")
    E_PARTYNAME=$(escape_for_sed "$PARTYNAME")
    E_TOMCATPORT=$(escape_for_sed "$TOMCATPORT")

    sed -e "s/{{tls_keystore_password}}/$E_TLSKEYPASS/" -e "s/{{tls_truststore_password}}/$E_TLSTRUSTSTOREPASS/" \
      -e "s/{{tomcat_port}}/$E_TOMCATPORT/" \
        /opt/harmony-ap/setup/server.xml.template > /etc/harmony-ap/tomcat-conf/server.xml

    sed -e "s/{{tls_truststore_password}}/$E_TLSTRUSTSTOREPASS/" \
        /opt/harmony-ap/setup/clientauthentication.xml.template > /etc/harmony-ap/clientauthentication.xml

    sed -e "s/{{keystorepass}}/$E_KEYSTOREPASS/" -e "s/{{truststorepass}}/$E_TRUSTSTOREPASS/" \
      -e "s/{{dbuser}}/$E_DBUSER/" -e "s/{{dbpassword}}/$E_DBPASSWORD/" \
      -e "s/{{dynamicdiscovery}}/$USEDYNAMIC/" -e "s/{{smlzone}}/$E_SMLZONE/" \
      -e "s/{{partyname}}/$E_PARTYNAME/" \
        /opt/harmony-ap/setup/domibus.properties.template > /etc/harmony-ap/domibus.properties

    sed -e "s/{{tls_truststore_password}}/$E_TLSTRUSTSTOREPASS/" \
        /opt/harmony-ap/setup/setenv.sh.template > /opt/harmony-ap/bin/setenv.sh

    # Check if Tomcat runs on a privileged port - port number below 1024
    PORT_NUMBER_REGEX='^((6553[0-5])|(655[0-2][0-9])|(65[0-4][0-9]{2})|(6[0-4][0-9]{3})|([1-5][0-9]{4})|([0-5]{0,5})|([0-9]{1,4}))$'
    if [[ $E_TOMCATPORT =~ $PORT_NUMBER_REGEX && $E_TOMCATPORT -lt 1024 ]]; then
        echo "Tomcat will run on a privileged port" >&2
        if [ -d /usr/lib/jvm/java-11-openjdk-amd64 ]; then
          setcap cap_net_bind_service+ep /usr/lib/jvm/java-11-openjdk-amd64/bin/java
        else
          setcap cap_net_bind_service+ep /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
        fi
    fi
  fi

  # Required to support upgrade from 1.0.0 to 1.1.0
  if [ ! -f /opt/harmony-ap/bin/setenv.sh ]; then
    echo "Create /opt/harmony-ap/bin/setenv.sh file" >&2
    cp /opt/harmony-ap/setup/setenv.sh /opt/harmony-ap/bin/setenv.sh
  fi

  # Make sure the administrative user exists
  if ! getent passwd harmony-ap > /dev/null; then
    adduser --system --quiet --no-create-home --shell /usr/sbin/nologin --group --gecos "Harmony user" harmony-ap
  fi

  # Check validity of user and group
  if [ "`id -u harmony-ap`" -eq 0 ]; then
      echo "The Harmony AP system user must not have uid 0 (root).Please fix this and reinstall this package." >&2
      exit 1
  fi
  if [ "`id -g harmony-ap`" -eq 0 ]; then
      echo "The Harmony AP system user must not have root as primary group. Please fix this and reinstall this package." >&2
      exit 1
  fi

  # Check if the Tomcat startup.sh script loads the setjavahome.sh script and update the
  # startup.sh script if needed
  if [ -f /opt/harmony-ap/bin/setjavahome.sh ] && ! grep -Fxq "source /opt/harmony-ap/bin/setjavahome.sh" /opt/harmony-ap/bin/startup.sh; then
    REPLACEMENT="source \/opt\/harmony-ap\/bin\/setjavahome.sh"
    # Get the line number of the second last line of the script header
    START_LINE_NUMBER=$(grep -n '# Start Script' /opt/harmony-ap/bin/startup.sh | cut -d ":" -f 1)
    # Line number of the first empty line in the script
    LINE_NUMBER=$(($START_LINE_NUMBER+2))
    # Replace the first empty line
    sed -i "${LINE_NUMBER}s/^$/$REPLACEMENT/" /opt/harmony-ap/bin/startup.sh
  fi

  mkdir -p /opt/harmony-ap/temp

  chown -R harmony-ap:harmony-ap /opt/harmony-ap
  chmod -R 0755 /opt/harmony-ap

  # nicer log directory permissions
  mkdir -p /var/log/harmony-ap
  chmod 1770 /var/log/harmony-ap
  chown harmony-ap:adm /var/log/harmony-ap

  # config folder permissions
  chown -R harmony-ap:harmony-ap /etc/harmony-ap
  chmod -R 0751 /etc/harmony-ap

  if [ "$(systemctl is-enabled harmony-ap)" = "enabled" ]; then
    systemctl daemon-reload
    systemctl start harmony-ap 2>/dev/null || true
  fi

  SUCCESS=true
 ;;


 abort-upgrade|abort-remove|abort-deconfigure)
 ;;

 *)
    log "postinst called with unknown argument \`$1'" >&2
    exit 1
 ;;
esac

exit 0
