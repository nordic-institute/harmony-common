#!/bin/bash
set -e

. /usr/share/debconf/confmodule

escape_for_sed() {
    printf '%s\n' "$1" | sed -e 's/[\/&]/\\&/g'
}

SUCCESS=false
DROPDBONERROR=false

cleanup() {
  db_stop
  if [ ! "$SUCCESS" = true ]; then
    if [ "$DROPDBONERROR" = true ]; then
      mysql -e "DROP SCHEMA harmony_smp; DROP USER $DBUSER@localhost"
    fi;
  fi
}

trap cleanup EXIT

case "$1" in
 configure)

  db_get harmony-smp/serverdn
  SERVERDN="$RET"
  db_get harmony-smp/integratewithsml
  INTEGRATESML="$RET"
  if [ ! "$INTEGRATESML" = true ]; then
    INTEGRATESML=false
  fi
  db_get harmony-smp/smlurl
  SMLURL="$RET"
  db_get harmony-smp/smpurl
  SMPURL="$RET"
  db_get harmony-smp/smpip
  SMPIP="$RET"
  db_get harmony-smp/tomcatport
  TOMCATPORT="$RET"

  export LIQUIBASE_HOME=/opt/liquibase
  export URL=jdbc:mysql://localhost:3306/harmony_smp

  SCHEMA_EXISTS=$(mysql -s -N -e "SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME='harmony_smp'");
  if [ -z "$SCHEMA_EXISTS" ]; then

    db_input high harmony-smp/adminuser || true
    db_input high harmony-smp/adminpassword || true
    db_go

    db_get harmony-smp/adminuser
    AUSER="$RET"
    db_get harmony-smp/adminpassword
    APASSWORD="$RET"
    db_reset harmony-smp/adminpassword

    echo "Creating database schema harmony_smp" >&2

    DBUSER=harmony_smp
    DBPASSWORD=$(openssl rand -base64 12)

    mysql -e \
      "create schema harmony_smp; \
      alter database harmony_smp charset=utf8mb4 collate=utf8mb4_bin; \
      create user $DBUSER@localhost identified by '$DBPASSWORD'; \
      grant all on harmony_smp.* to $DBUSER@localhost;"
    DROPDBONERROR=true

    echo "Apply liquibase migrations"  >&2

    $LIQUIBASE_HOME/liquibase \
      --classpath=/opt/harmony-smp/setup/mysql-connector-java-8.0.30.jar \
    	--driver=com.mysql.cj.jdbc.Driver \
    	--url=$URL \
    	--username=$DBUSER \
      --password=$DBPASSWORD \
    	--changeLogFile=/root/changelog.mysql.sql \
      update

    HASHEDPASSWORD=$(java -cp "/opt/harmony-smp/webapps/ROOT/WEB-INF/lib/*" \
      eu.europa.ec.edelivery.smp.utils.BCryptPasswordHash "$APASSWORD")

    mysql harmony_smp -e \
      "INSERT INTO SMP_USER (ID, USERNAME, PASSWORD, ROLE, ACTIVE, CREATED_ON, LAST_UPDATED_ON, PASSWORD_CHANGED)
         VALUES(1, '$AUSER', '$HASHEDPASSWORD', 'SYSTEM_ADMIN', 1, NOW(), NOW(), NOW());

       INSERT INTO SMP_CONFIGURATION (PROPERTY, VALUE, CREATED_ON, LAST_UPDATED_ON)
         VALUES ('contextPath.output', 'true', NOW(), NOW());
       INSERT INTO SMP_CONFIGURATION (PROPERTY, VALUE, CREATED_ON, LAST_UPDATED_ON)
         VALUES ('bdmsl.integration.enabled', '$INTEGRATESML', NOW(), NOW());
       INSERT INTO SMP_CONFIGURATION (PROPERTY, VALUE, CREATED_ON, LAST_UPDATED_ON)
         VALUES ('bdmsl.integration.url', '$SMLURL', NOW(), NOW());
       INSERT INTO SMP_CONFIGURATION (PROPERTY, VALUE, CREATED_ON, LAST_UPDATED_ON)
         VALUES ('bdmsl.integration.tls.disableCNCheck', 'false', NOW(), NOW());
       INSERT INTO SMP_CONFIGURATION (PROPERTY, VALUE, CREATED_ON, LAST_UPDATED_ON)
         VALUES ('bdmsl.integration.logical.address', '$SMPURL', NOW(), NOW());
       INSERT INTO SMP_CONFIGURATION (PROPERTY, VALUE, CREATED_ON, LAST_UPDATED_ON)
         VALUES ('bdmsl.integration.physical.address', '$SMPIP', NOW(), NOW());
       INSERT INTO SMP_CONFIGURATION (PROPERTY, VALUE, CREATED_ON, LAST_UPDATED_ON)
         VALUES ('bdmsl.integration.tls.serverSubjectRegex', '', NOW(), NOW());
       INSERT INTO SMP_CONFIGURATION (PROPERTY, VALUE, CREATED_ON, LAST_UPDATED_ON)
         VALUES ('smp.keystore.filename', 'smp-keystore.jks', NOW(), NOW());
       INSERT INTO SMP_CONFIGURATION (PROPERTY, VALUE, CREATED_ON, LAST_UPDATED_ON)
         VALUES ('smp.truststore.filename', 'smp-truststore.jks', NOW(), NOW());
       INSERT INTO SMP_CONFIGURATION (PROPERTY, VALUE, CREATED_ON, LAST_UPDATED_ON)
         VALUES ('authentication.blueCoat.enabled', 'false', NOW(), NOW());
       INSERT INTO SMP_CONFIGURATION (PROPERTY, VALUE, CREATED_ON, LAST_UPDATED_ON)
         VALUES ('configuration.dir', '/etc/harmony-smp/', NOW(), NOW());"
  else
    echo "Schema harmony_smp already exists. Sync liquibase" >&2

    DBUSER=$(xmlstarlet sel -t -v "/Context/Resource/@username" /etc/harmony-smp/tomcat-conf/context.xml)
    DBPASSWORD=$(xmlstarlet sel -t -v "/Context/Resource/@password" /etc/harmony-smp/tomcat-conf/context.xml)

    if [[ -z $DBUSER || -z $DBPASSWORD ]]; then
      echo 'Existing database credentials not found'
      exit 1
    fi

    echo "Sync change log" >&2

    $LIQUIBASE_HOME/liquibase \
      --classpath=/opt/harmony-smp/setup/mysql-connector-java-8.0.30.jar \
    	--driver=com.mysql.cj.jdbc.Driver \
    	--url=$URL \
    	--username=$DBUSER \
      --password=$DBPASSWORD \
    	--changeLogFile=/root/changelog.mysql.sql \
      --contexts=legacy \
      changelog-sync

    echo "Update database" >&2

    $LIQUIBASE_HOME/liquibase \
      --classpath=/opt/harmony-smp/setup/mysql-connector-java-8.0.30.jar \
    	--driver=com.mysql.cj.jdbc.Driver \
    	--url=$URL \
    	--username=$DBUSER \
      --password=$DBPASSWORD \
    	--changeLogFile=/root/changelog.mysql.sql \
      --contexts=2_version \
      update

  fi

  if [ ! -f /etc/harmony-smp/tomcat-conf/server.xml ]; then
    rm -f /etc/harmony-smp/*.jks

    KEYSTOREPASS=$(openssl rand -base64 12)
    keytool -genkeypair -keyalg RSA -alias selfsigned -keystore /etc/harmony-smp/smp-keystore.jks -storepass $KEYSTOREPASS \
        -keypass $KEYSTOREPASS -validity 333 -keysize 3072 -dname "$SERVERDN" 2>/dev/null

    mysql harmony_smp -e  "INSERT INTO SMP_CONFIGURATION (PROPERTY, VALUE, CREATED_ON, LAST_UPDATED_ON)
         VALUES ('smp.keystore.password', '{DEC}{$KEYSTOREPASS}', NOW(), NOW())
         ON DUPLICATE KEY UPDATE VALUE='{DEC}{$KEYSTOREPASS}', LAST_UPDATED_ON=NOW();"

    TRUSTSTOREPASS=$(openssl rand -base64 12)
    keytool -genkeypair -alias mock -keystore /etc/harmony-smp/smp-truststore.jks -storepass $TRUSTSTOREPASS \
      -keypass $TRUSTSTOREPASS -dname "CN=mock" 2>/dev/null
    keytool -delete -alias mock -keystore /etc/harmony-smp/smp-truststore.jks -storepass $TRUSTSTOREPASS 2>/dev/null

    mysql harmony_smp -e  "INSERT INTO SMP_CONFIGURATION (PROPERTY, VALUE, CREATED_ON, LAST_UPDATED_ON)
         VALUES ('smp.truststore.password', '{DEC}{$TRUSTSTOREPASS}', NOW(), NOW())
         ON DUPLICATE KEY UPDATE VALUE='{DEC}{$TRUSTSTOREPASS}', LAST_UPDATED_ON=NOW();"

    TLSKEYPASS=$(openssl rand -base64 12)
    keytool -genkeypair -keyalg RSA -alias selfsigned -keystore /etc/harmony-smp/tls-keystore.jks -storepass $TLSKEYPASS \
        -keypass $TLSKEYPASS -validity 333 -keysize 3072 -dname "$SERVERDN" 2>/dev/null

    TLSTRUSTSTOREPASS=$(openssl rand -base64 12)
    keytool -export -alias selfsigned -file /etc/harmony-smp/selfsigned.cer \
        -keystore /etc/harmony-smp/tls-keystore.jks -storepass $TLSKEYPASS 2>/dev/null
    keytool -import -noprompt -alias selfsigned -file /etc/harmony-smp/selfsigned.cer \
        -keystore /etc/harmony-smp/tls-truststore.jks -storepass $TLSTRUSTSTOREPASS 2>/dev/null
    rm -f /etc/harmony-smp/selfsigned.cer

    E_TLSKEYPASS=$(escape_for_sed "$TLSKEYPASS")
    E_TLSTRUSTSTOREPASS=$(escape_for_sed "$TLSTRUSTSTOREPASS")
    E_TOMCATPORT=$(escape_for_sed "$TOMCATPORT")
    sed -e "s/{{tls_keystore_password}}/$E_TLSKEYPASS/" -e "s/{{tls_truststore_password}}/$E_TLSTRUSTSTOREPASS/" \
        -e "s/{{tomcat_port}}/$E_TOMCATPORT/" \
        /opt/harmony-smp/setup/server.xml.template > /etc/harmony-smp/tomcat-conf/server.xml

    sed -e "s/{{tls_truststore_password}}/$E_TLSTRUSTSTOREPASS/" \
        /opt/harmony-smp/setup/setenv.sh.template > /opt/harmony-smp/bin/setenv.sh

    E_DBUSER=$(escape_for_sed "$DBUSER")
    E_DBPASSWORD=$(escape_for_sed "$DBPASSWORD")
    sed -e "s/{{dbuser}}/$E_DBUSER/" \
        -e "s/{{dbpassword}}/$E_DBPASSWORD/" \
        /opt/harmony-smp/setup/context.xml.template > /etc/harmony-smp/tomcat-conf/context.xml

    # Check if Tomcat runs on a privileged port - port number below 1024
    PORT_NUMBER_REGEX='^((6553[0-5])|(655[0-2][0-9])|(65[0-4][0-9]{2})|(6[0-4][0-9]{3})|([1-5][0-9]{4})|([0-5]{0,5})|([0-9]{1,4}))$'
    if [[ $E_TOMCATPORT =~ $PORT_NUMBER_REGEX && $E_TOMCATPORT -lt 1024 ]]; then
        echo "Tomcat will run on a privileged port" >&2
        setcap cap_net_bind_service+ep /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
    fi
  fi

  # Required to support upgrade from 1.0.0 to 1.1.0
  if [ ! -f /opt/harmony-smp/bin/setenv.sh ]; then
    echo "Create /opt/harmony-smp/bin/setenv.sh file" >&2
    cp /opt/harmony-smp/setup/setenv.sh /opt/harmony-smp/bin/setenv.sh
  fi

  # Make sure the administrative user exists
  if ! getent passwd harmony-smp > /dev/null; then
    adduser --system --quiet --no-create-home --shell /usr/sbin/nologin --group --gecos "Harmony user" harmony-smp
  fi

  # check validity of user and group
  if [ "`id -u harmony-smp`" -eq 0 ]; then
    echo "The Harmony SMP system user 'harmony-smp' must not have uid 0 (root).Please fix this and reinstall this package." >&2
    exit 1
  fi
  if [ "`id -g harmony-smp`" -eq 0 ]; then
    echo "The Harmony SMP system user 'harmony-smp' must not have root as primary group. Please fix this and reinstall this package." >&2
    exit 1
  fi

  mkdir -p /opt/harmony-smp/temp

  chown -R harmony-smp:harmony-smp /opt/harmony-smp
  chmod -R 0755 /opt/harmony-smp

  # nicer log directory permissions
  mkdir -p /var/log/harmony-smp
  chmod 1770 /var/log/harmony-smp
  chown harmony-smp:adm /var/log/harmony-smp

  # config folder permissions
  chown -R harmony-smp:harmony-smp /etc/harmony-smp
  chmod -R 0751 /etc/harmony-smp

  if [ "$(systemctl is-enabled harmony-smp)" = "enabled" ]; then
    systemctl daemon-reload
    systemctl start harmony-smp 2>/dev/null || true
  fi

  SUCCESS=true
 ;;


 abort-upgrade|abort-remove|abort-deconfigure)
 ;;

 *)
    log "postinst called with unknown argument \`$1'" >&2
    exit 1
 ;;
esac

exit 0
