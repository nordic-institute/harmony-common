#!/bin/bash
. /usr/share/debconf/confmodule

set -euo pipefail

SUCCESS=false
DROPDBONERROR=false

cleanup() {
  db_stop
  if [ ! "$SUCCESS" = true ]; then
    if [[ "$DROPDBONERROR" = true && "$DB_HOST" = localhost ]]; then
      mysql -e "DROP SCHEMA $DB_SCHEMA; DROP USER $DB_USER@localhost"
    fi;
  fi
}

trap cleanup EXIT

case "$1" in
 configure)

  db_get harmony-smp/serverdn
  SERVERDN="$RET"
  db_get harmony-smp/integratewithsml
  INTEGRATESML="$RET"
  if [ ! "$INTEGRATESML" = true ]; then
    INTEGRATESML=false
  fi
  db_get harmony-smp/smlurl
  SMLURL="$RET"
  db_get harmony-smp/smpurl
  SMPURL="$RET"
  db_get harmony-smp/smpip
  SMPIP="$RET"
  db_get harmony-smp/tomcatport
  TOMCATPORT="$RET"

  db_get harmony-smp/jdbc-url || true
  JDBC_URL="${RET:-jdbc:mysql://localhost:3306/harmony_smp}"
  db_get harmony-smp/database-schema || true
  DB_SCHEMA="${RET:-harmony_smp}"
  db_get harmony-smp/database-user || true
  DB_USER="${RET:-harmony_smp}"
  db_get harmony-smp/database-password || true
  DB_PASSWORD="${RET}"
  db_get harmony-smp/database-host || true
  DB_HOST="${RET:-localhost}"

  AUSER=""
  HASHEDPASSWORD=""

  export LIQUIBASE_HOME=/opt/harmony-smp/liquibase
  export LIQUIBASE_SHOW_BANNER=false

  if [[ "$DB_HOST" = localhost ]]; then
    SCHEMA_EXISTS=$(mysql -s -N -e "SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME='$DB_SCHEMA'");

    if [ -z "$SCHEMA_EXISTS" ]; then
      echo "Creating database schema $DB_SCHEMA" >&2

      DB_PASSWORD=${DB_PASSWORD:-$(openssl rand -base64 12)}

      mysql -e \
        "create schema $DB_SCHEMA; \
        alter schema $DB_SCHEMA charset=utf8mb4 collate=utf8mb4_bin; \
        create user if not exists $DB_USER@localhost; \
        alter user $DB_USER@localhost identified by '$DB_PASSWORD'; \
        grant all on $DB_SCHEMA.* to $DB_USER@localhost;" 1>&2

      DROPDBONERROR=true
    fi
  fi

  echo "Apply Liquibase migrations"  >&2

  if [[ -z $DB_USER || -z $DB_PASSWORD ]]; then
    echo 'Existing database credentials not found' >&2
    exit 1
  fi

  db_get harmony-smp/adminuser
  AUSER="$RET"
  db_get harmony-smp/adminpassword
  APASSWORD="$RET"
  HASHEDPASSWORD=$(java -cp "/opt/harmony-smp/webapps/ROOT/WEB-INF/lib/*" \
    eu.europa.ec.edelivery.smp.utils.BCryptPasswordHash "$APASSWORD")

  $LIQUIBASE_HOME/liquibase.sh \
    --classpath=/opt/harmony-smp/lib/mysql-connector-j-8.2.0.jar \
    --driver=com.mysql.cj.jdbc.Driver \
    --url="$JDBC_URL" \
    --username="$DB_USER" \
    --password="$DB_PASSWORD" \
    --changeLogFile=/opt/harmony-smp/db/db.changelog.xml \
    update -DadminUser="$AUSER" -DadminPassword="$HASHEDPASSWORD" 1>&2

  if [ ! -f /etc/harmony-smp/tomcat-conf/server.xml ]; then
    cp /opt/harmony-smp/setup/context.xml.template /etc/harmony-smp/tomcat-conf

    rm -f /etc/harmony-smp/*.p12

    KEYSTOREPASS=$(openssl rand -base64 12)
    keytool -genkeypair -keyalg RSA -alias selfsigned \
        -keystore /etc/harmony-smp/smp-keystore.p12 -storetype PKCS12 -storepass "$KEYSTOREPASS" \
        -keypass "$KEYSTOREPASS" -validity 333 -keysize 3072 -dname "$SERVERDN" 2>/dev/null

    TRUSTSTOREPASS=$(openssl rand -base64 12)
    keytool -genkeypair -alias mock \
      -keystore /etc/harmony-smp/smp-truststore.p12 -storetype PKCS12 -storepass "$TRUSTSTOREPASS" \
      -keypass "$TRUSTSTOREPASS" -dname "CN=mock" 2>/dev/null
    keytool -delete -alias mock \
      -keystore /etc/harmony-smp/smp-truststore.p12 -storepass "$TRUSTSTOREPASS" 2>/dev/null

    TLSKEYPASS=$(openssl rand -base64 12)
    keytool -genkeypair -keyalg RSA -alias selfsigned \
        -keystore /etc/harmony-smp/tls-keystore.p12 -storetype PKCS12 -storepass "$TLSKEYPASS" \
        -keypass "$TLSKEYPASS" -validity 333 -keysize 3072 -dname "$SERVERDN" 2>/dev/null

    TLSTRUSTSTOREPASS=$(openssl rand -base64 12)
    keytool -export -alias selfsigned -file /etc/harmony-smp/selfsigned.cer \
        -keystore /etc/harmony-smp/tls-keystore.p12 -storepass "$TLSKEYPASS" 2>/dev/null
    keytool -import -noprompt -alias selfsigned -file /etc/harmony-smp/selfsigned.cer \
        -keystore /etc/harmony-smp/tls-truststore.p12 -storepass "$TLSTRUSTSTOREPASS" 2>/dev/null
    rm -f /etc/harmony-smp/selfsigned.cer

    env -i \
      tls_keystore_password="$TLSKEYPASS" \
      tls_truststore_password="$TLSTRUSTSTOREPASS" \
      tomcat_port="$TOMCATPORT" \
      envsubst </opt/harmony-smp/setup/server.xml.template >/etc/harmony-smp/tomcat-conf/server.xml

    env -i dbuser="$DB_USER" dbpassword="$DB_PASSWORD" jdbcurl="$JDBC_URL" \
      envsubst </opt/harmony-smp/setup/context.xml.template >/etc/harmony-smp/tomcat-conf/context.xml

    env -i \
      tls_truststore_password="$TLSTRUSTSTOREPASS" \
      envsubst '$tls_truststore_password' </opt/harmony-smp/setup/setenv.sh.template >/opt/harmony-smp/bin/setenv.sh

    chmod +x /opt/harmony-smp/bin/setenv.sh

    cat >/etc/harmony-smp/smp.init.properties <<EOF
# Initial configuration

smp.keystore.filename=smp-keystore.p12
smp.keystore.password={DEC}{$KEYSTOREPASS}
smp.keystore.type=PKCS12

smp.truststore.filename=smp-truststore.p12
smp.truststore.password={DEC}{$TRUSTSTOREPASS}
smp.truststore.type=PKCS12

contextPath.output=true

bdmsl.integration.enabled=$INTEGRATESML
EOF

    if [[ $INTEGRATESML = "true" ]]; then
      cat >>/etc/harmony-smp/smp.init.properties <<EOF
bdmsl.integration.url=$SMLURL
bdmsl.integration.tls.disableCNCheck=false
bdmsl.integration.logical.address=$SMPURL
bdmsl.integration.physical.address=$SMPIP
bdmsl.integration.tls.serverSubjectRegex=
EOF
    fi
  else
    xmlstarlet edit --pf --inplace \
      --update "/Context/Resource/@username" --value "$DB_USER" \
      --update "/Context/Resource/@password" --value "$DB_PASSWORD" \
      --update "/Context/Resource/@url" --value "$JDBC_URL" \
      /etc/harmony-smp/tomcat-conf/context.xml

    xmlstarlet edit --pf --inplace \
      --update '(//Connector[@SSLEnabled="true"]/@port)[1]' --value "$TOMCATPORT" \
      /etc/harmony-smp/tomcat-conf/server.xml
  fi

  DROPDBONERROR=false
  db_reset harmony-smp/adminpassword
  db_reset harmony-smp/database-password
  DB_PASSWORD=

  if dpkg --compare-versions "$2" lt-nl "2.0.0"; then
    sed -i -E '\|^export CLASSPATH=/etc/harmony-smp.*|d' /opt/harmony-smp/bin/setenv.sh || true
    echo "JAVA_HOME=$(update-java-alternatives -l | grep java-1.8 | head -n 1 | tr -s \" \" | cut -d \" \" -f 3)" >>/opt/harmony-smp/bin/setenv.sh || true
  fi

  # Make sure the administrative user exists
  if ! getent passwd harmony-smp > /dev/null; then
    adduser --system --quiet --no-create-home --shell /usr/sbin/nologin --group --gecos "Harmony user" harmony-smp
  fi

  # check validity of user and group
  if [ "$(id -u harmony-smp)" -eq 0 ]; then
    echo "The Harmony SMP system user 'harmony-smp' must not have uid 0 (root).Please fix this and reinstall this package." >&2
    exit 1
  fi
  if [ "$(id -g harmony-smp)" -eq 0 ]; then
    echo "The Harmony SMP system user 'harmony-smp' must not have root as primary group. Please fix this and reinstall this package." >&2
    exit 1
  fi

  mkdir -p /opt/harmony-smp/temp

  chown -R harmony-smp:harmony-smp /opt/harmony-smp
  chmod -R u=Xrw,g=Xr,o=X /opt/harmony-smp

  # nicer log directory permissions
  mkdir -p /var/log/harmony-smp
  chmod 1770 /var/log/harmony-smp
  chown harmony-smp:adm /var/log/harmony-smp

  # config folder permissions
  chown -R harmony-smp:harmony-smp /etc/harmony-smp
  chmod -R u=Xrw,g=Xr,o=X /etc/harmony-smp

  systemctl daemon-reload
  if [ "$(systemctl is-enabled harmony-smp)" = "enabled" ]; then
    systemctl start harmony-smp 2>/dev/null || true
  fi

  SUCCESS=true
 ;;


 abort-upgrade|abort-remove|abort-deconfigure)
 ;;

 *)
    log "postinst called with unknown argument \`$1'" >&2
    exit 1
 ;;
esac

exit 0
