-- liquibase formatted sql

-- changeset root:0002:001 contextFilter:2_0
-- set usernames for empty "users"
UPDATE SMP_USER SET USERNAME = 'USERNAME_' | SMP_USER.ID WHERE USERNAME IS NULL;
COMMIT;

CREATE TABLE SMP_ALERT (
    ID                BIGINT   NOT NULL AUTO_INCREMENT COMMENT 'Unique alert id',
    CREATED_ON        DATETIME NOT NULL,
    LAST_UPDATED_ON   DATETIME NOT NULL,
    ALERT_LEVEL       VARCHAR(255),
    ALERT_STATUS      VARCHAR(255),
    ALERT_STATUS_DESC VARCHAR(1024),
    ALERT_TYPE        VARCHAR(255),
    MAIL_SUBJECT      VARCHAR(1024),
    MAIL_TO           VARCHAR(1024),
    PROCESSED_TIME    DATETIME,
    REPORTING_TIME    DATETIME,
    FOR_USERNAME      VARCHAR(256),
    PRIMARY KEY (ID)
) COMMENT='SMP alerts' ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE SMP_ALERT_AUD (
    ID                BIGINT NOT NULL,
    REV               BIGINT NOT NULL,
    REVTYPE           TINYINT,
    CREATED_ON        DATETIME,
    LAST_UPDATED_ON   DATETIME,
    ALERT_LEVEL       VARCHAR(255),
    ALERT_STATUS      VARCHAR(255),
    ALERT_STATUS_DESC VARCHAR(1024),
    ALERT_TYPE        VARCHAR(255),
    MAIL_SUBJECT      VARCHAR(1024),
    MAIL_TO           VARCHAR(1024),
    PROCESSED_TIME    DATETIME,
    REPORTING_TIME    DATETIME,
    FOR_USERNAME      VARCHAR(256),
    PRIMARY KEY (ID, REV)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE SMP_ALERT_PROPERTY (
    ID              BIGINT   NOT NULL AUTO_INCREMENT COMMENT 'Unique alert property id',
    CREATED_ON      DATETIME NOT NULL,
    LAST_UPDATED_ON DATETIME NOT NULL,
    PROPERTY        VARCHAR(255),
    VALUE           VARCHAR(1024),
    FK_ALERT_ID     BIGINT,
    PRIMARY KEY (ID)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE SMP_ALERT_PROPERTY_AUD (
    ID              BIGINT NOT NULL,
    REV             BIGINT NOT NULL,
    REVTYPE         TINYINT,
    CREATED_ON      DATETIME,
    LAST_UPDATED_ON DATETIME,
    PROPERTY        VARCHAR(255),
    VALUE           VARCHAR(1024),
    FK_ALERT_ID     BIGINT,
    PRIMARY KEY (ID, REV)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

ALTER TABLE SMP_CERTIFICATE ADD EXPIRE_LAST_ALERT_ON DATETIME COMMENT 'Generated last expire alert';
ALTER TABLE SMP_CERTIFICATE_AUD ADD EXPIRE_LAST_ALERT_ON DATETIME COMMENT 'Generated last expire alert';

CREATE TABLE SMP_CONFIGURATION_AUD (
    PROPERTY        VARCHAR(512) NOT NULL,
    REV             BIGINT       NOT NULL,
    REVTYPE         TINYINT,
    CREATED_ON      DATETIME,
    LAST_UPDATED_ON DATETIME,
    DESCRIPTION     VARCHAR(4000),
    VALUE           VARCHAR(4000),
    PRIMARY KEY (PROPERTY, REV)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

ALTER TABLE SMP_USER
    MODIFY USERNAME VARCHAR(256) NOT NULL COMMENT 'Unique username identifier. The Username must not be null',
    ADD ACCESS_TOKEN VARCHAR(256) COMMENT 'BCrypted personal access token',
    ADD ACCESS_TOKEN_LAST_ALERT_ON DATETIME COMMENT 'Generated last access token expire alert',
    ADD ACCESS_TOKEN_EXPIRE_ON DATETIME COMMENT 'Date when personal access token will expire',
    ADD ACCESS_TOKEN_GENERATED_ON DATETIME COMMENT 'Date when personal access token was generated',
    ADD ACCESS_TOKEN_ID VARCHAR(256) COMMENT 'Personal access token id',
    ADD LAST_FAILED_LOGIN_ON DATETIME COMMENT 'Last failed login attempt',
    ADD AT_LAST_FAILED_LOGIN_ON DATETIME COMMENT 'Last failed token login attempt',
    ADD PASSWORD_LAST_ALERT_ON DATETIME COMMENT 'Generated last password expire alert',
    ADD PASSWORD_EXPIRE_ON DATETIME COMMENT 'Date when password will expire',
    ADD LOGIN_FAILURE_COUNT integer COMMENT 'Sequential login failure count',
    ADD AT_LOGIN_FAILURE_COUNT integer COMMENT 'Sequential token login failure count';

ALTER TABLE SMP_USER_AUD
    ADD ACCESS_TOKEN VARCHAR(256) COMMENT 'BCrypted personal access token',
    ADD ACCESS_TOKEN_LAST_ALERT_ON DATETIME COMMENT 'Generated last access token expire alert',
    ADD ACCESS_TOKEN_EXPIRE_ON DATETIME COMMENT 'Date when personal access token will expire',
    ADD ACCESS_TOKEN_GENERATED_ON DATETIME COMMENT 'Date when personal access token was generated',
    ADD ACCESS_TOKEN_ID VARCHAR(256) COMMENT 'Personal access token id',
    ADD LAST_FAILED_LOGIN_ON DATETIME COMMENT 'Last failed login attempt',
    ADD AT_LAST_FAILED_LOGIN_ON DATETIME COMMENT 'Last failed token login attempt',
    ADD PASSWORD_LAST_ALERT_ON DATETIME COMMENT 'Generated last password expire alert',
    ADD PASSWORD_EXPIRE_ON DATETIME COMMENT 'Date when password will expire',
    ADD LOGIN_FAILURE_COUNT integer COMMENT 'Sequential login failure count',
    ADD AT_LOGIN_FAILURE_COUNT integer COMMENT 'Sequential token login failure count';

ALTER TABLE SMP_USER ADD CONSTRAINT UK_TK9BJSMD2MEVGT3B997I6PL27 UNIQUE (ACCESS_TOKEN_ID);

ALTER TABLE SMP_ALERT_AUD ADD CONSTRAINT FKRW0QNTO448OJLIRPFMFNTD8V2 FOREIGN KEY (REV) REFERENCES SMP_REV_INFO (ID);

ALTER TABLE SMP_ALERT_PROPERTY ADD CONSTRAINT FK15R37W3R5TY5F6074YKR2O4I6 FOREIGN KEY (FK_ALERT_ID) REFERENCES SMP_ALERT (ID);

ALTER TABLE SMP_ALERT_PROPERTY_AUD ADD CONSTRAINT FKOD33QJX87IH1A0SKXL2SGDDAR FOREIGN KEY (REV) REFERENCES SMP_REV_INFO (ID);

ALTER TABLE SMP_CONFIGURATION_AUD ADD CONSTRAINT FKD4YHBDLUSOVFBDTI1FJKUXP9M FOREIGN KEY (REV) REFERENCES SMP_REV_INFO (ID);

SET FOREIGN_KEY_CHECKS = 0;
ALTER TABLE SMP_REV_INFO MODIFY COLUMN ID BIGINT NOT NULL AUTO_INCREMENT;
ALTER TABLE SMP_SERVICE_GROUP MODIFY COLUMN ID BIGINT NOT NULL AUTO_INCREMENT COMMENT 'Unique ServiceGroup id';
ALTER TABLE SMP_SERVICE_GROUP_DOMAIN MODIFY COLUMN ID BIGINT NOT NULL AUTO_INCREMENT;
ALTER TABLE SMP_SERVICE_METADATA MODIFY COLUMN ID BIGINT NOT NULL AUTO_INCREMENT COMMENT 'Shared primary key with master table SMP_SERVICE_METADATA';
ALTER TABLE SMP_USER MODIFY COLUMN ID BIGINT NOT NULL AUTO_INCREMENT COMMENT 'Unique user id';
SET FOREIGN_KEY_CHECKS = 1;

-- drop sequence tables, because the are not needed anymore!
DROP TABLE SMP_DOMAIN_SEQ;
DROP TABLE SMP_REVISION_SEQ;
DROP TABLE SMP_SERVICE_GROUP_DOMAIN_SEQ;
DROP TABLE SMP_SERVICE_GROUP_SEQ;
DROP TABLE SMP_SERVICE_METADATA_SEQ;
DROP TABLE SMP_USER_SEQ;

-- set init back-compatible credentials to access tokens
UPDATE SMP_USER SET ACCESS_TOKEN_ID = SMP_USER.USERNAME, ACCESS_TOKEN = SMP_USER.PASSWORD;
COMMIT;
